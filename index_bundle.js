(()=>{"use strict";var e={681:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(537),i=n.n(a),o=n(645),r=n.n(o)()(i());r.push([e.id,"\n.listModalFormContainer {\n    display: flex;\n    justify-content: center;    \n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color:rgba(36, 36, 36, 0.9);   \n    transform: translate(-300vw, 0vh);\n    pointer-events: none;\n    transition: 0.4s;\n}\n.listFormContainerVisible {\n    transform: translate(0vw, 0vh);\n    pointer-events: all;\n}\n\n\n.listFormModalListItemEdit {\ndisplay: flex;\nflex-direction: column;\nposition: fixed;\ntop: 3%;\nborder: 5px solid #ffffff;\nbackground: rgb(216, 215, 215);\nborder-radius: 5px;\ncolor: black;\nmin-width: 250px;\nheight: 200px;\ntransition: border 2s;\n}\n\n.listFormModalLabel {\n    display: flex;\n    font-size: 0.8rem;\n    font-weight: bold;\n    margin: 10px 10px 0px 10px;\n}\n\n.listFormModalInput {\n    display: flex;\n    margin: 3px 10px 0px 10px;\n}\n\n.listFormModalDoneButton {\n    display: flex;\n    align-self: center;\n    align-items: center;\n    justify-content: center;\n    margin-top: 10px;\n    width: 150px;   \n}\n\n.listUpdateHasSavedMessageFormModal {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-self: center;\n    margin-top: 10px;\n    background-color: rgb(22, 186, 30);\n    color: rgb(249, 249, 249);\n    border-radius: 5px;\n    padding: 3px 3px 3px 3px;\n    height:20px;\n    opacity: 0;\n    width:100px;\n    transition: 3s;\n}\n\n.listUpdateHasSavedMessageFormModalShow {\n    z-index: 1;\n    opacity: 1;\n    \n}\n\n.listFormModalListItemEditSaved {\n    border: 5px solid #30db05;\n}","",{version:3,sources:["webpack://./src/listFormModalStyle.css"],names:[],mappings:";AACA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,MAAM;IACN,OAAO;IACP,QAAQ;IACR,SAAS;IACT,sCAAsC;IACtC,iCAAiC;IACjC,oBAAoB;IACpB,gBAAgB;AACpB;AACA;IACI,8BAA8B;IAC9B,mBAAmB;AACvB;;;AAGA;AACA,aAAa;AACb,sBAAsB;AACtB,eAAe;AACf,OAAO;AACP,yBAAyB;AACzB,8BAA8B;AAC9B,kBAAkB;AAClB,YAAY;AACZ,gBAAgB;AAChB,aAAa;AACb,qBAAqB;AACrB;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,iBAAiB;IACjB,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;IAClB,gBAAgB;IAChB,kCAAkC;IAClC,yBAAyB;IACzB,kBAAkB;IAClB,wBAAwB;IACxB,WAAW;IACX,UAAU;IACV,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,UAAU;;AAEd;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["\n.listModalFormContainer {\n    display: flex;\n    justify-content: center;    \n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color:rgba(36, 36, 36, 0.9);   \n    transform: translate(-300vw, 0vh);\n    pointer-events: none;\n    transition: 0.4s;\n}\n.listFormContainerVisible {\n    transform: translate(0vw, 0vh);\n    pointer-events: all;\n}\n\n\n.listFormModalListItemEdit {\ndisplay: flex;\nflex-direction: column;\nposition: fixed;\ntop: 3%;\nborder: 5px solid #ffffff;\nbackground: rgb(216, 215, 215);\nborder-radius: 5px;\ncolor: black;\nmin-width: 250px;\nheight: 200px;\ntransition: border 2s;\n}\n\n.listFormModalLabel {\n    display: flex;\n    font-size: 0.8rem;\n    font-weight: bold;\n    margin: 10px 10px 0px 10px;\n}\n\n.listFormModalInput {\n    display: flex;\n    margin: 3px 10px 0px 10px;\n}\n\n.listFormModalDoneButton {\n    display: flex;\n    align-self: center;\n    align-items: center;\n    justify-content: center;\n    margin-top: 10px;\n    width: 150px;   \n}\n\n.listUpdateHasSavedMessageFormModal {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-self: center;\n    margin-top: 10px;\n    background-color: rgb(22, 186, 30);\n    color: rgb(249, 249, 249);\n    border-radius: 5px;\n    padding: 3px 3px 3px 3px;\n    height:20px;\n    opacity: 0;\n    width:100px;\n    transition: 3s;\n}\n\n.listUpdateHasSavedMessageFormModalShow {\n    z-index: 1;\n    opacity: 1;\n    \n}\n\n.listFormModalListItemEditSaved {\n    border: 5px solid #30db05;\n}"],sourceRoot:""}]);const s=r},426:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(537),i=n.n(a),o=n(645),r=n.n(o)()(i());r.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ------- end of CSS Reset ------------------------------------------------------------------- */\n/* ------- end of CSS Reset ------------------------------------------------------------------- */\n/* ------- end of CSS Reset ------------------------------------------------------------------- */\n\n\n\nbody {\n    background-color: rgb(41, 41, 41);\n    color: white;\n}\n\n.nav {\n    display: flex;\n    justify-content: space-between;\n}\n\n.logoContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 15px;\n}\n\n.navTitle {\n    display: flex;\n}\n\n.updateHasSavedMessage {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgb(22, 186, 30);\n    color: rgb(249, 249, 249);\n    border: 1px solid white;\n    border-radius: 5px;\n    padding: 3px 3px 3px 3px;\n    height:20px;\n    width:140px;\n    opacity: 0;\n    z-index: -1;\n    transition: 2s;\n    position: fixed;\n    right: 0;\n}\n.updateHasSavedMessageShow {\n    z-index: 1;\n    opacity: 1;\n    \n}\n\n.navAddNewItem {\n    display: flex;\n    cursor: pointer;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    width:150px;\n    border-radius: 3px;\n    border: 1px solid rgb(86, 87, 86);\n    background-color: rgb(22, 186, 30);\n    color: rgb(255, 255, 255);\n    margin: 0px 0px 5px 5px;\n    transition: 0.5s;\n}\n.navAddNewItem:hover {\n    border-width: 2px;\n}\n\n.navAddNewItemLeftMenuOut {\n    margin-top: 0px;\n}\n\n.mainContainerDiv {\n    display: flex;\n    flex-wrap: nowrap;\n}\n\n\n.leftMenu {\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    position: fixed;\n    top: 0;\n    left: 0;\n    overflow: none;\n    width: 50px;\n    height: 100vh;\n    background-color: rgb(118, 118, 115);\n    transition: 1s;\n}\n\n\n.leftMenuFlyOut {\n    width: 200px;\n    background-color: rgb(230, 230, 230);\n    overflow: auto;\n}\n.leftMenuFlyOut::-webkit-scrollbar {\n    width: 10px;\n    background: #f1f1f1; \n}\n.leftMenuFlyOut::-webkit-scrollbar-track {\n    background: #5c5959; \n}\n.leftMenuFlyOut::-webkit-scrollbar-thumb {\n    background: rgb(77, 76, 76); \n}\n  .leftMenuFlyOut::-webkit-scrollbar-thumb:hover {\n    background: rgb(225, 222, 222); \n}\n\n.burgerFlyOutButton {\n\n    align-self: center;\n    border: 0px;\n    background-color:rgba(0, 0, 0, 0);\n    margin-top: 10px;\n    transition: 0.5s;\n    cursor: pointer;   \n}\n.burgerFlyOut {\n    display: flex;\n    width:30px;\n    align-self: center;\n    transition: 0.5s;\n    \n    cursor: pointer;\n}\n.burgerFlyOutButtonHide {\n    width: 0px;\n    height:0px;\n    transform: translate(-100vw, 0vh);\n}\n\n\n.leftMenuProjectItemList {\n    list-style-type: none;\n    padding-left: 0px;\n    transform: translate(-100vw, 0vh);   \n    transition: 0.5s;\n}\n\n.leftMenuProjectItemListShow {\n    transform: translate(0vw, 0vh);   \n}\n\n.leftMenuProjectItem {\n    display: flex;\n    align-items: center;\n    text-align: left;\n    width:180px;\n    border: 1px solid rgb(152, 152, 152);\n    background-color: rgb(43, 42, 42);\n    color: rgb(255, 255, 255);\n    border-radius: 0px 6px 6px 0px;\n    margin-top: 1px;\n    padding: 5px;\n    cursor: pointer;\n    margin-top: 3px;\n}\n\n.leftMenuProjectItem:hover {\n    background-color: rgb(22, 186, 30);\n}\n\n.ListImgEle {\n    width:20px;\n    height: 20px;\n    margin-right: 5px;\n}\n\n.leftMenuProjectItemText {\n    font-size: 1rem;\n}\n\n.leftMenuItemShowAsSelected {\n    background-color: rgb(5, 121, 11);\n    border: 1px solid rgb(75, 75, 75);\n    color: white;\n\n}\n\n.mainPageListContainer {\n    margin: auto;\n    height: 100vh;\n}\n\n.mainPageListContentNavBar {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding-top:10px;\n    gap: 3px;\n    font-weight: bold;\n}\n\n.listTitle {\n    color: white;\n    font-weight: bold;\n    font-size: 1.3rem;\n}\n\n.buttonAddAnotherMainPageListItem {\n    display: flex;\n    cursor: pointer;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    width:100px;\n    border-radius: 3px;\n    border: 1px solid rgb(191, 191, 191);\n    background-color: rgb(5, 121, 11);\n    color: white;\n    margin: 0px 0px 5px 5px;\n    transition: 0.5s;\n}\n.buttonAddAnotherMainPageListItem:hover {\n    border-color: white;\n    background-color: rgb(22, 186, 30);\n}\n\n.mainPageListContent {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    overflow: auto;\n    padding: 10px;\n}\n\n.contentBreakPoint {\n    transform: translate(-100vw, 0vh);   \n    transition: 0.5s;\n    height:0px;\n}\n.contentBreakPointShow {\n    border: 1px solid rgb(147, 147, 145);\n    border-radius: 3px;\n    margin-top: 2vh;\n    transform: translate(0vw, 0vh);\n    height:100%;\n}\n.contentBreakPointImg {\n    width:23px;\n}\n\n.breakPointHeading {\n    display: flex; \n    align-items: center;\n    gap: 4px;\n    font-weight: bold;\n    padding: 5px;\n}\n\n.mainPageListItemCard {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: center;\n    padding-bottom: 10px;\n    padding-top: 10px;\n    width: 100%;\n    border-bottom: 1px solid rgb(99, 97, 97);\n    transition: 0.2s;\n}\n\n.mainPageListItemCardMouseInside {\n    background-color: #5c5959;\n    cursor: pointer;\n}\n\n.mainPageListItemCardActive {\n    /* border: 1px solid white; */\n    background-color: #5c5959;\n    border-radius: 3px;\n}\n\n.mainPageListItemContentLeft {\n    display: flex;\n    flex-direction: column;\n}\n\n.mainPageListItemContentRight {\n    display: flex;\n    margin-right: 10px;\n}\n\n.formDisplayDueDate {\n    margin-left: 25px;\n    font-size: 0.8rem;\n    color: #b6acac;\n    background-color: rgba(0, 0, 0, 0);\n    border: 0;\n    cursor: pointer;\n    text-align: left;\n    opacity: 0;\n    transform: 1.5s;\n}\n\n.formDisplayDueDateShow {\n    opacity: 1;\n}\n\n.formDisplayDueDateCompleted {\n    text-decoration: line-through;\n}\n\n.formDisplayDueDate:hover {\n    color: #b6acac;\n    text-decoration: underline;\n}\n\n.mainPageListItemForm {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n\n.listFormTitleText {\n    border: 0px;\n    background-color:rgba(0, 0, 0, 0);\n    color: white;\n    resize: none;\n    margin-left: 4px;\n    width: 60vw;\n    height: 1.2rem;\n}\n\n.listFormTitleText:hover{\n    border-left: 2px dotted white;\n}\n\n.listFormTitleText:focus{\n    outline: none;\n    border-left: 2px dotted white;\n}\n\n.listFormActionButton {\n    background-color: rgba(0, 0, 0, 0);\n    padding:0px;\n    border: 0;\n    cursor: pointer;\n}\n.listFormActionButton:hover {\n    animation: showActive 2s;\n    animation-iteration-count: infinite;\n}\n.checkBoxImgEle {\n    width:25px;\n    margin: 0px 2px 0px 4px;\n}\n\n.pencilImgEle {\n    width:25px;\n    margin: 0px 2px 0px 4px;\n}\n\n.trashImgEle {\n    width:28px;\n    margin: 0px 4px 0px 4px;\n}\n\n\n@keyframes showActive {\n    0% { transform: rotate(0deg); }\n    25% { transform: rotate(20deg) scale(1.35); }\n    75% { transform: rotate(-20deg) scale(1.35); }\n    100% { transform: rotate(00deg);}\n  }\n\n\n\n@media (max-width: 610px) {\n    .mainPageListContainer {\n        margin-left: 50px;\n        margin-left: 50px;\n    }\n   \n    .mainPageListItemContentLeft {\n        width:100%;\n    }\n    \n    .mainPageListItemContentRight {\n        justify-content: flex-end;\n        width:100%;\n    }\n\n    .inputBoxMin16 {\n        font-size: max(1em, 16px);\n    }\n  \n  }","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ------- end of CSS Reset ------------------------------------------------------------------- */\n/* ------- end of CSS Reset ------------------------------------------------------------------- */\n/* ------- end of CSS Reset ------------------------------------------------------------------- */\n\n\n\nbody {\n    background-color: rgb(41, 41, 41);\n    color: white;\n}\n\n.nav {\n    display: flex;\n    justify-content: space-between;\n}\n\n.logoContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 15px;\n}\n\n.navTitle {\n    display: flex;\n}\n\n.updateHasSavedMessage {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgb(22, 186, 30);\n    color: rgb(249, 249, 249);\n    border: 1px solid white;\n    border-radius: 5px;\n    padding: 3px 3px 3px 3px;\n    height:20px;\n    width:140px;\n    opacity: 0;\n    z-index: -1;\n    transition: 2s;\n    position: fixed;\n    right: 0;\n}\n.updateHasSavedMessageShow {\n    z-index: 1;\n    opacity: 1;\n    \n}\n\n.navAddNewItem {\n    display: flex;\n    cursor: pointer;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    width:150px;\n    border-radius: 3px;\n    border: 1px solid rgb(86, 87, 86);\n    background-color: rgb(22, 186, 30);\n    color: rgb(255, 255, 255);\n    margin: 0px 0px 5px 5px;\n    transition: 0.5s;\n}\n.navAddNewItem:hover {\n    border-width: 2px;\n}\n\n.navAddNewItemLeftMenuOut {\n    margin-top: 0px;\n}\n\n.mainContainerDiv {\n    display: flex;\n    flex-wrap: nowrap;\n}\n\n\n.leftMenu {\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    position: fixed;\n    top: 0;\n    left: 0;\n    overflow: none;\n    width: 50px;\n    height: 100vh;\n    background-color: rgb(118, 118, 115);\n    transition: 1s;\n}\n\n\n.leftMenuFlyOut {\n    width: 200px;\n    background-color: rgb(230, 230, 230);\n    overflow: auto;\n}\n.leftMenuFlyOut::-webkit-scrollbar {\n    width: 10px;\n    background: #f1f1f1; \n}\n.leftMenuFlyOut::-webkit-scrollbar-track {\n    background: #5c5959; \n}\n.leftMenuFlyOut::-webkit-scrollbar-thumb {\n    background: rgb(77, 76, 76); \n}\n  .leftMenuFlyOut::-webkit-scrollbar-thumb:hover {\n    background: rgb(225, 222, 222); \n}\n\n.burgerFlyOutButton {\n\n    align-self: center;\n    border: 0px;\n    background-color:rgba(0, 0, 0, 0);\n    margin-top: 10px;\n    transition: 0.5s;\n    cursor: pointer;   \n}\n.burgerFlyOut {\n    display: flex;\n    width:30px;\n    align-self: center;\n    transition: 0.5s;\n    \n    cursor: pointer;\n}\n.burgerFlyOutButtonHide {\n    width: 0px;\n    height:0px;\n    transform: translate(-100vw, 0vh);\n}\n\n\n.leftMenuProjectItemList {\n    list-style-type: none;\n    padding-left: 0px;\n    transform: translate(-100vw, 0vh);   \n    transition: 0.5s;\n}\n\n.leftMenuProjectItemListShow {\n    transform: translate(0vw, 0vh);   \n}\n\n.leftMenuProjectItem {\n    display: flex;\n    align-items: center;\n    text-align: left;\n    width:180px;\n    border: 1px solid rgb(152, 152, 152);\n    background-color: rgb(43, 42, 42);\n    color: rgb(255, 255, 255);\n    border-radius: 0px 6px 6px 0px;\n    margin-top: 1px;\n    padding: 5px;\n    cursor: pointer;\n    margin-top: 3px;\n}\n\n.leftMenuProjectItem:hover {\n    background-color: rgb(22, 186, 30);\n}\n\n.ListImgEle {\n    width:20px;\n    height: 20px;\n    margin-right: 5px;\n}\n\n.leftMenuProjectItemText {\n    font-size: 1rem;\n}\n\n.leftMenuItemShowAsSelected {\n    background-color: rgb(5, 121, 11);\n    border: 1px solid rgb(75, 75, 75);\n    color: white;\n\n}\n\n.mainPageListContainer {\n    margin: auto;\n    height: 100vh;\n}\n\n.mainPageListContentNavBar {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding-top:10px;\n    gap: 3px;\n    font-weight: bold;\n}\n\n.listTitle {\n    color: white;\n    font-weight: bold;\n    font-size: 1.3rem;\n}\n\n.buttonAddAnotherMainPageListItem {\n    display: flex;\n    cursor: pointer;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    width:100px;\n    border-radius: 3px;\n    border: 1px solid rgb(191, 191, 191);\n    background-color: rgb(5, 121, 11);\n    color: white;\n    margin: 0px 0px 5px 5px;\n    transition: 0.5s;\n}\n.buttonAddAnotherMainPageListItem:hover {\n    border-color: white;\n    background-color: rgb(22, 186, 30);\n}\n\n.mainPageListContent {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    overflow: auto;\n    padding: 10px;\n}\n\n.contentBreakPoint {\n    transform: translate(-100vw, 0vh);   \n    transition: 0.5s;\n    height:0px;\n}\n.contentBreakPointShow {\n    border: 1px solid rgb(147, 147, 145);\n    border-radius: 3px;\n    margin-top: 2vh;\n    transform: translate(0vw, 0vh);\n    height:100%;\n}\n.contentBreakPointImg {\n    width:23px;\n}\n\n.breakPointHeading {\n    display: flex; \n    align-items: center;\n    gap: 4px;\n    font-weight: bold;\n    padding: 5px;\n}\n\n.mainPageListItemCard {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: center;\n    padding-bottom: 10px;\n    padding-top: 10px;\n    width: 100%;\n    border-bottom: 1px solid rgb(99, 97, 97);\n    transition: 0.2s;\n}\n\n.mainPageListItemCardMouseInside {\n    background-color: #5c5959;\n    cursor: pointer;\n}\n\n.mainPageListItemCardActive {\n    /* border: 1px solid white; */\n    background-color: #5c5959;\n    border-radius: 3px;\n}\n\n.mainPageListItemContentLeft {\n    display: flex;\n    flex-direction: column;\n}\n\n.mainPageListItemContentRight {\n    display: flex;\n    margin-right: 10px;\n}\n\n.formDisplayDueDate {\n    margin-left: 25px;\n    font-size: 0.8rem;\n    color: #b6acac;\n    background-color: rgba(0, 0, 0, 0);\n    border: 0;\n    cursor: pointer;\n    text-align: left;\n    opacity: 0;\n    transform: 1.5s;\n}\n\n.formDisplayDueDateShow {\n    opacity: 1;\n}\n\n.formDisplayDueDateCompleted {\n    text-decoration: line-through;\n}\n\n.formDisplayDueDate:hover {\n    color: #b6acac;\n    text-decoration: underline;\n}\n\n.mainPageListItemForm {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n\n.listFormTitleText {\n    border: 0px;\n    background-color:rgba(0, 0, 0, 0);\n    color: white;\n    resize: none;\n    margin-left: 4px;\n    width: 60vw;\n    height: 1.2rem;\n}\n\n.listFormTitleText:hover{\n    border-left: 2px dotted white;\n}\n\n.listFormTitleText:focus{\n    outline: none;\n    border-left: 2px dotted white;\n}\n\n.listFormActionButton {\n    background-color: rgba(0, 0, 0, 0);\n    padding:0px;\n    border: 0;\n    cursor: pointer;\n}\n.listFormActionButton:hover {\n    animation: showActive 2s;\n    animation-iteration-count: infinite;\n}\n.checkBoxImgEle {\n    width:25px;\n    margin: 0px 2px 0px 4px;\n}\n\n.pencilImgEle {\n    width:25px;\n    margin: 0px 2px 0px 4px;\n}\n\n.trashImgEle {\n    width:28px;\n    margin: 0px 4px 0px 4px;\n}\n\n\n@keyframes showActive {\n    0% { transform: rotate(0deg); }\n    25% { transform: rotate(20deg) scale(1.35); }\n    75% { transform: rotate(-20deg) scale(1.35); }\n    100% { transform: rotate(00deg);}\n  }\n\n\n\n@media (max-width: 610px) {\n    .mainPageListContainer {\n        margin-left: 50px;\n        margin-left: 50px;\n    }\n   \n    .mainPageListItemContentLeft {\n        width:100%;\n    }\n    \n    .mainPageListItemContentRight {\n        justify-content: flex-end;\n        width:100%;\n    }\n\n    .inputBoxMin16 {\n        font-size: max(1em, 16px);\n    }\n  \n  }"],sourceRoot:""}]);const s=r},413:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(537),i=n.n(a),o=n(645),r=n.n(o)()(i());r.push([e.id,"\n.modalFormContainer {\n    display: flex;\n    justify-content: center;    \n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color:rgba(36, 36, 36, 0.9);   \n    transform: translate(-300vw, 0vh);\n    pointer-events: none;\n    transition: 0.4s;\n}\n.formContainerVisible {\n    visibility: visible;\n    transform: translate(0vw, 0vh);\n    pointer-events: all;\n}\n\n\n.formModalListItemEdit {\ndisplay: flex;\nflex-direction: column;\nposition: fixed;\ntop: 3%;\nborder: 5px solid #ffffff;\nbackground: rgb(216, 215, 215);\nborder-radius: 5px;\ncolor: black;\nmin-width: 250px;\nheight: 200px;\ntransition: border 2s;\n}\n\n.formModalLabel {\n    display: flex;\n    font-size: 0.8rem;\n    font-weight: bold;\n    margin: 10px 10px 0px 10px;\n}\n\n.formModalInput {\n    display: flex;\n    margin: 3px 10px 0px 10px;\n}\n\n.formModalDoneButton {\n    display: flex;\n    align-self: center;\n    align-items: center;\n    justify-content: center;\n    margin-top: 10px;\n    width: 150px;   \n}\n\n.updateHasSavedMessageFormModal {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-self: center;\n    margin-top: 10px;\n    background-color: rgb(22, 186, 30);\n    color: rgb(249, 249, 249);\n    border-radius: 5px;\n    padding: 3px 3px 3px 3px;\n    height:20px;\n    opacity: 0;\n    width:100px;\n    transition: 3s;\n}\n\n.updateHasSavedMessageFormModalShow {\n    z-index: 1;\n    opacity: 1;\n    \n}\n\n.formModalListItemEditSaved {\n    border: 5px solid #30db05;\n}","",{version:3,sources:["webpack://./src/taskFormModalStyle.css"],names:[],mappings:";AACA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,MAAM;IACN,OAAO;IACP,QAAQ;IACR,SAAS;IACT,sCAAsC;IACtC,iCAAiC;IACjC,oBAAoB;IACpB,gBAAgB;AACpB;AACA;IACI,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;AACvB;;;AAGA;AACA,aAAa;AACb,sBAAsB;AACtB,eAAe;AACf,OAAO;AACP,yBAAyB;AACzB,8BAA8B;AAC9B,kBAAkB;AAClB,YAAY;AACZ,gBAAgB;AAChB,aAAa;AACb,qBAAqB;AACrB;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,iBAAiB;IACjB,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;IAClB,gBAAgB;IAChB,kCAAkC;IAClC,yBAAyB;IACzB,kBAAkB;IAClB,wBAAwB;IACxB,WAAW;IACX,UAAU;IACV,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,UAAU;;AAEd;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["\n.modalFormContainer {\n    display: flex;\n    justify-content: center;    \n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color:rgba(36, 36, 36, 0.9);   \n    transform: translate(-300vw, 0vh);\n    pointer-events: none;\n    transition: 0.4s;\n}\n.formContainerVisible {\n    visibility: visible;\n    transform: translate(0vw, 0vh);\n    pointer-events: all;\n}\n\n\n.formModalListItemEdit {\ndisplay: flex;\nflex-direction: column;\nposition: fixed;\ntop: 3%;\nborder: 5px solid #ffffff;\nbackground: rgb(216, 215, 215);\nborder-radius: 5px;\ncolor: black;\nmin-width: 250px;\nheight: 200px;\ntransition: border 2s;\n}\n\n.formModalLabel {\n    display: flex;\n    font-size: 0.8rem;\n    font-weight: bold;\n    margin: 10px 10px 0px 10px;\n}\n\n.formModalInput {\n    display: flex;\n    margin: 3px 10px 0px 10px;\n}\n\n.formModalDoneButton {\n    display: flex;\n    align-self: center;\n    align-items: center;\n    justify-content: center;\n    margin-top: 10px;\n    width: 150px;   \n}\n\n.updateHasSavedMessageFormModal {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-self: center;\n    margin-top: 10px;\n    background-color: rgb(22, 186, 30);\n    color: rgb(249, 249, 249);\n    border-radius: 5px;\n    padding: 3px 3px 3px 3px;\n    height:20px;\n    opacity: 0;\n    width:100px;\n    transition: 3s;\n}\n\n.updateHasSavedMessageFormModalShow {\n    z-index: 1;\n    opacity: 1;\n    \n}\n\n.formModalListItemEditSaved {\n    border: 5px solid #30db05;\n}"],sourceRoot:""}]);const s=r},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,i,o){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(r[d]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);a&&r[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),t.push(A))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(i," */"),r=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(r).concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var o={},r=[],s=0;s<e.length;s++){var d=e[s],l=a.base?d[0]+a.base:d[0],A=o[l]||0,c="".concat(l," ").concat(A);o[l]=A+1;var u=n(c),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var p=i(m,a);a.byIndex=s,t.splice(s,0,{identifier:c,updater:p,references:1})}r.push(c)}return r}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var o=a(e=e||[],i=i||{});return function(e){e=e||[];for(var r=0;r<o.length;r++){var s=n(o[r]);t[s].references--}for(var d=a(e,i),l=0;l<o.length;l++){var A=n(o[l]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}o=d}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,i&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},360:(e,t,n)=>{e.exports=n.p+"319a85031255c4db50c7.png"},646:(e,t,n)=>{e.exports=n.p+"33c217c8c748af0ac16b.png"},200:(e,t,n)=>{e.exports=n.p+"3d328df32ee5e90706b6.png"},60:(e,t,n)=>{e.exports=n.p+"6e2f5ff1c39f8f122698.png"},737:(e,t,n)=>{e.exports=n.p+"e5aceff78ea544b02ece.png"},245:(e,t,n)=>{e.exports=n.p+"7e1f51864d694fc3f984.png"},183:(e,t,n)=>{e.exports=n.p+"e5cc9ca02bbcc06df2b3.png"},517:(e,t,n)=>{e.exports=n.p+"b997e08ae4e6c90ed484.png"},923:(e,t,n)=>{e.exports=n.p+"480df0598fa953a878bb.png"},268:(e,t,n)=>{e.exports=n.p+"88b192400d7bb86d91b0.png"},131:(e,t,n)=>{e.exports=n.p+"c50cc8375e71ea3741e1.png"},746:(e,t,n)=>{e.exports=n.p+"7266b467350ad44c62f7.png"}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var o=t[a]={id:a,exports:{}};return e[a](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e=n(379),t=n.n(e),a=n(795),i=n.n(a),o=n(569),r=n.n(o),s=n(565),d=n.n(s),l=n(216),A=n.n(l),c=n(589),u=n.n(c),m=n(426),p={};p.styleTagTransform=u(),p.setAttributes=d(),p.insert=r().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=A(),t()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;var g=n(413),f={};f.styleTagTransform=u(),f.setAttributes=d(),f.insert=r().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=A(),t()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals;var C=n(681),h={};function I(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}function b(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function B(e){b(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function x(e){b(1,arguments);var t=B(e);return t.setHours(0,0,0,0),t}h.styleTagTransform=u(),h.setAttributes=d(),h.insert=r().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=A(),t()(C.Z,h),C.Z&&C.Z.locals&&C.Z.locals;var v=864e5;function y(e,t){b(2,arguments);var n=x(e),a=x(t),i=n.getTime()-I(n),o=a.getTime()-I(a);return Math.round((i-o)/v)}Math.pow(10,8);var w=36e5;function L(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}function M(e,t){b(1,arguments);var n=t||{},a=null==n.additionalDigits?2:L(n.additionalDigits);if(2!==a&&1!==a&&0!==a)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof e&&"[object String]"!==Object.prototype.toString.call(e))return new Date(NaN);var i,o=F(e);if(o.date){var r=P(o.date,a);i=j(r.restDateString,r.year)}if(!i||isNaN(i.getTime()))return new Date(NaN);var s,d=i.getTime(),l=0;if(o.time&&(l=N(o.time),isNaN(l)))return new Date(NaN);if(!o.timezone){var A=new Date(d+l),c=new Date(0);return c.setFullYear(A.getUTCFullYear(),A.getUTCMonth(),A.getUTCDate()),c.setHours(A.getUTCHours(),A.getUTCMinutes(),A.getUTCSeconds(),A.getUTCMilliseconds()),c}return s=q(o.timezone),isNaN(s)?new Date(NaN):new Date(d+l+s)}var k={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},S=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,D=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,E=/^([+-])(\d{2})(?::?(\d{2}))?$/;function F(e){var t,n={},a=e.split(k.dateTimeDelimiter);if(a.length>2)return n;if(/:/.test(a[0])?t=a[0]:(n.date=a[0],t=a[1],k.timeZoneDelimiter.test(n.date)&&(n.date=e.split(k.timeZoneDelimiter)[0],t=e.substr(n.date.length,e.length))),t){var i=k.timezone.exec(t);i?(n.time=t.replace(i[1],""),n.timezone=i[1]):n.time=t}return n}function P(e,t){var n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),a=e.match(n);if(!a)return{year:NaN,restDateString:""};var i=a[1]?parseInt(a[1]):null,o=a[2]?parseInt(a[2]):null;return{year:null===o?i:100*o,restDateString:e.slice((a[1]||a[2]).length)}}function j(e,t){if(null===t)return new Date(NaN);var n=e.match(S);if(!n)return new Date(NaN);var a=!!n[4],i=T(n[1]),o=T(n[2])-1,r=T(n[3]),s=T(n[4]),d=T(n[5])-1;if(a)return function(e,t,n){return t>=1&&t<=53&&n>=0&&n<=6}(0,s,d)?function(e,t,n){var a=new Date(0);a.setUTCFullYear(e,0,4);var i=7*(t-1)+n+1-(a.getUTCDay()||7);return a.setUTCDate(a.getUTCDate()+i),a}(t,s,d):new Date(NaN);var l=new Date(0);return function(e,t,n){return t>=0&&t<=11&&n>=1&&n<=(W[t]||(O(e)?29:28))}(t,o,r)&&function(e,t){return t>=1&&t<=(O(e)?366:365)}(t,i)?(l.setUTCFullYear(t,o,Math.max(i,r)),l):new Date(NaN)}function T(e){return e?parseInt(e):1}function N(e){var t=e.match(D);if(!t)return NaN;var n=U(t[1]),a=U(t[2]),i=U(t[3]);return function(e,t,n){return 24===e?0===t&&0===n:n>=0&&n<60&&t>=0&&t<60&&e>=0&&e<25}(n,a,i)?n*w+6e4*a+1e3*i:NaN}function U(e){return e&&parseFloat(e.replace(",","."))||0}function q(e){if("Z"===e)return 0;var t=e.match(E);if(!t)return 0;var n="+"===t[1]?-1:1,a=parseInt(t[2]),i=t[3]&&parseInt(t[3])||0;return function(e,t){return t>=0&&t<=59}(0,i)?n*(a*w+6e4*i):NaN}var W=[31,null,31,30,31,30,31,31,30,31,30,31];function O(e){return e%400==0||e%4==0&&e%100!=0}function H(e,t){b(2,arguments);var n=B(e),a=B(t),i=n.getTime()-a.getTime();return i<0?-1:i>0?1:i}function Y(e,t){b(2,arguments);var n=B(e),a=B(t),i=n.getFullYear()-a.getFullYear(),o=n.getMonth()-a.getMonth();return 12*i+o}function z(e){b(1,arguments);var t=B(e);return t.setHours(23,59,59,999),t}function X(e){b(1,arguments);var t=B(e),n=t.getMonth();return t.setFullYear(t.getFullYear(),n+1,0),t.setHours(23,59,59,999),t}function V(e){b(1,arguments);var t=B(e);return z(t).getTime()===X(t).getTime()}function Z(e,t){b(2,arguments);var n,a=B(e),i=B(t),o=H(a,i),r=Math.abs(Y(a,i));if(r<1)n=0;else{1===a.getMonth()&&a.getDate()>27&&a.setDate(30),a.setMonth(a.getMonth()-o*r);var s=H(a,i)===-o;V(B(e))&&1===r&&1===H(e,i)&&(s=!1),n=o*(r-Number(s))}return 0===n?0:n}function R(e,t){return b(2,arguments),B(e).getTime()-B(t).getTime()}var Q={ceil:Math.ceil,round:Math.round,floor:Math.floor,trunc:function(e){return e<0?Math.ceil(e):Math.floor(e)}};function G(e){return e?Q[e]:Q.trunc}function J(e,t,n){b(2,arguments);var a=R(e,t)/1e3;return G(null==n?void 0:n.roundingMethod)(a)}var $={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function K(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.width?String(t.width):e.defaultWidth,a=e.formats[n]||e.formats[e.defaultWidth];return a}}const _={date:K({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:K({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:K({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var ee={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function te(e){return function(t,n){var a,i=n||{};if("formatting"===(i.context?String(i.context):"standalone")&&e.formattingValues){var o=e.defaultFormattingWidth||e.defaultWidth,r=i.width?String(i.width):o;a=e.formattingValues[r]||e.formattingValues[o]}else{var s=e.defaultWidth,d=i.width?String(i.width):e.defaultWidth;a=e.values[d]||e.values[s]}return a[e.argumentCallback?e.argumentCallback(t):t]}}const ne={ordinalNumber:function(e,t){var n=Number(e),a=n%100;if(a>20||a<10)switch(a%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:te({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:te({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return e-1}}),month:te({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:te({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:te({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function ae(e){return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=n.width,i=a&&e.matchPatterns[a]||e.matchPatterns[e.defaultMatchWidth],o=t.match(i);if(!o)return null;var r,s=o[0],d=a&&e.parsePatterns[a]||e.parsePatterns[e.defaultParseWidth],l=Array.isArray(d)?oe(d,(function(e){return e.test(s)})):ie(d,(function(e){return e.test(s)}));r=e.valueCallback?e.valueCallback(l):l,r=n.valueCallback?n.valueCallback(r):r;var A=t.slice(s.length);return{value:r,rest:A}}}function ie(e,t){for(var n in e)if(e.hasOwnProperty(n)&&t(e[n]))return n}function oe(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return n}var re,se={ordinalNumber:(re={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.match(re.matchPattern);if(!n)return null;var a=n[0],i=e.match(re.parsePattern);if(!i)return null;var o=re.valueCallback?re.valueCallback(i[0]):i[0];o=t.valueCallback?t.valueCallback(o):o;var r=e.slice(a.length);return{value:o,rest:r}}),era:ae({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:ae({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:ae({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:ae({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:ae({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const de={code:"en-US",formatDistance:function(e,t,n){var a,i=$[e];return a="string"==typeof i?i:1===t?i.one:i.other.replace("{{count}}",t.toString()),null!=n&&n.addSuffix?n.comparison&&n.comparison>0?"in "+a:a+" ago":a},formatLong:_,formatRelative:function(e,t,n,a){return ee[e]},localize:ne,match:se,options:{weekStartsOn:0,firstWeekContainsDate:1}};function le(e){return function(e,t){if(null==e)throw new TypeError("assign requires that input parameter not be null or undefined");for(var n in t=t||{})Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}({},e)}var Ae=1440,ce=43200;function ue(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};b(2,arguments);var a=n.locale||de;if(!a.formatDistance)throw new RangeError("locale must contain formatDistance property");var i=H(e,t);if(isNaN(i))throw new RangeError("Invalid time value");var o,r,s=le(n);s.addSuffix=Boolean(n.addSuffix),s.comparison=i,i>0?(o=B(t),r=B(e)):(o=B(e),r=B(t));var d,l=J(r,o),A=(I(r)-I(o))/1e3,c=Math.round((l-A)/60);if(c<2)return n.includeSeconds?l<5?a.formatDistance("lessThanXSeconds",5,s):l<10?a.formatDistance("lessThanXSeconds",10,s):l<20?a.formatDistance("lessThanXSeconds",20,s):l<40?a.formatDistance("halfAMinute",null,s):l<60?a.formatDistance("lessThanXMinutes",1,s):a.formatDistance("xMinutes",1,s):0===c?a.formatDistance("lessThanXMinutes",1,s):a.formatDistance("xMinutes",c,s);if(c<45)return a.formatDistance("xMinutes",c,s);if(c<90)return a.formatDistance("aboutXHours",1,s);if(c<Ae){var u=Math.round(c/60);return a.formatDistance("aboutXHours",u,s)}if(c<2520)return a.formatDistance("xDays",1,s);if(c<ce){var m=Math.round(c/Ae);return a.formatDistance("xDays",m,s)}if(c<86400)return d=Math.round(c/ce),a.formatDistance("aboutXMonths",d,s);if((d=Z(r,o))<12){var p=Math.round(c/ce);return a.formatDistance("xMonths",p,s)}var g=d%12,f=Math.floor(d/12);return g<3?a.formatDistance("aboutXYears",f,s):g<9?a.formatDistance("overXYears",f,s):a.formatDistance("almostXYears",f+1,s)}function me(e,t){return b(1,arguments),ue(e,Date.now(),t)}function pe(){const e=ge(),t=e=>{localStorage.setItem(e.ID,JSON.stringify(e))};return{findNextListID:()=>{const e=Object.keys(localStorage);let t=0;return e.length>0&&(t=e.reduce((function(e,t){return Math.max(e,t)}),-1/0)+1),t},addListItemToDB:t,getListItemDetails:(e,t)=>{let n=[];const a=Object.keys(localStorage);for(let e in a){const t=JSON.parse(localStorage.getItem(a[e]));null!=t&&n.push(t)}if("isParent"==e)return n.filter((function(e){return"parent"==e.parentList&&1==e.committed}));if("get1Item"==e&&t>-1)return n.find((e=>e.ID==t));if("getListItemChildren"==e){const e=n.filter((function(e){return e.parentList==t}));return e.sort((function(e,t){let n=0;const a=new Date;let i=y(M(e.dueDate),a),o=y(M(t.dueDate),a);return isNaN(i)&&(n+=-100),i>o&&(n+=-1),i<o&&(n+=1),n})),e}return"uncommitted"==e?n.filter((function(e){return 0==e.committed})):void 0},createListObjectFromStorage:t=>e.newListItem(t.ID,t.title,t.dueDate,t.importance,t.pinned,t.parentList,t.selected,t.committed,t.completed),addStateSelected:e=>{e.selected=!0,t(e)},removeStateSelected:e=>{e.selected=!1,t(e)},daysUntilDue:e=>{const t=M(e.dueDate);let n={};if(""==e.dueDate&&(n.daysUntilDue="0",n.daysUntilDueWords="Set a due date..."),""!=e.dueDate){const e=y(t,new Date);e<0?(n.daysUntilDue="-1",n.daysUntilDueWords=`Due ${me(t,{addSuffix:!0})}`):(n.daysUntilDue=e,n.daysUntilDueWords=`Due ${me(t,{addSuffix:!0})}`)}return n},deleteThisObjectFromDB:e=>{localStorage.removeItem(e.ID)}}}function ge(){return{newListItem:(e,t,n,a,i,o,r,s,d)=>{const l=pe(),A=ke();isNaN(e)&&(e=l.findNextListID());const c={ID:e,title:t,dueDate:n,importance:a,pinned:i,parentList:o,selected:r,committed:s,committed:s,completed:d,completed:d,addItemtoDB(){l.addListItemToDB(c)},selectedStateAdd(){l.addStateSelected(c)},selectedStateRemove(){l.removeStateSelected(c)},displayChildList(){A.displayListItemChildren(c)},daysLeftToDue:()=>l.daysUntilDue(c),deleteFromDB(){l.deleteThisObjectFromDB(c)}};return c}}}var fe=n(60),Ce=n(737),he=n(923),Ie=n(245),be=n(360),Be=n(517),xe=n(183),ve=n(200),ye=n(268),we=n(131),Le=n(646),Me=n(746);function ke(){const e=pe(),t=ge(),n=function(){const e=pe(),t=e=>{const t=document.querySelector(".modalFormContainer");"external"!=e&&n(),t.classList.remove("formContainerVisible")},n=()=>{const t=document.querySelector(".formModalListItemEdit").dataset.itemid,n=e.getListItemDetails("get1Item",t),a=e.createListObjectFromStorage(n),i=e.getListItemDetails("get1Item",a.parentList);e.createListObjectFromStorage(i).displayChildList()};return{createForm:()=>{document.querySelectorAll(".modalFormContainer").forEach((e=>e.remove()));const n=document.querySelector(".mainContainerDiv"),a=document.createElement("div");a.classList.add("modalFormContainer"),n.appendChild(a);const i=document.createElement("form");i.classList.add("formModalListItemEdit"),i.setAttribute("name","modalForm"),i.setAttribute("data-parentList",NaN),i.setAttribute("data-itemID",NaN),i.setAttribute("method","post"),i.setAttribute("action","#"),a.appendChild(i);const o=document.createElement("label");o.setAttribute("for","title"),o.classList.add("formModalLabel"),o.textContent="Note (required)",i.appendChild(o);const r=document.createElement("input");r.setAttribute("type","text"),r.required=!0,r.classList.add("taskFormTitle"),r.classList.add("formModalInput"),r.classList.add("inputBoxMin16"),r.setAttribute("id","taskFormTitle"),r.setAttribute("name","title"),r.value="n/a",i.appendChild(r);const s=document.createElement("label");s.setAttribute("for","dueDate"),s.classList.add("formModalLabel"),s.textContent="Due Date (optional)",i.appendChild(s);let d=document.createElement("input");d.setAttribute("type","date"),d.setAttribute("id","listFormDueDate"),d.setAttribute("name","dueDate"),d.classList.add("listFormDueDate"),d.classList.add("formModalInput"),d.setAttribute("value",""),i.appendChild(d);const l=document.createElement("button");l.classList.add("formModalDoneButton"),l.textContent="Done",i.appendChild(l);const A=document.createElement("div");A.classList.add("updateHasSavedMessageFormModal"),A.textContent="Saved",i.appendChild(A),i.addEventListener("input",(function(t){const n=t.target.closest("form").dataset.itemid,a=e.getListItemDetails("get1Item",n),o=e.createListObjectFromStorage(a);o.title=r.value,o.dueDate=d.value,o.committed=!0,o.addItemtoDB(o),A.classList.add("updateHasSavedMessageFormModalShow"),i.classList.add("formModalListItemEditSaved")})),A.addEventListener("transitionend",(function(e){e.target.classList.remove("updateHasSavedMessageFormModalShow"),i.classList.remove("formModalListItemEditSaved")})),a.addEventListener("submit",(e=>{e.preventDefault()})),a.addEventListener("click",(e=>{1==!e.target.closest(".formModalListItemEdit")&&t()})),window.addEventListener("keydown",(function(e){"Escape"==e.key&&t()})),l.addEventListener("click",(e=>{t()}))},updateInputValues:e=>{const t=document.querySelector(".formModalListItemEdit"),n=document.getElementById("taskFormTitle"),a=document.getElementById("listFormDueDate");n.value=e.title,a.value=e.dueDate,t.setAttribute("data-parentList",e.parentList),t.setAttribute("data-itemID",e.ID)},showForm:()=>{document.getElementById("taskFormTitle").focus(),document.querySelector(".modalFormContainer").classList.add("formContainerVisible")},closeModalForm:t}}(),a=function(){const e=pe(),t=()=>{const t=ke(),n=document.querySelector(".listModalFormContainer");if(console.log(n.classList),n.classList.contains("listFormContainerVisible")){console.log(n.classList);const a=document.querySelector(".listFormModalListItemEdit").dataset.itemid;console.log(a);const i=e.getListItemDetails("get1Item",a),o=e.createListObjectFromStorage(i);if(1==o.committed){const e=t.addListItemToMenu(o);t.showLeftMenuSelected(e,o,!1),o.displayChildList()}n.classList.remove("listFormContainerVisible")}};return{createForm:()=>{document.querySelectorAll(".listModalFormContainer").forEach((e=>e.remove()));const n=document.querySelector(".mainContainerDiv"),a=document.createElement("div");a.classList.add("listModalFormContainer"),n.appendChild(a);const i=document.createElement("form");i.classList.add("listFormModalListItemEdit"),i.setAttribute("name","modalForm"),i.setAttribute("data-parentList",NaN),i.setAttribute("data-itemID",NaN),i.setAttribute("method","post"),i.setAttribute("action","#"),a.appendChild(i);const o=document.createElement("label");o.setAttribute("for","title"),o.classList.add("listFormModalLabel"),o.textContent="List Title",i.appendChild(o);const r=document.createElement("input");r.setAttribute("type","text"),r.required=!0,r.classList.add("listFormTitle"),r.placeholder="List Title",r.classList.add("listFormModalInput"),r.classList.add("inputBoxMin16"),r.setAttribute("id","listFormTitle"),r.setAttribute("name","title"),i.appendChild(r);const s=document.createElement("button");s.classList.add("listFormModalDoneButton"),s.textContent="Done",i.appendChild(s);const d=document.createElement("div");d.classList.add("listUpdateHasSavedMessageFormModal"),d.textContent="Saved",i.appendChild(d),r.addEventListener("input",(function(t){if(t.target.value.length>0){const n=t.target.closest("form").dataset.itemid,a=e.getListItemDetails("get1Item",n),o=e.createListObjectFromStorage(a);o.title=r.value,o.committed=!0,o.addItemtoDB(o),d.classList.add("listUpdateHasSavedMessageFormModalShow"),i.classList.add("listFormModalListItemEditSaved")}})),d.addEventListener("transitionend",(function(e){e.target.classList.remove("listUpdateHasSavedMessageFormModalShow"),i.classList.remove("listFormModalListItemEditSaved")})),a.addEventListener("submit",(e=>{e.preventDefault()})),a.addEventListener("click",(e=>{1==!e.target.closest(".listFormModalListItemEdit")&&t()})),window.addEventListener("keydown",(function(e){"Escape"==e.key&&t()})),s.addEventListener("click",(e=>{t()}))},updateInputValues:e=>{const t=document.querySelector(".listFormModalListItemEdit");document.getElementById("listFormTitle").value="",t.setAttribute("data-parentList",e.parentList),t.setAttribute("data-itemID",e.ID)},showForm:()=>{document.getElementById("listFormTitle").focus(),document.querySelector(".listModalFormContainer").classList.add("listFormContainerVisible")},closeModalForm:t}}(),i=()=>{const e=document.querySelector(".mainPageListContent"),t=document.createElement("div");t.classList.add("contentBreakPoint"),t.classList.add("mainPageListContentNewItem"),e.appendChild(t);const n=document.createElement("div");n.classList.add("breakPointHeading"),t.appendChild(n);const a=new Image;a.classList.add("contentBreakPointImg"),a.alt="New",a.src=Ie,n.appendChild(a);const i=document.createElement("h2");i.textContent="New",i.classList.add("breakPointHeadingText"),n.appendChild(i);const o=document.createElement("div");o.classList.add("contentBreakPoint"),o.classList.add("mainPageListContentOverdue"),e.appendChild(o);const r=document.createElement("div");r.classList.add("breakPointHeading"),o.appendChild(r);const s=new Image;s.classList.add("contentBreakPointImg"),s.alt="Overdue",s.src=he,r.appendChild(s);const d=document.createElement("h2");d.textContent="Overdue",d.classList.add("breakPointHeading"),r.appendChild(d);const l=document.createElement("div");l.classList.add("contentBreakPoint"),l.classList.add("mainPageListContentNextWeek"),e.appendChild(l);const A=document.createElement("div");A.classList.add("breakPointHeading"),l.appendChild(A);const c=new Image;c.classList.add("contentBreakPointImg"),c.alt="Due this week",c.src=be,A.appendChild(c);const u=document.createElement("h2");u.textContent="In the next week",u.classList.add("breakPointHeading"),A.appendChild(u);const m=document.createElement("div");m.classList.add("contentBreakPoint"),m.classList.add("mainPageListContentAfterNextWeek"),e.appendChild(m);const p=document.createElement("div");p.classList.add("breakPointHeading"),m.appendChild(p);const g=new Image;g.classList.add("contentBreakPointImg"),g.alt="Due over a week away",g.src=Be,p.appendChild(g);const f=document.createElement("h2");f.textContent="More than a week away",f.classList.add("breakPointHeading"),p.appendChild(f);const C=document.createElement("div");C.classList.add("contentBreakPoint"),C.classList.add("mainPageListContentNoDateSet"),e.appendChild(C);const h=document.createElement("div");h.classList.add("breakPointHeading"),C.appendChild(h);const I=new Image;I.classList.add("contentBreakPointImg"),I.alt="Due over a week away",I.src=xe,h.appendChild(I);const b=document.createElement("h2");b.textContent="No due date",b.classList.add("breakPointHeading"),h.appendChild(b);const B=document.createElement("div");B.classList.add("contentBreakPoint"),B.classList.add("mainPageListContentComplete"),e.appendChild(B);const x=document.createElement("div");x.classList.add("breakPointHeading"),B.appendChild(x);const v=new Image;v.classList.add("contentBreakPointImg"),v.alt="Due over a week away",v.src=ve,x.appendChild(v);const y=document.createElement("h2");y.textContent="Completed",y.classList.add("breakPointHeading"),x.appendChild(y)},o=e=>{const n=t.newListItem(NaN,"","",1,!1,e,!1,!1,!1);n.addItemtoDB(),s(n).querySelector("input").focus()},r=e=>{e.classList.contains("contentBreakPointShow")||e.classList.add("contentBreakPointShow")},s=t=>{const i=t.daysLeftToDue();let o=document.querySelector(".mainPageListContent");1==t.completed?(o=document.querySelector(".mainPageListContentComplete"),r(o)):0==t.committed?(o=document.querySelector(".mainPageListContentNewItem"),r(o)):i.daysUntilDue<0?(o=document.querySelector(".mainPageListContentOverdue"),r(o)):i.daysUntilDue>0&&i.daysUntilDue<=7?(o=document.querySelector(".mainPageListContentNextWeek"),r(o)):i.daysUntilDue>7?(o=document.querySelector(".mainPageListContentAfterNextWeek"),r(o)):0==i.daysUntilDue&&(o=document.querySelector(".mainPageListContentNoDateSet"),r(o));const s=document.createElement("div");s.classList.add("mainPageListItemCard"),o.insertBefore(s,o.firstChild),(e=>{const t=e.querySelector(".breakPointHeading");e.insertBefore(t,e.firstChild)})(o);const l=document.createElement("div");l.classList.add("mainPageListItemContentLeft"),s.appendChild(l);let A=document.createElement("form");A.classList.add("mainPageListItemForm"),A.setAttribute("data-parentList",t.parentList),A.setAttribute("data-itemid",t.ID),A.setAttribute("method","post"),A.setAttribute("action","#"),l.appendChild(A),A.addEventListener("submit",(e=>{e.preventDefault()}));let c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("name","List Item Title"),c.classList.add("listFormTitleText"),c.classList.add("inputBoxMin16"),""==t.title?c.placeholder="Task Title ":c.value=t.title,A.appendChild(c);let u=document.createElement("button");u.textContent=`${i.daysUntilDueWords}`,u.classList.add("formDisplayDueDate"),l.appendChild(u),t.title.length>0&&(u.classList.add("formDisplayDueDateShow"),1==t.completed&&u.classList.add("formDisplayDueDateCompleted"));const m=document.createElement("div");m.classList.add("mainPageListItemContentRight"),s.appendChild(m);const p=document.createElement("button");p.classList.add("checkBoxImgButton"),p.classList.add("listFormActionButton"),m.appendChild(p);const g=new Image;1==t.completed?g.src=Le:g.src=Me,g.classList.add("checkBoxImgEle"),g.alt="Checkbox: Mark this entry as complete",p.appendChild(g),p.addEventListener("click",(function(n){n.target.closest(".mainPageListItemCard"),document.querySelector(".mainPageListContentComplete"),t.completed=!t.completed,t.addItemtoDB();const a=e.getListItemDetails("get1Item",t.parentList);e.createListObjectFromStorage(a).displayChildList()}));const f=document.createElement("button");f.classList.add("pencilImgButton"),f.classList.add("listFormActionButton"),m.appendChild(f);const C=new Image;C.src=ye,C.classList.add("pencilImgEle"),C.alt="Pencil: Edit this entry",f.appendChild(C);const h=document.createElement("button");h.classList.add("trashImgButton"),h.classList.add("listFormActionButton"),m.appendChild(h);const I=new Image;I.src=we,I.alt="Bin: Delete this entry",I.classList.add("trashImgEle"),h.appendChild(I);const b=document.createElement("p");return b.classList.add("updateHasSavedMessage"),b.textContent="Saved",b.setAttribute("data-savedtag",t.ID),m.appendChild(b),c.addEventListener("input",(function(e){if(e.target.value.length>0){t.title=e.target.value,t.committed=!0,t.addItemtoDB(t);const n=document.querySelector(`p[data-savedtag="${t.ID}"]`);n.classList.add("updateHasSavedMessageShow"),n.addEventListener("transitionend",(function(e){n.classList.remove("updateHasSavedMessageShow")})),e.target.closest(".mainPageListItemContentLeft").querySelector(".formDisplayDueDate").classList.add("formDisplayDueDateShow")}})),s.addEventListener("click",(function(e){e.target.classList.contains("trashImgButton")||e.target.classList.contains("trashImgEle")||d(e.target.closest(".mainPageListItemCard"))})),h.addEventListener("click",(function(e){const n=e.target.closest(".mainPageListItemCard");1==confirm(`Delete: \n\nTitle: ${t.title}`)&&(n.remove(),t.deleteFromDB())})),s.addEventListener("mouseenter",(e=>{e.target.classList.add("mainPageListItemCardMouseInside")})),s.addEventListener("mouseleave",(e=>{e.target.classList.remove("mainPageListItemCardMouseInside")})),u.addEventListener("click",(function(e){a.closeModalForm(),n.updateInputValues(t),n.showForm(t)})),f.addEventListener("click",(function(e){a.closeModalForm(),n.updateInputValues(t),n.showForm()})),1==t.selected&&d(s),A},d=t=>{document.querySelectorAll(".mainPageListItemCardActive").forEach((t=>{t.classList.remove("mainPageListItemCardActive");const n=t.querySelector(".mainPageListItemForm").dataset.itemid,a=e.getListItemDetails("get1Item",n),i=e.createListObjectFromStorage(a);i.selected=!1,i.addItemtoDB()}));const n=t.querySelector(".mainPageListItemForm").dataset.itemid,a=e.getListItemDetails("get1Item",n),i=e.createListObjectFromStorage(a);i.selected=!0,i.addItemtoDB(),t.classList.add("mainPageListItemCardActive")},l=e=>{const t=document.querySelector(".leftMenuProjectItemList"),i=document.createElement("button");i.classList.add("leftMenuProjectItem"),i.setAttribute("data-listitemid",e.ID),t.insertBefore(i,t.firstChild);const o=new Image;o.classList.add("ListImgEle"),o.alt="list icon",o.src=fe,o.setAttribute("data-listitemid",e.ID),i.appendChild(o);const r=document.createElement("p");return r.classList.add("leftMenuProjectItemText"),r.textContent=e.title,r.setAttribute("data-listitemid",e.ID),i.appendChild(r),i.addEventListener("click",(function(e){a.closeModalForm(),n.closeModalForm("external"),u(),c(e.target)})),(e=>{const t=document.querySelector(".navAddNewItem"),n=document.querySelector(".leftMenuProjectItemList");n.insertBefore(t,n.firstChild)})(),i},A=(t,n,a)=>{const i=document.querySelectorAll(".leftMenuItemShowAsSelected");if(null!=i&&0==a)for(let t=0;t<i.length;t++){const n=e.getListItemDetails("get1Item",i[t].dataset.listitemid);e.createListObjectFromStorage(n).selectedStateRemove(),i[t].classList.remove("leftMenuItemShowAsSelected")}const o=t.closest("button");1==n.selected&&o.classList.add("leftMenuItemShowAsSelected")},c=t=>{const n=e.getListItemDetails("get1Item",t.dataset.listitemid),a=e.createListObjectFromStorage(n);1!=a.selected&&(a.selectedStateAdd(),A(t,a,!1),a.displayChildList(),m())},u=()=>{const t=e.getListItemDetails("uncommitted");for(let n=0;n<t.length;n++)e.createListObjectFromStorage(t[n]).deleteFromDB()},m=e=>{const t=document.querySelector(".burgerFlyOutButton"),n=document.querySelector(".navAddNewItem"),a=document.querySelector(".leftMenu"),i=document.querySelector(".leftMenuProjectItemList");"flyOut"==e?(t.classList.add("burgerFlyOutButtonHide"),n.classList.add("navAddNewItemLeftMenuOut"),a.classList.add("leftMenuFlyOut"),i.classList.add("leftMenuProjectItemListShow")):(t.classList.remove("burgerFlyOutButtonHide"),n.classList.remove("navAddNewItemLeftMenuOut"),a.classList.remove("leftMenuFlyOut"),i.classList.remove("leftMenuProjectItemListShow"))};return{initialSetUp:()=>{const o=document.createElement("div");o.classList.add("content"),document.querySelector("body").appendChild(o);const r=document.createElement("section");r.classList.add("mainContainerDiv"),o.appendChild(r);const s=document.createElement("div");s.classList.add("leftMenu"),r.appendChild(s);const d=document.createElement("button");d.classList.add("burgerFlyOutButton"),s.appendChild(d);const c=new Image;c.classList.add("burgerFlyOut"),c.alt="Show Menu",c.src=Ce,d.appendChild(c),d.addEventListener("click",(e=>{m("flyOut")}));const u=document.createElement("nav");u.classList.add("leftMenuProjectItemList"),s.appendChild(u);const p=document.createElement("div");p.classList.add("mainPageListContainer"),r.appendChild(p);const g=document.createElement("nav");g.classList.add("mainPageListContentNavBar"),p.appendChild(g);const f=document.createElement("section");f.classList.add("mainPageListContent"),p.appendChild(f),i();const C=document.createElement("button");C.textContent="New List ++",C.classList.add("navAddNewItem"),u.insertBefore(C,u.firstChild),0==localStorage.length&&t.newListItem(NaN,"To Do List","",1,!1,"parent",!0,!0,!1).addItemtoDB();const h=e.getListItemDetails("isParent",null);for(let t=0;t<h.length;t++){const n=e.createListObjectFromStorage(h[t]),a=l(n);A(a,n,!0),1==n.selected&&n.displayChildList()}n.createForm(),a.createForm()},initialEventListeners:()=>{const e=document.querySelector(".leftMenu");e.addEventListener("mouseenter",(e=>{m("flyOut")})),e.addEventListener("mouseleave",(e=>{m("flyIn")})),document.querySelectorAll(".leftMenuProjectItem").forEach((e=>e.addEventListener("click",(function(e){c(e.target)})))),document.querySelector(".navAddNewItem").addEventListener("click",(function(e){u(),n.closeModalForm("external");const i=t.newListItem(NaN,"","",1,!1,"parent",!0,!1,!1);i.addItemtoDB(),a.updateInputValues(i),m(),a.showForm(i)}))},addListItemToMenu:l,displayListItemChildren:t=>{const n=e.getListItemDetails("getListItemChildren",t.ID),a=document.querySelector(".mainPageListContent");for(;a.firstChild;)a.removeChild(a.firstChild);i();const r=document.querySelector(".listTitle");null!=r&&r.remove();const d=document.querySelector(".mainPageListContentNavBar"),l=t.title,A=document.createElement("h2");if(A.classList.add("listTitle"),A.textContent=l,d.appendChild(A),1==t.selected){if(n.length>0)for(let t in n){const a=e.createListObjectFromStorage(n[t]);s(a)}else o(t.ID);const a=document.querySelector(".buttonAddAnotherMainPageListItem");null!=a&&a.remove();const i=document.createElement("button");i.classList.add("buttonAddAnotherMainPageListItem"),i.textContent="+ Add Task",i.alt="Add a task to this list",d.appendChild(i),i.addEventListener("click",(function(e){o(t.ID)}))}},showLeftMenuSelected:A,deleteUncommittedEntries:u}}const Se=ke();Se.initialSetUp(),Se.initialEventListeners()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YUFDdkMyRyxFQUF5QmhGLElBQU0sMEJBQy9CdUUsRUFBMEJuZSxZQUFZNGUsR0FDdENBLEVBQXlCckcsaUJBQWlCLFNBQVMsU0FBUzFZLEdBQ3hEcWIsRUFBb0J2SCxFQUFTRyxTQXVaeURzRixxQkFBQUEsRUFBc0I0RCx5QkFBQUEsR0dyckJwSCxNQUFNNkIsR0FBcUJwSSxLQUMzQm9JLEdBQW1CZixlQUNuQmUsR0FBbUJSLHlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvbGlzdEZvcm1Nb2RhbFN0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvdGFza0Zvcm1Nb2RhbFN0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3RvZG9saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvdGFza0Zvcm1Nb2RhbFN0eWxlLmNzcz80ZTI0Iiwid2VicGFjazovL3RvZG9saXN0Ly4vc3JjL2xpc3RGb3JtTW9kYWxTdHlsZS5jc3M/ZmZkYyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9nZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vdG9EYXRlL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9zdGFydE9mRGF5L2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9kaWZmZXJlbmNlSW5DYWxlbmRhckRheXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2NvbnN0YW50cy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi90b0ludGVnZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL3BhcnNlSVNPL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9jb21wYXJlQXNjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9kaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vZW5kT2ZEYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2VuZE9mTW9udGgvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2lzTGFzdERheU9mTW9udGgvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2RpZmZlcmVuY2VJbk1vbnRocy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL3JvdW5kaW5nTWV0aG9kcy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vZGlmZmVyZW5jZUluU2Vjb25kcy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0RGlzdGFuY2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9fbGliL2J1aWxkRm9ybWF0TG9uZ0ZuL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvZW4tVVMvX2xpYi9mb3JtYXRMb25nL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvZW4tVVMvX2xpYi9mb3JtYXRSZWxhdGl2ZS9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL19saWIvYnVpbGRMb2NhbGl6ZUZuL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvZW4tVVMvX2xpYi9sb2NhbGl6ZS9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL19saWIvYnVpbGRNYXRjaEZuL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvZW4tVVMvX2xpYi9tYXRjaC9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL19saWIvYnVpbGRNYXRjaFBhdHRlcm5Gbi9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL2VuLVVTL2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2Nsb25lT2JqZWN0L2luZGV4LmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2Fzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vZm9ybWF0RGlzdGFuY2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2Zvcm1hdERpc3RhbmNlVG9Ob3cvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvZGF0YUV2ZW50cy5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9MaXN0SXRlbU9iai5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9ET01ldmVudHMuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvdGFza0Zvcm1Nb2RhbC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9saXN0Rm9ybU1vZGFsLmpzIiwid2VicGFjazovL3RvZG9saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuLmxpc3RNb2RhbEZvcm1Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgICAgXFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgdG9wOiAwO1xcbiAgICBsZWZ0OiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgYm90dG9tOiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzYsIDM2LCAzNiwgMC45KTsgICBcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTMwMHZ3LCAwdmgpO1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gICAgdHJhbnNpdGlvbjogMC40cztcXG59XFxuLmxpc3RGb3JtQ29udGFpbmVyVmlzaWJsZSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDB2dywgMHZoKTtcXG4gICAgcG9pbnRlci1ldmVudHM6IGFsbDtcXG59XFxuXFxuXFxuLmxpc3RGb3JtTW9kYWxMaXN0SXRlbUVkaXQge1xcbmRpc3BsYXk6IGZsZXg7XFxuZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5wb3NpdGlvbjogZml4ZWQ7XFxudG9wOiAzJTtcXG5ib3JkZXI6IDVweCBzb2xpZCAjZmZmZmZmO1xcbmJhY2tncm91bmQ6IHJnYigyMTYsIDIxNSwgMjE1KTtcXG5ib3JkZXItcmFkaXVzOiA1cHg7XFxuY29sb3I6IGJsYWNrO1xcbm1pbi13aWR0aDogMjUwcHg7XFxuaGVpZ2h0OiAyMDBweDtcXG50cmFuc2l0aW9uOiBib3JkZXIgMnM7XFxufVxcblxcbi5saXN0Rm9ybU1vZGFsTGFiZWwge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmb250LXNpemU6IDAuOHJlbTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIG1hcmdpbjogMTBweCAxMHB4IDBweCAxMHB4O1xcbn1cXG5cXG4ubGlzdEZvcm1Nb2RhbElucHV0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgbWFyZ2luOiAzcHggMTBweCAwcHggMTBweDtcXG59XFxuXFxuLmxpc3RGb3JtTW9kYWxEb25lQnV0dG9uIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG4gICAgd2lkdGg6IDE1MHB4OyAgIFxcbn1cXG5cXG4ubGlzdFVwZGF0ZUhhc1NhdmVkTWVzc2FnZUZvcm1Nb2RhbCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMiwgMTg2LCAzMCk7XFxuICAgIGNvbG9yOiByZ2IoMjQ5LCAyNDksIDI0OSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgcGFkZGluZzogM3B4IDNweCAzcHggM3B4O1xcbiAgICBoZWlnaHQ6MjBweDtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgd2lkdGg6MTAwcHg7XFxuICAgIHRyYW5zaXRpb246IDNzO1xcbn1cXG5cXG4ubGlzdFVwZGF0ZUhhc1NhdmVkTWVzc2FnZUZvcm1Nb2RhbFNob3cge1xcbiAgICB6LWluZGV4OiAxO1xcbiAgICBvcGFjaXR5OiAxO1xcbiAgICBcXG59XFxuXFxuLmxpc3RGb3JtTW9kYWxMaXN0SXRlbUVkaXRTYXZlZCB7XFxuICAgIGJvcmRlcjogNXB4IHNvbGlkICMzMGRiMDU7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9saXN0Rm9ybU1vZGFsU3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCI7QUFDQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsZUFBZTtJQUNmLE1BQU07SUFDTixPQUFPO0lBQ1AsUUFBUTtJQUNSLFNBQVM7SUFDVCxzQ0FBc0M7SUFDdEMsaUNBQWlDO0lBQ2pDLG9CQUFvQjtJQUNwQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLDhCQUE4QjtJQUM5QixtQkFBbUI7QUFDdkI7OztBQUdBO0FBQ0EsYUFBYTtBQUNiLHNCQUFzQjtBQUN0QixlQUFlO0FBQ2YsT0FBTztBQUNQLHlCQUF5QjtBQUN6Qiw4QkFBOEI7QUFDOUIsa0JBQWtCO0FBQ2xCLFlBQVk7QUFDWixnQkFBZ0I7QUFDaEIsYUFBYTtBQUNiLHFCQUFxQjtBQUNyQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLDBCQUEwQjtBQUM5Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGtDQUFrQztJQUNsQyx5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLHdCQUF3QjtJQUN4QixXQUFXO0lBQ1gsVUFBVTtJQUNWLFdBQVc7SUFDWCxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFVBQVU7O0FBRWQ7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxuLmxpc3RNb2RhbEZvcm1Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgICAgXFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgdG9wOiAwO1xcbiAgICBsZWZ0OiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgYm90dG9tOiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzYsIDM2LCAzNiwgMC45KTsgICBcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTMwMHZ3LCAwdmgpO1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gICAgdHJhbnNpdGlvbjogMC40cztcXG59XFxuLmxpc3RGb3JtQ29udGFpbmVyVmlzaWJsZSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDB2dywgMHZoKTtcXG4gICAgcG9pbnRlci1ldmVudHM6IGFsbDtcXG59XFxuXFxuXFxuLmxpc3RGb3JtTW9kYWxMaXN0SXRlbUVkaXQge1xcbmRpc3BsYXk6IGZsZXg7XFxuZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5wb3NpdGlvbjogZml4ZWQ7XFxudG9wOiAzJTtcXG5ib3JkZXI6IDVweCBzb2xpZCAjZmZmZmZmO1xcbmJhY2tncm91bmQ6IHJnYigyMTYsIDIxNSwgMjE1KTtcXG5ib3JkZXItcmFkaXVzOiA1cHg7XFxuY29sb3I6IGJsYWNrO1xcbm1pbi13aWR0aDogMjUwcHg7XFxuaGVpZ2h0OiAyMDBweDtcXG50cmFuc2l0aW9uOiBib3JkZXIgMnM7XFxufVxcblxcbi5saXN0Rm9ybU1vZGFsTGFiZWwge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmb250LXNpemU6IDAuOHJlbTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIG1hcmdpbjogMTBweCAxMHB4IDBweCAxMHB4O1xcbn1cXG5cXG4ubGlzdEZvcm1Nb2RhbElucHV0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgbWFyZ2luOiAzcHggMTBweCAwcHggMTBweDtcXG59XFxuXFxuLmxpc3RGb3JtTW9kYWxEb25lQnV0dG9uIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG4gICAgd2lkdGg6IDE1MHB4OyAgIFxcbn1cXG5cXG4ubGlzdFVwZGF0ZUhhc1NhdmVkTWVzc2FnZUZvcm1Nb2RhbCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMiwgMTg2LCAzMCk7XFxuICAgIGNvbG9yOiByZ2IoMjQ5LCAyNDksIDI0OSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgcGFkZGluZzogM3B4IDNweCAzcHggM3B4O1xcbiAgICBoZWlnaHQ6MjBweDtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgd2lkdGg6MTAwcHg7XFxuICAgIHRyYW5zaXRpb246IDNzO1xcbn1cXG5cXG4ubGlzdFVwZGF0ZUhhc1NhdmVkTWVzc2FnZUZvcm1Nb2RhbFNob3cge1xcbiAgICB6LWluZGV4OiAxO1xcbiAgICBvcGFjaXR5OiAxO1xcbiAgICBcXG59XFxuXFxuLmxpc3RGb3JtTW9kYWxMaXN0SXRlbUVkaXRTYXZlZCB7XFxuICAgIGJvcmRlcjogNXB4IHNvbGlkICMzMGRiMDU7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxcbiAgIHYyLjAgfCAyMDExMDEyNlxcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXFxuKi9cXG5cXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcXG5iLCB1LCBpLCBjZW50ZXIsXFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgXFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBcXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xcblxcdG1hcmdpbjogMDtcXG5cXHRwYWRkaW5nOiAwO1xcblxcdGJvcmRlcjogMDtcXG5cXHRmb250LXNpemU6IDEwMCU7XFxuXFx0Zm9udDogaW5oZXJpdDtcXG5cXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5ib2R5IHtcXG5cXHRsaW5lLWhlaWdodDogMTtcXG59XFxub2wsIHVsIHtcXG5cXHRsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5ibG9ja3F1b3RlLCBxIHtcXG5cXHRxdW90ZXM6IG5vbmU7XFxufVxcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxcbnE6YmVmb3JlLCBxOmFmdGVyIHtcXG5cXHRjb250ZW50OiAnJztcXG5cXHRjb250ZW50OiBub25lO1xcbn1cXG50YWJsZSB7XFxuXFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG5cXHRib3JkZXItc3BhY2luZzogMDtcXG59XFxuXFxuLyogLS0tLS0tLSBlbmQgb2YgQ1NTIFJlc2V0IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cXG4vKiAtLS0tLS0tIGVuZCBvZiBDU1MgUmVzZXQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xcbi8qIC0tLS0tLS0gZW5kIG9mIENTUyBSZXNldCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXFxuXFxuXFxuXFxuYm9keSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MSwgNDEsIDQxKTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbn1cXG5cXG4ubmF2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG4ubG9nb0NvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGdhcDogMTVweDtcXG59XFxuXFxuLm5hdlRpdGxlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLnVwZGF0ZUhhc1NhdmVkTWVzc2FnZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIsIDE4NiwgMzApO1xcbiAgICBjb2xvcjogcmdiKDI0OSwgMjQ5LCAyNDkpO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBwYWRkaW5nOiAzcHggM3B4IDNweCAzcHg7XFxuICAgIGhlaWdodDoyMHB4O1xcbiAgICB3aWR0aDoxNDBweDtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgei1pbmRleDogLTE7XFxuICAgIHRyYW5zaXRpb246IDJzO1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHJpZ2h0OiAwO1xcbn1cXG4udXBkYXRlSGFzU2F2ZWRNZXNzYWdlU2hvdyB7XFxuICAgIHotaW5kZXg6IDE7XFxuICAgIG9wYWNpdHk6IDE7XFxuICAgIFxcbn1cXG5cXG4ubmF2QWRkTmV3SXRlbSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgd2lkdGg6MTUwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDg2LCA4NywgODYpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIsIDE4NiwgMzApO1xcbiAgICBjb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xcbiAgICBtYXJnaW46IDBweCAwcHggNXB4IDVweDtcXG4gICAgdHJhbnNpdGlvbjogMC41cztcXG59XFxuLm5hdkFkZE5ld0l0ZW06aG92ZXIge1xcbiAgICBib3JkZXItd2lkdGg6IDJweDtcXG59XFxuXFxuLm5hdkFkZE5ld0l0ZW1MZWZ0TWVudU91dCB7XFxuICAgIG1hcmdpbi10b3A6IDBweDtcXG59XFxuXFxuLm1haW5Db250YWluZXJEaXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcXG59XFxuXFxuXFxuLmxlZnRNZW51IHtcXG4gICAgei1pbmRleDogMTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgdG9wOiAwO1xcbiAgICBsZWZ0OiAwO1xcbiAgICBvdmVyZmxvdzogbm9uZTtcXG4gICAgd2lkdGg6IDUwcHg7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMTgsIDExOCwgMTE1KTtcXG4gICAgdHJhbnNpdGlvbjogMXM7XFxufVxcblxcblxcbi5sZWZ0TWVudUZseU91dCB7XFxuICAgIHdpZHRoOiAyMDBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzMCwgMjMwLCAyMzApO1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG59XFxuLmxlZnRNZW51Rmx5T3V0Ojotd2Via2l0LXNjcm9sbGJhciB7XFxuICAgIHdpZHRoOiAxMHB4O1xcbiAgICBiYWNrZ3JvdW5kOiAjZjFmMWYxOyBcXG59XFxuLmxlZnRNZW51Rmx5T3V0Ojotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XFxuICAgIGJhY2tncm91bmQ6ICM1YzU5NTk7IFxcbn1cXG4ubGVmdE1lbnVGbHlPdXQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcXG4gICAgYmFja2dyb3VuZDogcmdiKDc3LCA3NiwgNzYpOyBcXG59XFxuICAubGVmdE1lbnVGbHlPdXQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZDogcmdiKDIyNSwgMjIyLCAyMjIpOyBcXG59XFxuXFxuLmJ1cmdlckZseU91dEJ1dHRvbiB7XFxuXFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgYm9yZGVyOiAwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6cmdiYSgwLCAwLCAwLCAwKTtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG4gICAgdHJhbnNpdGlvbjogMC41cztcXG4gICAgY3Vyc29yOiBwb2ludGVyOyAgIFxcbn1cXG4uYnVyZ2VyRmx5T3V0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgd2lkdGg6MzBweDtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICB0cmFuc2l0aW9uOiAwLjVzO1xcbiAgICBcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uYnVyZ2VyRmx5T3V0QnV0dG9uSGlkZSB7XFxuICAgIHdpZHRoOiAwcHg7XFxuICAgIGhlaWdodDowcHg7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDB2dywgMHZoKTtcXG59XFxuXFxuXFxuLmxlZnRNZW51UHJvamVjdEl0ZW1MaXN0IHtcXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMHZ3LCAwdmgpOyAgIFxcbiAgICB0cmFuc2l0aW9uOiAwLjVzO1xcbn1cXG5cXG4ubGVmdE1lbnVQcm9qZWN0SXRlbUxpc3RTaG93IHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHZ3LCAwdmgpOyAgIFxcbn1cXG5cXG4ubGVmdE1lbnVQcm9qZWN0SXRlbSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgIHdpZHRoOjE4MHB4O1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMTUyLCAxNTIsIDE1Mik7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MywgNDIsIDQyKTtcXG4gICAgY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcXG4gICAgYm9yZGVyLXJhZGl1czogMHB4IDZweCA2cHggMHB4O1xcbiAgICBtYXJnaW4tdG9wOiAxcHg7XFxuICAgIHBhZGRpbmc6IDVweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBtYXJnaW4tdG9wOiAzcHg7XFxufVxcblxcbi5sZWZ0TWVudVByb2plY3RJdGVtOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyLCAxODYsIDMwKTtcXG59XFxuXFxuLkxpc3RJbWdFbGUge1xcbiAgICB3aWR0aDoyMHB4O1xcbiAgICBoZWlnaHQ6IDIwcHg7XFxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xcbn1cXG5cXG4ubGVmdE1lbnVQcm9qZWN0SXRlbVRleHQge1xcbiAgICBmb250LXNpemU6IDFyZW07XFxufVxcblxcbi5sZWZ0TWVudUl0ZW1TaG93QXNTZWxlY3RlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig1LCAxMjEsIDExKTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDc1LCA3NSwgNzUpO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuXFxufVxcblxcbi5tYWluUGFnZUxpc3RDb250YWluZXIge1xcbiAgICBtYXJnaW46IGF1dG87XFxuICAgIGhlaWdodDogMTAwdmg7XFxufVxcblxcbi5tYWluUGFnZUxpc3RDb250ZW50TmF2QmFyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBhZGRpbmctdG9wOjEwcHg7XFxuICAgIGdhcDogM3B4O1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuLmxpc3RUaXRsZSB7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xcbn1cXG5cXG4uYnV0dG9uQWRkQW5vdGhlck1haW5QYWdlTGlzdEl0ZW0ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIHdpZHRoOjEwMHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigxOTEsIDE5MSwgMTkxKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUsIDEyMSwgMTEpO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIG1hcmdpbjogMHB4IDBweCA1cHggNXB4O1xcbiAgICB0cmFuc2l0aW9uOiAwLjVzO1xcbn1cXG4uYnV0dG9uQWRkQW5vdGhlck1haW5QYWdlTGlzdEl0ZW06aG92ZXIge1xcbiAgICBib3JkZXItY29sb3I6IHdoaXRlO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIsIDE4NiwgMzApO1xcbn1cXG5cXG4ubWFpblBhZ2VMaXN0Q29udGVudCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbn1cXG5cXG4uY29udGVudEJyZWFrUG9pbnQge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMTAwdncsIDB2aCk7ICAgXFxuICAgIHRyYW5zaXRpb246IDAuNXM7XFxuICAgIGhlaWdodDowcHg7XFxufVxcbi5jb250ZW50QnJlYWtQb2ludFNob3cge1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMTQ3LCAxNDcsIDE0NSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gICAgbWFyZ2luLXRvcDogMnZoO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwdncsIDB2aCk7XFxuICAgIGhlaWdodDoxMDAlO1xcbn1cXG4uY29udGVudEJyZWFrUG9pbnRJbWcge1xcbiAgICB3aWR0aDoyM3B4O1xcbn1cXG5cXG4uYnJlYWtQb2ludEhlYWRpbmcge1xcbiAgICBkaXNwbGF5OiBmbGV4OyBcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiA0cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICBwYWRkaW5nOiA1cHg7XFxufVxcblxcbi5tYWluUGFnZUxpc3RJdGVtQ2FyZCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiKDk5LCA5NywgOTcpO1xcbiAgICB0cmFuc2l0aW9uOiAwLjJzO1xcbn1cXG5cXG4ubWFpblBhZ2VMaXN0SXRlbUNhcmRNb3VzZUluc2lkZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1YzU5NTk7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLm1haW5QYWdlTGlzdEl0ZW1DYXJkQWN0aXZlIHtcXG4gICAgLyogYm9yZGVyOiAxcHggc29saWQgd2hpdGU7ICovXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1YzU5NTk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcXG59XFxuXFxuLm1haW5QYWdlTGlzdEl0ZW1Db250ZW50TGVmdCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi5tYWluUGFnZUxpc3RJdGVtQ29udGVudFJpZ2h0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbn1cXG5cXG4uZm9ybURpc3BsYXlEdWVEYXRlIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDI1cHg7XFxuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xcbiAgICBjb2xvcjogI2I2YWNhYztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcXG4gICAgYm9yZGVyOiAwO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgIG9wYWNpdHk6IDA7XFxuICAgIHRyYW5zZm9ybTogMS41cztcXG59XFxuXFxuLmZvcm1EaXNwbGF5RHVlRGF0ZVNob3cge1xcbiAgICBvcGFjaXR5OiAxO1xcbn1cXG5cXG4uZm9ybURpc3BsYXlEdWVEYXRlQ29tcGxldGVkIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxufVxcblxcbi5mb3JtRGlzcGxheUR1ZURhdGU6aG92ZXIge1xcbiAgICBjb2xvcjogI2I2YWNhYztcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxufVxcblxcbi5tYWluUGFnZUxpc3RJdGVtRm9ybSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcblxcbi5saXN0Rm9ybVRpdGxlVGV4dCB7XFxuICAgIGJvcmRlcjogMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwgMCwgMCwgMCk7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgcmVzaXplOiBub25lO1xcbiAgICBtYXJnaW4tbGVmdDogNHB4O1xcbiAgICB3aWR0aDogNjB2dztcXG4gICAgaGVpZ2h0OiAxLjJyZW07XFxufVxcblxcbi5saXN0Rm9ybVRpdGxlVGV4dDpob3ZlcntcXG4gICAgYm9yZGVyLWxlZnQ6IDJweCBkb3R0ZWQgd2hpdGU7XFxufVxcblxcbi5saXN0Rm9ybVRpdGxlVGV4dDpmb2N1c3tcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyLWxlZnQ6IDJweCBkb3R0ZWQgd2hpdGU7XFxufVxcblxcbi5saXN0Rm9ybUFjdGlvbkJ1dHRvbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XFxuICAgIHBhZGRpbmc6MHB4O1xcbiAgICBib3JkZXI6IDA7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuLmxpc3RGb3JtQWN0aW9uQnV0dG9uOmhvdmVyIHtcXG4gICAgYW5pbWF0aW9uOiBzaG93QWN0aXZlIDJzO1xcbiAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcXG59XFxuLmNoZWNrQm94SW1nRWxlIHtcXG4gICAgd2lkdGg6MjVweDtcXG4gICAgbWFyZ2luOiAwcHggMnB4IDBweCA0cHg7XFxufVxcblxcbi5wZW5jaWxJbWdFbGUge1xcbiAgICB3aWR0aDoyNXB4O1xcbiAgICBtYXJnaW46IDBweCAycHggMHB4IDRweDtcXG59XFxuXFxuLnRyYXNoSW1nRWxlIHtcXG4gICAgd2lkdGg6MjhweDtcXG4gICAgbWFyZ2luOiAwcHggNHB4IDBweCA0cHg7XFxufVxcblxcblxcbkBrZXlmcmFtZXMgc2hvd0FjdGl2ZSB7XFxuICAgIDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cXG4gICAgMjUlIHsgdHJhbnNmb3JtOiByb3RhdGUoMjBkZWcpIHNjYWxlKDEuMzUpOyB9XFxuICAgIDc1JSB7IHRyYW5zZm9ybTogcm90YXRlKC0yMGRlZykgc2NhbGUoMS4zNSk7IH1cXG4gICAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDAwZGVnKTt9XFxuICB9XFxuXFxuXFxuXFxuQG1lZGlhIChtYXgtd2lkdGg6IDYxMHB4KSB7XFxuICAgIC5tYWluUGFnZUxpc3RDb250YWluZXIge1xcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDUwcHg7XFxuICAgICAgICBtYXJnaW4tbGVmdDogNTBweDtcXG4gICAgfVxcbiAgIFxcbiAgICAubWFpblBhZ2VMaXN0SXRlbUNvbnRlbnRMZWZ0IHtcXG4gICAgICAgIHdpZHRoOjEwMCU7XFxuICAgIH1cXG4gICAgXFxuICAgIC5tYWluUGFnZUxpc3RJdGVtQ29udGVudFJpZ2h0IHtcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XFxuICAgICAgICB3aWR0aDoxMDAlO1xcbiAgICB9XFxuXFxuICAgIC5pbnB1dEJveE1pbjE2IHtcXG4gICAgICAgIGZvbnQtc2l6ZTogbWF4KDFlbSwgMTZweCk7XFxuICAgIH1cXG4gIFxcbiAgfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7OztDQUdDOztBQUVEOzs7Ozs7Ozs7Ozs7O0NBYUMsU0FBUztDQUNULFVBQVU7Q0FDVixTQUFTO0NBQ1QsZUFBZTtDQUNmLGFBQWE7Q0FDYix3QkFBd0I7QUFDekI7QUFDQSxnREFBZ0Q7QUFDaEQ7O0NBRUMsY0FBYztBQUNmO0FBQ0E7Q0FDQyxjQUFjO0FBQ2Y7QUFDQTtDQUNDLGdCQUFnQjtBQUNqQjtBQUNBO0NBQ0MsWUFBWTtBQUNiO0FBQ0E7O0NBRUMsV0FBVztDQUNYLGFBQWE7QUFDZDtBQUNBO0NBQ0MseUJBQXlCO0NBQ3pCLGlCQUFpQjtBQUNsQjs7QUFFQSxpR0FBaUc7QUFDakcsaUdBQWlHO0FBQ2pHLGlHQUFpRzs7OztBQUlqRztJQUNJLGlDQUFp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SSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksa0NBQWtDO0lBQ2xDLFdBQVc7SUFDWCxTQUFTO0lBQ1QsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksd0JBQXdCO0lBQ3hCLG1DQUFtQztBQUN2QztBQUNBO0lBQ0ksVUFBVTtJQUNWLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFVBQVU7SUFDVix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsdUJBQXVCO0FBQzNCOzs7QUFHQTtJQUNJLEtBQUssdUJBQXVCLEVBQUU7SUFDOUIsTUFBTSxvQ0FBb0MsRUFBRTtJQUM1QyxNQUFNLHFDQUFxQyxFQUFFO0lBQzdDLE9BQU8sd0JBQXdCLENBQUM7RUFDbEM7Ozs7QUFJRjtJQUNJO1FBQ0ksaUJBQWlCO1FBQ2pCLGlCQUFpQjtJQUNyQjs7SUFFQTtRQUNJLFVBQVU7SUFDZDs7SUFFQTtRQUNJLHlCQUF5QjtRQUN6QixVQUFVO0lBQ2Q7O0lBRUE7UUFDSSx5QkFBeUI7SUFDN0I7O0VBRUZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gXFxuICAgdjIuMCB8IDIwMTEwMTI2XFxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcXG4qL1xcblxcbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxcbmIsIHUsIGksIGNlbnRlcixcXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLCBcXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIFxcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XFxuXFx0bWFyZ2luOiAwO1xcblxcdHBhZGRpbmc6IDA7XFxuXFx0Ym9yZGVyOiAwO1xcblxcdGZvbnQtc2l6ZTogMTAwJTtcXG5cXHRmb250OiBpbmhlcml0O1xcblxcdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xcbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIFxcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XFxuXFx0ZGlzcGxheTogYmxvY2s7XFxufVxcbmJvZHkge1xcblxcdGxpbmUtaGVpZ2h0OiAxO1xcbn1cXG5vbCwgdWwge1xcblxcdGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcbmJsb2NrcXVvdGUsIHEge1xcblxcdHF1b3Rlczogbm9uZTtcXG59XFxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6ICcnO1xcblxcdGNvbnRlbnQ6IG5vbmU7XFxufVxcbnRhYmxlIHtcXG5cXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcblxcdGJvcmRlci1zcGFjaW5nOiAwO1xcbn1cXG5cXG4vKiAtLS0tLS0tIGVuZCBvZiBDU1MgUmVzZXQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xcbi8qIC0tLS0tLS0gZW5kIG9mIENTUyBSZXNldCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXFxuLyogLS0tLS0tLSBlbmQgb2YgQ1NTIFJlc2V0IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cXG5cXG5cXG5cXG5ib2R5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQxLCA0MSwgNDEpO1xcbiAgICBjb2xvcjogd2hpdGU7XFxufVxcblxcbi5uYXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcblxcbi5sb2dvQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgZ2FwOiAxNXB4O1xcbn1cXG5cXG4ubmF2VGl0bGUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4udXBkYXRlSGFzU2F2ZWRNZXNzYWdlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMiwgMTg2LCAzMCk7XFxuICAgIGNvbG9yOiByZ2IoMjQ5LCAyNDksIDI0OSk7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIHBhZGRpbmc6IDNweCAzcHggM3B4IDNweDtcXG4gICAgaGVpZ2h0OjIwcHg7XFxuICAgIHdpZHRoOjE0MHB4O1xcbiAgICBvcGFjaXR5OiAwO1xcbiAgICB6LWluZGV4OiAtMTtcXG4gICAgdHJhbnNpdGlvbjogMnM7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgcmlnaHQ6IDA7XFxufVxcbi51cGRhdGVIYXNTYXZlZE1lc3NhZ2VTaG93IHtcXG4gICAgei1pbmRleDogMTtcXG4gICAgb3BhY2l0eTogMTtcXG4gICAgXFxufVxcblxcbi5uYXZBZGROZXdJdGVtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiAzMHB4O1xcbiAgICB3aWR0aDoxNTBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoODYsIDg3LCA4Nik7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMiwgMTg2LCAzMCk7XFxuICAgIGNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XFxuICAgIG1hcmdpbjogMHB4IDBweCA1cHggNXB4O1xcbiAgICB0cmFuc2l0aW9uOiAwLjVzO1xcbn1cXG4ubmF2QWRkTmV3SXRlbTpob3ZlciB7XFxuICAgIGJvcmRlci13aWR0aDogMnB4O1xcbn1cXG5cXG4ubmF2QWRkTmV3SXRlbUxlZnRNZW51T3V0IHtcXG4gICAgbWFyZ2luLXRvcDogMHB4O1xcbn1cXG5cXG4ubWFpbkNvbnRhaW5lckRpdiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtd3JhcDogbm93cmFwO1xcbn1cXG5cXG5cXG4ubGVmdE1lbnUge1xcbiAgICB6LWluZGV4OiAxO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICB0b3A6IDA7XFxuICAgIGxlZnQ6IDA7XFxuICAgIG92ZXJmbG93OiBub25lO1xcbiAgICB3aWR0aDogNTBweDtcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDExOCwgMTE4LCAxMTUpO1xcbiAgICB0cmFuc2l0aW9uOiAxcztcXG59XFxuXFxuXFxuLmxlZnRNZW51Rmx5T3V0IHtcXG4gICAgd2lkdGg6IDIwMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjMwLCAyMzAsIDIzMCk7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbn1cXG4ubGVmdE1lbnVGbHlPdXQ6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXG4gICAgd2lkdGg6IDEwcHg7XFxuICAgIGJhY2tncm91bmQ6ICNmMWYxZjE7IFxcbn1cXG4ubGVmdE1lbnVGbHlPdXQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcXG4gICAgYmFja2dyb3VuZDogIzVjNTk1OTsgXFxufVxcbi5sZWZ0TWVudUZseU91dDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNzcsIDc2LCA3Nik7IFxcbn1cXG4gIC5sZWZ0TWVudUZseU91dDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoMjI1LCAyMjIsIDIyMik7IFxcbn1cXG5cXG4uYnVyZ2VyRmx5T3V0QnV0dG9uIHtcXG5cXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICBib3JkZXI6IDBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDAsIDAsIDApO1xcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcbiAgICB0cmFuc2l0aW9uOiAwLjVzO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7ICAgXFxufVxcbi5idXJnZXJGbHlPdXQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICB3aWR0aDozMHB4O1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICAgIHRyYW5zaXRpb246IDAuNXM7XFxuICAgIFxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5idXJnZXJGbHlPdXRCdXR0b25IaWRlIHtcXG4gICAgd2lkdGg6IDBweDtcXG4gICAgaGVpZ2h0OjBweDtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMHZ3LCAwdmgpO1xcbn1cXG5cXG5cXG4ubGVmdE1lbnVQcm9qZWN0SXRlbUxpc3Qge1xcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxuICAgIHBhZGRpbmctbGVmdDogMHB4O1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMTAwdncsIDB2aCk7ICAgXFxuICAgIHRyYW5zaXRpb246IDAuNXM7XFxufVxcblxcbi5sZWZ0TWVudVByb2plY3RJdGVtTGlzdFNob3cge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwdncsIDB2aCk7ICAgXFxufVxcblxcbi5sZWZ0TWVudVByb2plY3RJdGVtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gICAgd2lkdGg6MTgwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigxNTIsIDE1MiwgMTUyKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQzLCA0MiwgNDIpO1xcbiAgICBjb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xcbiAgICBib3JkZXItcmFkaXVzOiAwcHggNnB4IDZweCAwcHg7XFxuICAgIG1hcmdpbi10b3A6IDFweDtcXG4gICAgcGFkZGluZzogNXB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIG1hcmdpbi10b3A6IDNweDtcXG59XFxuXFxuLmxlZnRNZW51UHJvamVjdEl0ZW06aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIsIDE4NiwgMzApO1xcbn1cXG5cXG4uTGlzdEltZ0VsZSB7XFxuICAgIHdpZHRoOjIwcHg7XFxuICAgIGhlaWdodDogMjBweDtcXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XFxufVxcblxcbi5sZWZ0TWVudVByb2plY3RJdGVtVGV4dCB7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuLmxlZnRNZW51SXRlbVNob3dBc1NlbGVjdGVkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUsIDEyMSwgMTEpO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoNzUsIDc1LCA3NSk7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG5cXG59XFxuXFxuLm1haW5QYWdlTGlzdENvbnRhaW5lciB7XFxuICAgIG1hcmdpbjogYXV0bztcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG59XFxuXFxuLm1haW5QYWdlTGlzdENvbnRlbnROYXZCYXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZy10b3A6MTBweDtcXG4gICAgZ2FwOiAzcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4ubGlzdFRpdGxlIHtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgZm9udC1zaXplOiAxLjNyZW07XFxufVxcblxcbi5idXR0b25BZGRBbm90aGVyTWFpblBhZ2VMaXN0SXRlbSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgd2lkdGg6MTAwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDE5MSwgMTkxLCAxOTEpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNSwgMTIxLCAxMSk7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgbWFyZ2luOiAwcHggMHB4IDVweCA1cHg7XFxuICAgIHRyYW5zaXRpb246IDAuNXM7XFxufVxcbi5idXR0b25BZGRBbm90aGVyTWFpblBhZ2VMaXN0SXRlbTpob3ZlciB7XFxuICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMiwgMTg2LCAzMCk7XFxufVxcblxcbi5tYWluUGFnZUxpc3RDb250ZW50IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxufVxcblxcbi5jb250ZW50QnJlYWtQb2ludCB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDB2dywgMHZoKTsgICBcXG4gICAgdHJhbnNpdGlvbjogMC41cztcXG4gICAgaGVpZ2h0OjBweDtcXG59XFxuLmNvbnRlbnRCcmVha1BvaW50U2hvdyB7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigxNDcsIDE0NywgMTQ1KTtcXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xcbiAgICBtYXJnaW4tdG9wOiAydmg7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDB2dywgMHZoKTtcXG4gICAgaGVpZ2h0OjEwMCU7XFxufVxcbi5jb250ZW50QnJlYWtQb2ludEltZyB7XFxuICAgIHdpZHRoOjIzcHg7XFxufVxcblxcbi5icmVha1BvaW50SGVhZGluZyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7IFxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDRweDtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuXFxuLm1haW5QYWdlTGlzdEl0ZW1DYXJkIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgZmxleC13cmFwOiB3cmFwO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2IoOTksIDk3LCA5Nyk7XFxuICAgIHRyYW5zaXRpb246IDAuMnM7XFxufVxcblxcbi5tYWluUGFnZUxpc3RJdGVtQ2FyZE1vdXNlSW5zaWRlIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzVjNTk1OTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ubWFpblBhZ2VMaXN0SXRlbUNhcmRBY3RpdmUge1xcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTsgKi9cXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzVjNTk1OTtcXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xcbn1cXG5cXG4ubWFpblBhZ2VMaXN0SXRlbUNvbnRlbnRMZWZ0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLm1haW5QYWdlTGlzdEl0ZW1Db250ZW50UmlnaHQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxufVxcblxcbi5mb3JtRGlzcGxheUR1ZURhdGUge1xcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcXG4gICAgZm9udC1zaXplOiAwLjhyZW07XFxuICAgIGNvbG9yOiAjYjZhY2FjO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xcbiAgICBib3JkZXI6IDA7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgdHJhbnNmb3JtOiAxLjVzO1xcbn1cXG5cXG4uZm9ybURpc3BsYXlEdWVEYXRlU2hvdyB7XFxuICAgIG9wYWNpdHk6IDE7XFxufVxcblxcbi5mb3JtRGlzcGxheUR1ZURhdGVDb21wbGV0ZWQge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcXG59XFxuXFxuLmZvcm1EaXNwbGF5RHVlRGF0ZTpob3ZlciB7XFxuICAgIGNvbG9yOiAjYjZhY2FjO1xcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG59XFxuXFxuLm1haW5QYWdlTGlzdEl0ZW1Gb3JtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuXFxuLmxpc3RGb3JtVGl0bGVUZXh0IHtcXG4gICAgYm9yZGVyOiAwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6cmdiYSgwLCAwLCAwLCAwKTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICByZXNpemU6IG5vbmU7XFxuICAgIG1hcmdpbi1sZWZ0OiA0cHg7XFxuICAgIHdpZHRoOiA2MHZ3O1xcbiAgICBoZWlnaHQ6IDEuMnJlbTtcXG59XFxuXFxuLmxpc3RGb3JtVGl0bGVUZXh0OmhvdmVye1xcbiAgICBib3JkZXItbGVmdDogMnB4IGRvdHRlZCB3aGl0ZTtcXG59XFxuXFxuLmxpc3RGb3JtVGl0bGVUZXh0OmZvY3Vze1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXItbGVmdDogMnB4IGRvdHRlZCB3aGl0ZTtcXG59XFxuXFxuLmxpc3RGb3JtQWN0aW9uQnV0dG9uIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcXG4gICAgcGFkZGluZzowcHg7XFxuICAgIGJvcmRlcjogMDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4ubGlzdEZvcm1BY3Rpb25CdXR0b246aG92ZXIge1xcbiAgICBhbmltYXRpb246IHNob3dBY3RpdmUgMnM7XFxuICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlO1xcbn1cXG4uY2hlY2tCb3hJbWdFbGUge1xcbiAgICB3aWR0aDoyNXB4O1xcbiAgICBtYXJnaW46IDBweCAycHggMHB4IDRweDtcXG59XFxuXFxuLnBlbmNpbEltZ0VsZSB7XFxuICAgIHdpZHRoOjI1cHg7XFxuICAgIG1hcmdpbjogMHB4IDJweCAwcHggNHB4O1xcbn1cXG5cXG4udHJhc2hJbWdFbGUge1xcbiAgICB3aWR0aDoyOHB4O1xcbiAgICBtYXJnaW46IDBweCA0cHggMHB4IDRweDtcXG59XFxuXFxuXFxuQGtleWZyYW1lcyBzaG93QWN0aXZlIHtcXG4gICAgMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfVxcbiAgICAyNSUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgyMGRlZykgc2NhbGUoMS4zNSk7IH1cXG4gICAgNzUlIHsgdHJhbnNmb3JtOiByb3RhdGUoLTIwZGVnKSBzY2FsZSgxLjM1KTsgfVxcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMDBkZWcpO31cXG4gIH1cXG5cXG5cXG5cXG5AbWVkaWEgKG1heC13aWR0aDogNjEwcHgpIHtcXG4gICAgLm1haW5QYWdlTGlzdENvbnRhaW5lciB7XFxuICAgICAgICBtYXJnaW4tbGVmdDogNTBweDtcXG4gICAgICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xcbiAgICB9XFxuICAgXFxuICAgIC5tYWluUGFnZUxpc3RJdGVtQ29udGVudExlZnQge1xcbiAgICAgICAgd2lkdGg6MTAwJTtcXG4gICAgfVxcbiAgICBcXG4gICAgLm1haW5QYWdlTGlzdEl0ZW1Db250ZW50UmlnaHQge1xcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG4gICAgICAgIHdpZHRoOjEwMCU7XFxuICAgIH1cXG5cXG4gICAgLmlucHV0Qm94TWluMTYge1xcbiAgICAgICAgZm9udC1zaXplOiBtYXgoMWVtLCAxNnB4KTtcXG4gICAgfVxcbiAgXFxuICB9XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuLm1vZGFsRm9ybUNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyAgICBcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICB0b3A6IDA7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICBib3R0b206IDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6cmdiYSgzNiwgMzYsIDM2LCAwLjkpOyAgIFxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMzAwdncsIDB2aCk7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgICB0cmFuc2l0aW9uOiAwLjRzO1xcbn1cXG4uZm9ybUNvbnRhaW5lclZpc2libGUge1xcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwdncsIDB2aCk7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XFxufVxcblxcblxcbi5mb3JtTW9kYWxMaXN0SXRlbUVkaXQge1xcbmRpc3BsYXk6IGZsZXg7XFxuZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5wb3NpdGlvbjogZml4ZWQ7XFxudG9wOiAzJTtcXG5ib3JkZXI6IDVweCBzb2xpZCAjZmZmZmZmO1xcbmJhY2tncm91bmQ6IHJnYigyMTYsIDIxNSwgMjE1KTtcXG5ib3JkZXItcmFkaXVzOiA1cHg7XFxuY29sb3I6IGJsYWNrO1xcbm1pbi13aWR0aDogMjUwcHg7XFxuaGVpZ2h0OiAyMDBweDtcXG50cmFuc2l0aW9uOiBib3JkZXIgMnM7XFxufVxcblxcbi5mb3JtTW9kYWxMYWJlbCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgbWFyZ2luOiAxMHB4IDEwcHggMHB4IDEwcHg7XFxufVxcblxcbi5mb3JtTW9kYWxJbnB1dCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIG1hcmdpbjogM3B4IDEwcHggMHB4IDEwcHg7XFxufVxcblxcbi5mb3JtTW9kYWxEb25lQnV0dG9uIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG4gICAgd2lkdGg6IDE1MHB4OyAgIFxcbn1cXG5cXG4udXBkYXRlSGFzU2F2ZWRNZXNzYWdlRm9ybU1vZGFsIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyLCAxODYsIDMwKTtcXG4gICAgY29sb3I6IHJnYigyNDksIDI0OSwgMjQ5KTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBwYWRkaW5nOiAzcHggM3B4IDNweCAzcHg7XFxuICAgIGhlaWdodDoyMHB4O1xcbiAgICBvcGFjaXR5OiAwO1xcbiAgICB3aWR0aDoxMDBweDtcXG4gICAgdHJhbnNpdGlvbjogM3M7XFxufVxcblxcbi51cGRhdGVIYXNTYXZlZE1lc3NhZ2VGb3JtTW9kYWxTaG93IHtcXG4gICAgei1pbmRleDogMTtcXG4gICAgb3BhY2l0eTogMTtcXG4gICAgXFxufVxcblxcbi5mb3JtTW9kYWxMaXN0SXRlbUVkaXRTYXZlZCB7XFxuICAgIGJvcmRlcjogNXB4IHNvbGlkICMzMGRiMDU7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy90YXNrRm9ybU1vZGFsU3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCI7QUFDQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsZUFBZTtJQUNmLE1BQU07SUFDTixPQUFPO0lBQ1AsUUFBUTtJQUNSLFNBQVM7SUFDVCxzQ0FBc0M7SUFDdEMsaUNBQWlDO0lBQ2pDLG9CQUFvQjtJQUNwQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQiw4QkFBOEI7SUFDOUIsbUJBQW1CO0FBQ3ZCOzs7QUFHQTtBQUNBLGFBQWE7QUFDYixzQkFBc0I7QUFDdEIsZUFBZTtBQUNmLE9BQU87QUFDUCx5QkFBeUI7QUFDekIsOEJBQThCO0FBQzlCLGtCQUFrQjtBQUNsQixZQUFZO0FBQ1osZ0JBQWdCO0FBQ2hCLGFBQWE7QUFDYixxQkFBcUI7QUFDckI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQiwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtJQUNoQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixrQ0FBa0M7SUFDbEMseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsV0FBVztJQUNYLFVBQVU7SUFDVixXQUFXO0lBQ1gsY0FBYztBQUNsQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixVQUFVOztBQUVkOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcbi5tb2RhbEZvcm1Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgICAgXFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgdG9wOiAwO1xcbiAgICBsZWZ0OiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgYm90dG9tOiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzYsIDM2LCAzNiwgMC45KTsgICBcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTMwMHZ3LCAwdmgpO1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gICAgdHJhbnNpdGlvbjogMC40cztcXG59XFxuLmZvcm1Db250YWluZXJWaXNpYmxlIHtcXG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHZ3LCAwdmgpO1xcbiAgICBwb2ludGVyLWV2ZW50czogYWxsO1xcbn1cXG5cXG5cXG4uZm9ybU1vZGFsTGlzdEl0ZW1FZGl0IHtcXG5kaXNwbGF5OiBmbGV4O1xcbmZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxucG9zaXRpb246IGZpeGVkO1xcbnRvcDogMyU7XFxuYm9yZGVyOiA1cHggc29saWQgI2ZmZmZmZjtcXG5iYWNrZ3JvdW5kOiByZ2IoMjE2LCAyMTUsIDIxNSk7XFxuYm9yZGVyLXJhZGl1czogNXB4O1xcbmNvbG9yOiBibGFjaztcXG5taW4td2lkdGg6IDI1MHB4O1xcbmhlaWdodDogMjAwcHg7XFxudHJhbnNpdGlvbjogYm9yZGVyIDJzO1xcbn1cXG5cXG4uZm9ybU1vZGFsTGFiZWwge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmb250LXNpemU6IDAuOHJlbTtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgIG1hcmdpbjogMTBweCAxMHB4IDBweCAxMHB4O1xcbn1cXG5cXG4uZm9ybU1vZGFsSW5wdXQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBtYXJnaW46IDNweCAxMHB4IDBweCAxMHB4O1xcbn1cXG5cXG4uZm9ybU1vZGFsRG9uZUJ1dHRvbiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIHdpZHRoOiAxNTBweDsgICBcXG59XFxuXFxuLnVwZGF0ZUhhc1NhdmVkTWVzc2FnZUZvcm1Nb2RhbCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMiwgMTg2LCAzMCk7XFxuICAgIGNvbG9yOiByZ2IoMjQ5LCAyNDksIDI0OSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgcGFkZGluZzogM3B4IDNweCAzcHggM3B4O1xcbiAgICBoZWlnaHQ6MjBweDtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgd2lkdGg6MTAwcHg7XFxuICAgIHRyYW5zaXRpb246IDNzO1xcbn1cXG5cXG4udXBkYXRlSGFzU2F2ZWRNZXNzYWdlRm9ybU1vZGFsU2hvdyB7XFxuICAgIHotaW5kZXg6IDE7XFxuICAgIG9wYWNpdHk6IDE7XFxuICAgIFxcbn1cXG5cXG4uZm9ybU1vZGFsTGlzdEl0ZW1FZGl0U2F2ZWQge1xcbiAgICBib3JkZXI6IDVweCBzb2xpZCAjMzBkYjA1O1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Rhc2tGb3JtTW9kYWxTdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Rhc2tGb3JtTW9kYWxTdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbGlzdEZvcm1Nb2RhbFN0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbGlzdEZvcm1Nb2RhbFN0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIi8qKlxuICogR29vZ2xlIENocm9tZSBhcyBvZiA2Ny4wLjMzOTYuODcgaW50cm9kdWNlZCB0aW1lem9uZXMgd2l0aCBvZmZzZXQgdGhhdCBpbmNsdWRlcyBzZWNvbmRzLlxuICogVGhleSB1c3VhbGx5IGFwcGVhciBmb3IgZGF0ZXMgdGhhdCBkZW5vdGUgdGltZSBiZWZvcmUgdGhlIHRpbWV6b25lcyB3ZXJlIGludHJvZHVjZWRcbiAqIChlLmcuIGZvciAnRXVyb3BlL1ByYWd1ZScgdGltZXpvbmUgdGhlIG9mZnNldCBpcyBHTVQrMDA6NTc6NDQgYmVmb3JlIDEgT2N0b2JlciAxODkxXG4gKiBhbmQgR01UKzAxOjAwOjAwIGFmdGVyIHRoYXQgZGF0ZSlcbiAqXG4gKiBEYXRlI2dldFRpbWV6b25lT2Zmc2V0IHJldHVybnMgdGhlIG9mZnNldCBpbiBtaW51dGVzIGFuZCB3b3VsZCByZXR1cm4gNTcgZm9yIHRoZSBleGFtcGxlIGFib3ZlLFxuICogd2hpY2ggd291bGQgbGVhZCB0byBpbmNvcnJlY3QgY2FsY3VsYXRpb25zLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgdGltZXpvbmUgb2Zmc2V0IGluIG1pbGxpc2Vjb25kcyB0aGF0IHRha2VzIHNlY29uZHMgaW4gYWNjb3VudC5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhkYXRlKSB7XG4gIHZhciB1dGNEYXRlID0gbmV3IERhdGUoRGF0ZS5VVEMoZGF0ZS5nZXRGdWxsWWVhcigpLCBkYXRlLmdldE1vbnRoKCksIGRhdGUuZ2V0RGF0ZSgpLCBkYXRlLmdldEhvdXJzKCksIGRhdGUuZ2V0TWludXRlcygpLCBkYXRlLmdldFNlY29uZHMoKSwgZGF0ZS5nZXRNaWxsaXNlY29uZHMoKSkpO1xuICB1dGNEYXRlLnNldFVUQ0Z1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKSk7XG4gIHJldHVybiBkYXRlLmdldFRpbWUoKSAtIHV0Y0RhdGUuZ2V0VGltZSgpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlcXVpcmVkQXJncyhyZXF1aXJlZCwgYXJncykge1xuICBpZiAoYXJncy5sZW5ndGggPCByZXF1aXJlZCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocmVxdWlyZWQgKyAnIGFyZ3VtZW50JyArIChyZXF1aXJlZCA+IDEgPyAncycgOiAnJykgKyAnIHJlcXVpcmVkLCBidXQgb25seSAnICsgYXJncy5sZW5ndGggKyAnIHByZXNlbnQnKTtcbiAgfVxufSIsImltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIHRvRGF0ZVxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBDb252ZXJ0IHRoZSBnaXZlbiBhcmd1bWVudCB0byBhbiBpbnN0YW5jZSBvZiBEYXRlLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYW4gaW5zdGFuY2Ugb2YgRGF0ZSwgdGhlIGZ1bmN0aW9uIHJldHVybnMgaXRzIGNsb25lLlxuICpcbiAqIElmIHRoZSBhcmd1bWVudCBpcyBhIG51bWJlciwgaXQgaXMgdHJlYXRlZCBhcyBhIHRpbWVzdGFtcC5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgbm9uZSBvZiB0aGUgYWJvdmUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIEludmFsaWQgRGF0ZS5cbiAqXG4gKiAqKk5vdGUqKjogKmFsbCogRGF0ZSBhcmd1bWVudHMgcGFzc2VkIHRvIGFueSAqZGF0ZS1mbnMqIGZ1bmN0aW9uIGlzIHByb2Nlc3NlZCBieSBgdG9EYXRlYC5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBhcmd1bWVudCAtIHRoZSB2YWx1ZSB0byBjb252ZXJ0XG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIHBhcnNlZCBkYXRlIGluIHRoZSBsb2NhbCB0aW1lIHpvbmVcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDbG9uZSB0aGUgZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IHRvRGF0ZShuZXcgRGF0ZSgyMDE0LCAxLCAxMSwgMTEsIDMwLCAzMCkpXG4gKiAvLz0+IFR1ZSBGZWIgMTEgMjAxNCAxMTozMDozMFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDb252ZXJ0IHRoZSB0aW1lc3RhbXAgdG8gZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IHRvRGF0ZSgxMzkyMDk4NDMwMDAwKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0b0RhdGUoYXJndW1lbnQpIHtcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBhcmdTdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnQpOyAvLyBDbG9uZSB0aGUgZGF0ZVxuXG4gIGlmIChhcmd1bWVudCBpbnN0YW5jZW9mIERhdGUgfHwgdHlwZW9mIGFyZ3VtZW50ID09PSAnb2JqZWN0JyAmJiBhcmdTdHIgPT09ICdbb2JqZWN0IERhdGVdJykge1xuICAgIC8vIFByZXZlbnQgdGhlIGRhdGUgdG8gbG9zZSB0aGUgbWlsbGlzZWNvbmRzIHdoZW4gcGFzc2VkIHRvIG5ldyBEYXRlKCkgaW4gSUUxMFxuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudC5nZXRUaW1lKCkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBhcmd1bWVudCA9PT0gJ251bWJlcicgfHwgYXJnU3RyID09PSAnW29iamVjdCBOdW1iZXJdJykge1xuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCh0eXBlb2YgYXJndW1lbnQgPT09ICdzdHJpbmcnIHx8IGFyZ1N0ciA9PT0gJ1tvYmplY3QgU3RyaW5nXScpICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybihcIlN0YXJ0aW5nIHdpdGggdjIuMC4wLWJldGEuMSBkYXRlLWZucyBkb2Vzbid0IGFjY2VwdCBzdHJpbmdzIGFzIGRhdGUgYXJndW1lbnRzLiBQbGVhc2UgdXNlIGBwYXJzZUlTT2AgdG8gcGFyc2Ugc3RyaW5ncy4gU2VlOiBodHRwczovL2dpdC5pby9manVsZVwiKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcblxuICAgICAgY29uc29sZS53YXJuKG5ldyBFcnJvcigpLnN0YWNrKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgfVxufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgc3RhcnRPZkRheVxuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBSZXR1cm4gdGhlIHN0YXJ0IG9mIGEgZGF5IGZvciB0aGUgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJldHVybiB0aGUgc3RhcnQgb2YgYSBkYXkgZm9yIHRoZSBnaXZlbiBkYXRlLlxuICogVGhlIHJlc3VsdCB3aWxsIGJlIGluIHRoZSBsb2NhbCB0aW1lem9uZS5cbiAqXG4gKiAjIyMgdjIuMC4wIGJyZWFraW5nIGNoYW5nZXM6XG4gKlxuICogLSBbQ2hhbmdlcyB0aGF0IGFyZSBjb21tb24gZm9yIHRoZSB3aG9sZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjQ29tbW9uLUNoYW5nZXMpLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGUgLSB0aGUgb3JpZ2luYWwgZGF0ZVxuICogQHJldHVybnMge0RhdGV9IHRoZSBzdGFydCBvZiBhIGRheVxuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFRoZSBzdGFydCBvZiBhIGRheSBmb3IgMiBTZXB0ZW1iZXIgMjAxNCAxMTo1NTowMDpcbiAqIGNvbnN0IHJlc3VsdCA9IHN0YXJ0T2ZEYXkobmV3IERhdGUoMjAxNCwgOCwgMiwgMTEsIDU1LCAwKSlcbiAqIC8vPT4gVHVlIFNlcCAwMiAyMDE0IDAwOjAwOjAwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhcnRPZkRheShkaXJ0eURhdGUpIHtcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIHJldHVybiBkYXRlO1xufSIsImltcG9ydCBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzIGZyb20gXCIuLi9fbGliL2dldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMvaW5kZXguanNcIjtcbmltcG9ydCBzdGFydE9mRGF5IGZyb20gXCIuLi9zdGFydE9mRGF5L2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xudmFyIE1JTExJU0VDT05EU19JTl9EQVkgPSA4NjQwMDAwMDtcbi8qKlxuICogQG5hbWUgZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzXG4gKiBAY2F0ZWdvcnkgRGF5IEhlbHBlcnNcbiAqIEBzdW1tYXJ5IEdldCB0aGUgbnVtYmVyIG9mIGNhbGVuZGFyIGRheXMgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBHZXQgdGhlIG51bWJlciBvZiBjYWxlbmRhciBkYXlzIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzLiBUaGlzIG1lYW5zIHRoYXQgdGhlIHRpbWVzIGFyZSByZW1vdmVkXG4gKiBmcm9tIHRoZSBkYXRlcyBhbmQgdGhlbiB0aGUgZGlmZmVyZW5jZSBpbiBkYXlzIGlzIGNhbGN1bGF0ZWQuXG4gKlxuICogIyMjIHYyLjAuMCBicmVha2luZyBjaGFuZ2VzOlxuICpcbiAqIC0gW0NoYW5nZXMgdGhhdCBhcmUgY29tbW9uIGZvciB0aGUgd2hvbGUgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdXBncmFkZUd1aWRlLm1kI0NvbW1vbi1DaGFuZ2VzKS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlTGVmdCAtIHRoZSBsYXRlciBkYXRlXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlUmlnaHQgLSB0aGUgZWFybGllciBkYXRlXG4gKiBAcmV0dXJucyB7TnVtYmVyfSB0aGUgbnVtYmVyIG9mIGNhbGVuZGFyIGRheXNcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSG93IG1hbnkgY2FsZW5kYXIgZGF5cyBhcmUgYmV0d2VlblxuICogLy8gMiBKdWx5IDIwMTEgMjM6MDA6MDAgYW5kIDIgSnVseSAyMDEyIDAwOjAwOjAwP1xuICogY29uc3QgcmVzdWx0ID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKFxuICogICBuZXcgRGF0ZSgyMDEyLCA2LCAyLCAwLCAwKSxcbiAqICAgbmV3IERhdGUoMjAxMSwgNiwgMiwgMjMsIDApXG4gKiApXG4gKiAvLz0+IDM2NlxuICogLy8gSG93IG1hbnkgY2FsZW5kYXIgZGF5cyBhcmUgYmV0d2VlblxuICogLy8gMiBKdWx5IDIwMTEgMjM6NTk6MDAgYW5kIDMgSnVseSAyMDExIDAwOjAxOjAwP1xuICogY29uc3QgcmVzdWx0ID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKFxuICogICBuZXcgRGF0ZSgyMDExLCA2LCAzLCAwLCAxKSxcbiAqICAgbmV3IERhdGUoMjAxMSwgNiwgMiwgMjMsIDU5KVxuICogKVxuICogLy89PiAxXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKGRpcnR5RGF0ZUxlZnQsIGRpcnR5RGF0ZVJpZ2h0KSB7XG4gIHJlcXVpcmVkQXJncygyLCBhcmd1bWVudHMpO1xuICB2YXIgc3RhcnRPZkRheUxlZnQgPSBzdGFydE9mRGF5KGRpcnR5RGF0ZUxlZnQpO1xuICB2YXIgc3RhcnRPZkRheVJpZ2h0ID0gc3RhcnRPZkRheShkaXJ0eURhdGVSaWdodCk7XG4gIHZhciB0aW1lc3RhbXBMZWZ0ID0gc3RhcnRPZkRheUxlZnQuZ2V0VGltZSgpIC0gZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhzdGFydE9mRGF5TGVmdCk7XG4gIHZhciB0aW1lc3RhbXBSaWdodCA9IHN0YXJ0T2ZEYXlSaWdodC5nZXRUaW1lKCkgLSBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKHN0YXJ0T2ZEYXlSaWdodCk7IC8vIFJvdW5kIHRoZSBudW1iZXIgb2YgZGF5cyB0byB0aGUgbmVhcmVzdCBpbnRlZ2VyXG4gIC8vIGJlY2F1c2UgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaW4gYSBkYXkgaXMgbm90IGNvbnN0YW50XG4gIC8vIChlLmcuIGl0J3MgZGlmZmVyZW50IGluIHRoZSBkYXkgb2YgdGhlIGRheWxpZ2h0IHNhdmluZyB0aW1lIGNsb2NrIHNoaWZ0KVxuXG4gIHJldHVybiBNYXRoLnJvdW5kKCh0aW1lc3RhbXBMZWZ0IC0gdGltZXN0YW1wUmlnaHQpIC8gTUlMTElTRUNPTkRTX0lOX0RBWSk7XG59IiwiLyoqXG4gKiBEYXlzIGluIDEgd2Vlay5cbiAqXG4gKiBAbmFtZSBkYXlzSW5XZWVrXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5leHBvcnQgdmFyIGRheXNJbldlZWsgPSA3O1xuLyoqXG4gKiBNYXhpbXVtIGFsbG93ZWQgdGltZS5cbiAqXG4gKiBAbmFtZSBtYXhUaW1lXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgbWF4VGltZSA9IE1hdGgucG93KDEwLCA4KSAqIDI0ICogNjAgKiA2MCAqIDEwMDA7XG4vKipcbiAqIE1pbGxpc2Vjb25kcyBpbiAxIG1pbnV0ZVxuICpcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luTWludXRlXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgbWlsbGlzZWNvbmRzSW5NaW51dGUgPSA2MDAwMDtcbi8qKlxuICogTWlsbGlzZWNvbmRzIGluIDEgaG91clxuICpcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luSG91clxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIG1pbGxpc2Vjb25kc0luSG91ciA9IDM2MDAwMDA7XG4vKipcbiAqIE1pbGxpc2Vjb25kcyBpbiAxIHNlY29uZFxuICpcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luU2Vjb25kXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgbWlsbGlzZWNvbmRzSW5TZWNvbmQgPSAxMDAwO1xuLyoqXG4gKiBNaW5pbXVtIGFsbG93ZWQgdGltZS5cbiAqXG4gKiBAbmFtZSBtaW5UaW1lXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgbWluVGltZSA9IC1tYXhUaW1lO1xuLyoqXG4gKiBNaW51dGVzIGluIDEgaG91clxuICpcbiAqIEBuYW1lIG1pbnV0ZXNJbkhvdXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaW51dGVzSW5Ib3VyID0gNjA7XG4vKipcbiAqIE1vbnRocyBpbiAxIHF1YXJ0ZXJcbiAqXG4gKiBAbmFtZSBtb250aHNJblF1YXJ0ZXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtb250aHNJblF1YXJ0ZXIgPSAzO1xuLyoqXG4gKiBNb250aHMgaW4gMSB5ZWFyXG4gKlxuICogQG5hbWUgbW9udGhzSW5ZZWFyXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgbW9udGhzSW5ZZWFyID0gMTI7XG4vKipcbiAqIFF1YXJ0ZXJzIGluIDEgeWVhclxuICpcbiAqIEBuYW1lIHF1YXJ0ZXJzSW5ZZWFyXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgcXVhcnRlcnNJblllYXIgPSA0O1xuLyoqXG4gKiBTZWNvbmRzIGluIDEgaG91clxuICpcbiAqIEBuYW1lIHNlY29uZHNJbkhvdXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBzZWNvbmRzSW5Ib3VyID0gMzYwMDtcbi8qKlxuICogU2Vjb25kcyBpbiAxIG1pbnV0ZVxuICpcbiAqIEBuYW1lIHNlY29uZHNJbk1pbnV0ZVxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIHNlY29uZHNJbk1pbnV0ZSA9IDYwOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRvSW50ZWdlcihkaXJ0eU51bWJlcikge1xuICBpZiAoZGlydHlOdW1iZXIgPT09IG51bGwgfHwgZGlydHlOdW1iZXIgPT09IHRydWUgfHwgZGlydHlOdW1iZXIgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIHZhciBudW1iZXIgPSBOdW1iZXIoZGlydHlOdW1iZXIpO1xuXG4gIGlmIChpc05hTihudW1iZXIpKSB7XG4gICAgcmV0dXJuIG51bWJlcjtcbiAgfVxuXG4gIHJldHVybiBudW1iZXIgPCAwID8gTWF0aC5jZWlsKG51bWJlcikgOiBNYXRoLmZsb29yKG51bWJlcik7XG59IiwiaW1wb3J0IHsgbWlsbGlzZWNvbmRzSW5Ib3VyLCBtaWxsaXNlY29uZHNJbk1pbnV0ZSB9IGZyb20gXCIuLi9jb25zdGFudHMvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG5pbXBvcnQgdG9JbnRlZ2VyIGZyb20gXCIuLi9fbGliL3RvSW50ZWdlci9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBwYXJzZUlTT1xuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBQYXJzZSBJU08gc3RyaW5nXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gc3RyaW5nIGluIElTTyA4NjAxIGZvcm1hdCBhbmQgcmV0dXJuIGFuIGluc3RhbmNlIG9mIERhdGUuXG4gKlxuICogRnVuY3Rpb24gYWNjZXB0cyBjb21wbGV0ZSBJU08gODYwMSBmb3JtYXRzIGFzIHdlbGwgYXMgcGFydGlhbCBpbXBsZW1lbnRhdGlvbnMuXG4gKiBJU08gODYwMTogaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9JU09fODYwMVxuICpcbiAqIElmIHRoZSBhcmd1bWVudCBpc24ndCBhIHN0cmluZywgdGhlIGZ1bmN0aW9uIGNhbm5vdCBwYXJzZSB0aGUgc3RyaW5nIG9yXG4gKiB0aGUgdmFsdWVzIGFyZSBpbnZhbGlkLCBpdCByZXR1cm5zIEludmFsaWQgRGF0ZS5cbiAqXG4gKiAjIyMgdjIuMC4wIGJyZWFraW5nIGNoYW5nZXM6XG4gKlxuICogLSBbQ2hhbmdlcyB0aGF0IGFyZSBjb21tb24gZm9yIHRoZSB3aG9sZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjQ29tbW9uLUNoYW5nZXMpLlxuICpcbiAqIC0gVGhlIHByZXZpb3VzIGBwYXJzZWAgaW1wbGVtZW50YXRpb24gd2FzIHJlbmFtZWQgdG8gYHBhcnNlSVNPYC5cbiAqXG4gKiAgIGBgYGphdmFzY3JpcHRcbiAqICAgLy8gQmVmb3JlIHYyLjAuMFxuICogICBwYXJzZSgnMjAxNi0wMS0wMScpXG4gKlxuICogICAvLyB2Mi4wLjAgb253YXJkXG4gKiAgIHBhcnNlSVNPKCcyMDE2LTAxLTAxJylcbiAqICAgYGBgXG4gKlxuICogLSBgcGFyc2VJU09gIG5vdyB2YWxpZGF0ZXMgc2VwYXJhdGUgZGF0ZSBhbmQgdGltZSB2YWx1ZXMgaW4gSVNPLTg2MDEgc3RyaW5nc1xuICogICBhbmQgcmV0dXJucyBgSW52YWxpZCBEYXRlYCBpZiB0aGUgZGF0ZSBpcyBpbnZhbGlkLlxuICpcbiAqICAgYGBgamF2YXNjcmlwdFxuICogICBwYXJzZUlTTygnMjAxOC0xMy0zMicpXG4gKiAgIC8vPT4gSW52YWxpZCBEYXRlXG4gKiAgIGBgYFxuICpcbiAqIC0gYHBhcnNlSVNPYCBub3cgZG9lc24ndCBmYWxsIGJhY2sgdG8gYG5ldyBEYXRlYCBjb25zdHJ1Y3RvclxuICogICBpZiBpdCBmYWlscyB0byBwYXJzZSBhIHN0cmluZyBhcmd1bWVudC4gSW5zdGVhZCwgaXQgcmV0dXJucyBgSW52YWxpZCBEYXRlYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gYXJndW1lbnQgLSB0aGUgdmFsdWUgdG8gY29udmVydFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIGFuIG9iamVjdCB3aXRoIG9wdGlvbnMuXG4gKiBAcGFyYW0gezB8MXwyfSBbb3B0aW9ucy5hZGRpdGlvbmFsRGlnaXRzPTJdIC0gdGhlIGFkZGl0aW9uYWwgbnVtYmVyIG9mIGRpZ2l0cyBpbiB0aGUgZXh0ZW5kZWQgeWVhciBmb3JtYXRcbiAqIEByZXR1cm5zIHtEYXRlfSB0aGUgcGFyc2VkIGRhdGUgaW4gdGhlIGxvY2FsIHRpbWUgem9uZVxuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy5hZGRpdGlvbmFsRGlnaXRzYCBtdXN0IGJlIDAsIDEgb3IgMlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDb252ZXJ0IHN0cmluZyAnMjAxNC0wMi0xMVQxMTozMDozMCcgdG8gZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IHBhcnNlSVNPKCcyMDE0LTAyLTExVDExOjMwOjMwJylcbiAqIC8vPT4gVHVlIEZlYiAxMSAyMDE0IDExOjMwOjMwXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbnZlcnQgc3RyaW5nICcrMDIwMTQxMDEnIHRvIGRhdGUsXG4gKiAvLyBpZiB0aGUgYWRkaXRpb25hbCBudW1iZXIgb2YgZGlnaXRzIGluIHRoZSBleHRlbmRlZCB5ZWFyIGZvcm1hdCBpcyAxOlxuICogY29uc3QgcmVzdWx0ID0gcGFyc2VJU08oJyswMjAxNDEwMScsIHsgYWRkaXRpb25hbERpZ2l0czogMSB9KVxuICogLy89PiBGcmkgQXByIDExIDIwMTQgMDA6MDA6MDBcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXJzZUlTTyhhcmd1bWVudCwgZGlydHlPcHRpb25zKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgb3B0aW9ucyA9IGRpcnR5T3B0aW9ucyB8fCB7fTtcbiAgdmFyIGFkZGl0aW9uYWxEaWdpdHMgPSBvcHRpb25zLmFkZGl0aW9uYWxEaWdpdHMgPT0gbnVsbCA/IDIgOiB0b0ludGVnZXIob3B0aW9ucy5hZGRpdGlvbmFsRGlnaXRzKTtcblxuICBpZiAoYWRkaXRpb25hbERpZ2l0cyAhPT0gMiAmJiBhZGRpdGlvbmFsRGlnaXRzICE9PSAxICYmIGFkZGl0aW9uYWxEaWdpdHMgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignYWRkaXRpb25hbERpZ2l0cyBtdXN0IGJlIDAsIDEgb3IgMicpO1xuICB9XG5cbiAgaWYgKCEodHlwZW9mIGFyZ3VtZW50ID09PSAnc3RyaW5nJyB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnQpID09PSAnW29iamVjdCBTdHJpbmddJykpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgfVxuXG4gIHZhciBkYXRlU3RyaW5ncyA9IHNwbGl0RGF0ZVN0cmluZyhhcmd1bWVudCk7XG4gIHZhciBkYXRlO1xuXG4gIGlmIChkYXRlU3RyaW5ncy5kYXRlKSB7XG4gICAgdmFyIHBhcnNlWWVhclJlc3VsdCA9IHBhcnNlWWVhcihkYXRlU3RyaW5ncy5kYXRlLCBhZGRpdGlvbmFsRGlnaXRzKTtcbiAgICBkYXRlID0gcGFyc2VEYXRlKHBhcnNlWWVhclJlc3VsdC5yZXN0RGF0ZVN0cmluZywgcGFyc2VZZWFyUmVzdWx0LnllYXIpO1xuICB9XG5cbiAgaWYgKCFkYXRlIHx8IGlzTmFOKGRhdGUuZ2V0VGltZSgpKSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB9XG5cbiAgdmFyIHRpbWVzdGFtcCA9IGRhdGUuZ2V0VGltZSgpO1xuICB2YXIgdGltZSA9IDA7XG4gIHZhciBvZmZzZXQ7XG5cbiAgaWYgKGRhdGVTdHJpbmdzLnRpbWUpIHtcbiAgICB0aW1lID0gcGFyc2VUaW1lKGRhdGVTdHJpbmdzLnRpbWUpO1xuXG4gICAgaWYgKGlzTmFOKHRpbWUpKSB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgICB9XG4gIH1cblxuICBpZiAoZGF0ZVN0cmluZ3MudGltZXpvbmUpIHtcbiAgICBvZmZzZXQgPSBwYXJzZVRpbWV6b25lKGRhdGVTdHJpbmdzLnRpbWV6b25lKTtcblxuICAgIGlmIChpc05hTihvZmZzZXQpKSB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyIGRpcnR5RGF0ZSA9IG5ldyBEYXRlKHRpbWVzdGFtcCArIHRpbWUpOyAvLyBqcyBwYXJzZWQgc3RyaW5nIGFzc3VtaW5nIGl0J3MgaW4gVVRDIHRpbWV6b25lXG4gICAgLy8gYnV0IHdlIG5lZWQgaXQgdG8gYmUgcGFyc2VkIGluIG91ciB0aW1lem9uZVxuICAgIC8vIHNvIHdlIHVzZSB1dGMgdmFsdWVzIHRvIGJ1aWxkIGRhdGUgaW4gb3VyIHRpbWV6b25lLlxuICAgIC8vIFllYXIgdmFsdWVzIGZyb20gMCB0byA5OSBtYXAgdG8gdGhlIHllYXJzIDE5MDAgdG8gMTk5OVxuICAgIC8vIHNvIHNldCB5ZWFyIGV4cGxpY2l0bHkgd2l0aCBzZXRGdWxsWWVhci5cblxuICAgIHZhciByZXN1bHQgPSBuZXcgRGF0ZSgwKTtcbiAgICByZXN1bHQuc2V0RnVsbFllYXIoZGlydHlEYXRlLmdldFVUQ0Z1bGxZZWFyKCksIGRpcnR5RGF0ZS5nZXRVVENNb250aCgpLCBkaXJ0eURhdGUuZ2V0VVRDRGF0ZSgpKTtcbiAgICByZXN1bHQuc2V0SG91cnMoZGlydHlEYXRlLmdldFVUQ0hvdXJzKCksIGRpcnR5RGF0ZS5nZXRVVENNaW51dGVzKCksIGRpcnR5RGF0ZS5nZXRVVENTZWNvbmRzKCksIGRpcnR5RGF0ZS5nZXRVVENNaWxsaXNlY29uZHMoKSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHJldHVybiBuZXcgRGF0ZSh0aW1lc3RhbXAgKyB0aW1lICsgb2Zmc2V0KTtcbn1cbnZhciBwYXR0ZXJucyA9IHtcbiAgZGF0ZVRpbWVEZWxpbWl0ZXI6IC9bVCBdLyxcbiAgdGltZVpvbmVEZWxpbWl0ZXI6IC9bWiBdL2ksXG4gIHRpbWV6b25lOiAvKFtaKy1dLiopJC9cbn07XG52YXIgZGF0ZVJlZ2V4ID0gL14tPyg/OihcXGR7M30pfChcXGR7Mn0pKD86LT8oXFxkezJ9KSk/fFcoXFxkezJ9KSg/Oi0/KFxcZHsxfSkpP3wpJC87XG52YXIgdGltZVJlZ2V4ID0gL14oXFxkezJ9KD86Wy4sXVxcZCopPykoPzo6PyhcXGR7Mn0oPzpbLixdXFxkKik/KSk/KD86Oj8oXFxkezJ9KD86Wy4sXVxcZCopPykpPyQvO1xudmFyIHRpbWV6b25lUmVnZXggPSAvXihbKy1dKShcXGR7Mn0pKD86Oj8oXFxkezJ9KSk/JC87XG5cbmZ1bmN0aW9uIHNwbGl0RGF0ZVN0cmluZyhkYXRlU3RyaW5nKSB7XG4gIHZhciBkYXRlU3RyaW5ncyA9IHt9O1xuICB2YXIgYXJyYXkgPSBkYXRlU3RyaW5nLnNwbGl0KHBhdHRlcm5zLmRhdGVUaW1lRGVsaW1pdGVyKTtcbiAgdmFyIHRpbWVTdHJpbmc7IC8vIFRoZSByZWdleCBtYXRjaCBzaG91bGQgb25seSByZXR1cm4gYXQgbWF4aW11bSB0d28gYXJyYXkgZWxlbWVudHMuXG4gIC8vIFtkYXRlXSwgW3RpbWVdLCBvciBbZGF0ZSwgdGltZV0uXG5cbiAgaWYgKGFycmF5Lmxlbmd0aCA+IDIpIHtcbiAgICByZXR1cm4gZGF0ZVN0cmluZ3M7XG4gIH1cblxuICBpZiAoLzovLnRlc3QoYXJyYXlbMF0pKSB7XG4gICAgdGltZVN0cmluZyA9IGFycmF5WzBdO1xuICB9IGVsc2Uge1xuICAgIGRhdGVTdHJpbmdzLmRhdGUgPSBhcnJheVswXTtcbiAgICB0aW1lU3RyaW5nID0gYXJyYXlbMV07XG5cbiAgICBpZiAocGF0dGVybnMudGltZVpvbmVEZWxpbWl0ZXIudGVzdChkYXRlU3RyaW5ncy5kYXRlKSkge1xuICAgICAgZGF0ZVN0cmluZ3MuZGF0ZSA9IGRhdGVTdHJpbmcuc3BsaXQocGF0dGVybnMudGltZVpvbmVEZWxpbWl0ZXIpWzBdO1xuICAgICAgdGltZVN0cmluZyA9IGRhdGVTdHJpbmcuc3Vic3RyKGRhdGVTdHJpbmdzLmRhdGUubGVuZ3RoLCBkYXRlU3RyaW5nLmxlbmd0aCk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHRpbWVTdHJpbmcpIHtcbiAgICB2YXIgdG9rZW4gPSBwYXR0ZXJucy50aW1lem9uZS5leGVjKHRpbWVTdHJpbmcpO1xuXG4gICAgaWYgKHRva2VuKSB7XG4gICAgICBkYXRlU3RyaW5ncy50aW1lID0gdGltZVN0cmluZy5yZXBsYWNlKHRva2VuWzFdLCAnJyk7XG4gICAgICBkYXRlU3RyaW5ncy50aW1lem9uZSA9IHRva2VuWzFdO1xuICAgIH0gZWxzZSB7XG4gICAgICBkYXRlU3RyaW5ncy50aW1lID0gdGltZVN0cmluZztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZGF0ZVN0cmluZ3M7XG59XG5cbmZ1bmN0aW9uIHBhcnNlWWVhcihkYXRlU3RyaW5nLCBhZGRpdGlvbmFsRGlnaXRzKSB7XG4gIHZhciByZWdleCA9IG5ldyBSZWdFeHAoJ14oPzooXFxcXGR7NH18WystXVxcXFxkeycgKyAoNCArIGFkZGl0aW9uYWxEaWdpdHMpICsgJ30pfChcXFxcZHsyfXxbKy1dXFxcXGR7JyArICgyICsgYWRkaXRpb25hbERpZ2l0cykgKyAnfSkkKScpO1xuICB2YXIgY2FwdHVyZXMgPSBkYXRlU3RyaW5nLm1hdGNoKHJlZ2V4KTsgLy8gSW52YWxpZCBJU08tZm9ybWF0dGVkIHllYXJcblxuICBpZiAoIWNhcHR1cmVzKSByZXR1cm4ge1xuICAgIHllYXI6IE5hTixcbiAgICByZXN0RGF0ZVN0cmluZzogJydcbiAgfTtcbiAgdmFyIHllYXIgPSBjYXB0dXJlc1sxXSA/IHBhcnNlSW50KGNhcHR1cmVzWzFdKSA6IG51bGw7XG4gIHZhciBjZW50dXJ5ID0gY2FwdHVyZXNbMl0gPyBwYXJzZUludChjYXB0dXJlc1syXSkgOiBudWxsOyAvLyBlaXRoZXIgeWVhciBvciBjZW50dXJ5IGlzIG51bGwsIG5vdCBib3RoXG5cbiAgcmV0dXJuIHtcbiAgICB5ZWFyOiBjZW50dXJ5ID09PSBudWxsID8geWVhciA6IGNlbnR1cnkgKiAxMDAsXG4gICAgcmVzdERhdGVTdHJpbmc6IGRhdGVTdHJpbmcuc2xpY2UoKGNhcHR1cmVzWzFdIHx8IGNhcHR1cmVzWzJdKS5sZW5ndGgpXG4gIH07XG59XG5cbmZ1bmN0aW9uIHBhcnNlRGF0ZShkYXRlU3RyaW5nLCB5ZWFyKSB7XG4gIC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCB5ZWFyXG4gIGlmICh5ZWFyID09PSBudWxsKSByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgdmFyIGNhcHR1cmVzID0gZGF0ZVN0cmluZy5tYXRjaChkYXRlUmVnZXgpOyAvLyBJbnZhbGlkIElTTy1mb3JtYXR0ZWQgc3RyaW5nXG5cbiAgaWYgKCFjYXB0dXJlcykgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gIHZhciBpc1dlZWtEYXRlID0gISFjYXB0dXJlc1s0XTtcbiAgdmFyIGRheU9mWWVhciA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbMV0pO1xuICB2YXIgbW9udGggPSBwYXJzZURhdGVVbml0KGNhcHR1cmVzWzJdKSAtIDE7XG4gIHZhciBkYXkgPSBwYXJzZURhdGVVbml0KGNhcHR1cmVzWzNdKTtcbiAgdmFyIHdlZWsgPSBwYXJzZURhdGVVbml0KGNhcHR1cmVzWzRdKTtcbiAgdmFyIGRheU9mV2VlayA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbNV0pIC0gMTtcblxuICBpZiAoaXNXZWVrRGF0ZSkge1xuICAgIGlmICghdmFsaWRhdGVXZWVrRGF0ZSh5ZWFyLCB3ZWVrLCBkYXlPZldlZWspKSB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGF5T2ZJU09XZWVrWWVhcih5ZWFyLCB3ZWVrLCBkYXlPZldlZWspO1xuICB9IGVsc2Uge1xuICAgIHZhciBkYXRlID0gbmV3IERhdGUoMCk7XG5cbiAgICBpZiAoIXZhbGlkYXRlRGF0ZSh5ZWFyLCBtb250aCwgZGF5KSB8fCAhdmFsaWRhdGVEYXlPZlllYXJEYXRlKHllYXIsIGRheU9mWWVhcikpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cblxuICAgIGRhdGUuc2V0VVRDRnVsbFllYXIoeWVhciwgbW9udGgsIE1hdGgubWF4KGRheU9mWWVhciwgZGF5KSk7XG4gICAgcmV0dXJuIGRhdGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gcGFyc2VEYXRlVW5pdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPyBwYXJzZUludCh2YWx1ZSkgOiAxO1xufVxuXG5mdW5jdGlvbiBwYXJzZVRpbWUodGltZVN0cmluZykge1xuICB2YXIgY2FwdHVyZXMgPSB0aW1lU3RyaW5nLm1hdGNoKHRpbWVSZWdleCk7XG4gIGlmICghY2FwdHVyZXMpIHJldHVybiBOYU47IC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCB0aW1lXG5cbiAgdmFyIGhvdXJzID0gcGFyc2VUaW1lVW5pdChjYXB0dXJlc1sxXSk7XG4gIHZhciBtaW51dGVzID0gcGFyc2VUaW1lVW5pdChjYXB0dXJlc1syXSk7XG4gIHZhciBzZWNvbmRzID0gcGFyc2VUaW1lVW5pdChjYXB0dXJlc1szXSk7XG5cbiAgaWYgKCF2YWxpZGF0ZVRpbWUoaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMpKSB7XG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIHJldHVybiBob3VycyAqIG1pbGxpc2Vjb25kc0luSG91ciArIG1pbnV0ZXMgKiBtaWxsaXNlY29uZHNJbk1pbnV0ZSArIHNlY29uZHMgKiAxMDAwO1xufVxuXG5mdW5jdGlvbiBwYXJzZVRpbWVVbml0KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAmJiBwYXJzZUZsb2F0KHZhbHVlLnJlcGxhY2UoJywnLCAnLicpKSB8fCAwO1xufVxuXG5mdW5jdGlvbiBwYXJzZVRpbWV6b25lKHRpbWV6b25lU3RyaW5nKSB7XG4gIGlmICh0aW1lem9uZVN0cmluZyA9PT0gJ1onKSByZXR1cm4gMDtcbiAgdmFyIGNhcHR1cmVzID0gdGltZXpvbmVTdHJpbmcubWF0Y2godGltZXpvbmVSZWdleCk7XG4gIGlmICghY2FwdHVyZXMpIHJldHVybiAwO1xuICB2YXIgc2lnbiA9IGNhcHR1cmVzWzFdID09PSAnKycgPyAtMSA6IDE7XG4gIHZhciBob3VycyA9IHBhcnNlSW50KGNhcHR1cmVzWzJdKTtcbiAgdmFyIG1pbnV0ZXMgPSBjYXB0dXJlc1szXSAmJiBwYXJzZUludChjYXB0dXJlc1szXSkgfHwgMDtcblxuICBpZiAoIXZhbGlkYXRlVGltZXpvbmUoaG91cnMsIG1pbnV0ZXMpKSB7XG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIHJldHVybiBzaWduICogKGhvdXJzICogbWlsbGlzZWNvbmRzSW5Ib3VyICsgbWludXRlcyAqIG1pbGxpc2Vjb25kc0luTWludXRlKTtcbn1cblxuZnVuY3Rpb24gZGF5T2ZJU09XZWVrWWVhcihpc29XZWVrWWVhciwgd2VlaywgZGF5KSB7XG4gIHZhciBkYXRlID0gbmV3IERhdGUoMCk7XG4gIGRhdGUuc2V0VVRDRnVsbFllYXIoaXNvV2Vla1llYXIsIDAsIDQpO1xuICB2YXIgZm91cnRoT2ZKYW51YXJ5RGF5ID0gZGF0ZS5nZXRVVENEYXkoKSB8fCA3O1xuICB2YXIgZGlmZiA9ICh3ZWVrIC0gMSkgKiA3ICsgZGF5ICsgMSAtIGZvdXJ0aE9mSmFudWFyeURheTtcbiAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpICsgZGlmZik7XG4gIHJldHVybiBkYXRlO1xufSAvLyBWYWxpZGF0aW9uIGZ1bmN0aW9uc1xuLy8gRmVicnVhcnkgaXMgbnVsbCB0byBoYW5kbGUgdGhlIGxlYXAgeWVhciAodXNpbmcgfHwpXG5cblxudmFyIGRheXNJbk1vbnRocyA9IFszMSwgbnVsbCwgMzEsIDMwLCAzMSwgMzAsIDMxLCAzMSwgMzAsIDMxLCAzMCwgMzFdO1xuXG5mdW5jdGlvbiBpc0xlYXBZZWFySW5kZXgoeWVhcikge1xuICByZXR1cm4geWVhciAlIDQwMCA9PT0gMCB8fCB5ZWFyICUgNCA9PT0gMCAmJiB5ZWFyICUgMTAwICE9PSAwO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZURhdGUoeWVhciwgbW9udGgsIGRhdGUpIHtcbiAgcmV0dXJuIG1vbnRoID49IDAgJiYgbW9udGggPD0gMTEgJiYgZGF0ZSA+PSAxICYmIGRhdGUgPD0gKGRheXNJbk1vbnRoc1ttb250aF0gfHwgKGlzTGVhcFllYXJJbmRleCh5ZWFyKSA/IDI5IDogMjgpKTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVEYXlPZlllYXJEYXRlKHllYXIsIGRheU9mWWVhcikge1xuICByZXR1cm4gZGF5T2ZZZWFyID49IDEgJiYgZGF5T2ZZZWFyIDw9IChpc0xlYXBZZWFySW5kZXgoeWVhcikgPyAzNjYgOiAzNjUpO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZVdlZWtEYXRlKF95ZWFyLCB3ZWVrLCBkYXkpIHtcbiAgcmV0dXJuIHdlZWsgPj0gMSAmJiB3ZWVrIDw9IDUzICYmIGRheSA+PSAwICYmIGRheSA8PSA2O1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZVRpbWUoaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMpIHtcbiAgaWYgKGhvdXJzID09PSAyNCkge1xuICAgIHJldHVybiBtaW51dGVzID09PSAwICYmIHNlY29uZHMgPT09IDA7XG4gIH1cblxuICByZXR1cm4gc2Vjb25kcyA+PSAwICYmIHNlY29uZHMgPCA2MCAmJiBtaW51dGVzID49IDAgJiYgbWludXRlcyA8IDYwICYmIGhvdXJzID49IDAgJiYgaG91cnMgPCAyNTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVUaW1lem9uZShfaG91cnMsIG1pbnV0ZXMpIHtcbiAgcmV0dXJuIG1pbnV0ZXMgPj0gMCAmJiBtaW51dGVzIDw9IDU5O1xufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgY29tcGFyZUFzY1xuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBDb21wYXJlIHRoZSB0d28gZGF0ZXMgYW5kIHJldHVybiAtMSwgMCBvciAxLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29tcGFyZSB0aGUgdHdvIGRhdGVzIGFuZCByZXR1cm4gMSBpZiB0aGUgZmlyc3QgZGF0ZSBpcyBhZnRlciB0aGUgc2Vjb25kLFxuICogLTEgaWYgdGhlIGZpcnN0IGRhdGUgaXMgYmVmb3JlIHRoZSBzZWNvbmQgb3IgMCBpZiBkYXRlcyBhcmUgZXF1YWwuXG4gKlxuICogIyMjIHYyLjAuMCBicmVha2luZyBjaGFuZ2VzOlxuICpcbiAqIC0gW0NoYW5nZXMgdGhhdCBhcmUgY29tbW9uIGZvciB0aGUgd2hvbGUgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdXBncmFkZUd1aWRlLm1kI0NvbW1vbi1DaGFuZ2VzKS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlTGVmdCAtIHRoZSBmaXJzdCBkYXRlIHRvIGNvbXBhcmVcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVSaWdodCAtIHRoZSBzZWNvbmQgZGF0ZSB0byBjb21wYXJlXG4gKiBAcmV0dXJucyB7TnVtYmVyfSB0aGUgcmVzdWx0IG9mIHRoZSBjb21wYXJpc29uXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbXBhcmUgMTEgRmVicnVhcnkgMTk4NyBhbmQgMTAgSnVseSAxOTg5OlxuICogY29uc3QgcmVzdWx0ID0gY29tcGFyZUFzYyhuZXcgRGF0ZSgxOTg3LCAxLCAxMSksIG5ldyBEYXRlKDE5ODksIDYsIDEwKSlcbiAqIC8vPT4gLTFcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU29ydCB0aGUgYXJyYXkgb2YgZGF0ZXM6XG4gKiBjb25zdCByZXN1bHQgPSBbXG4gKiAgIG5ldyBEYXRlKDE5OTUsIDYsIDIpLFxuICogICBuZXcgRGF0ZSgxOTg3LCAxLCAxMSksXG4gKiAgIG5ldyBEYXRlKDE5ODksIDYsIDEwKVxuICogXS5zb3J0KGNvbXBhcmVBc2MpXG4gKiAvLz0+IFtcbiAqIC8vICAgV2VkIEZlYiAxMSAxOTg3IDAwOjAwOjAwLFxuICogLy8gICBNb24gSnVsIDEwIDE5ODkgMDA6MDA6MDAsXG4gKiAvLyAgIFN1biBKdWwgMDIgMTk5NSAwMDowMDowMFxuICogLy8gXVxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXBhcmVBc2MoZGlydHlEYXRlTGVmdCwgZGlydHlEYXRlUmlnaHQpIHtcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XG4gIHZhciBkYXRlTGVmdCA9IHRvRGF0ZShkaXJ0eURhdGVMZWZ0KTtcbiAgdmFyIGRhdGVSaWdodCA9IHRvRGF0ZShkaXJ0eURhdGVSaWdodCk7XG4gIHZhciBkaWZmID0gZGF0ZUxlZnQuZ2V0VGltZSgpIC0gZGF0ZVJpZ2h0LmdldFRpbWUoKTtcblxuICBpZiAoZGlmZiA8IDApIHtcbiAgICByZXR1cm4gLTE7XG4gIH0gZWxzZSBpZiAoZGlmZiA+IDApIHtcbiAgICByZXR1cm4gMTsgLy8gUmV0dXJuIDAgaWYgZGlmZiBpcyAwOyByZXR1cm4gTmFOIGlmIGRpZmYgaXMgTmFOXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGRpZmY7XG4gIH1cbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gXCIuLi90b0RhdGUvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIGRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzXG4gKiBAY2F0ZWdvcnkgTW9udGggSGVscGVyc1xuICogQHN1bW1hcnkgR2V0IHRoZSBudW1iZXIgb2YgY2FsZW5kYXIgbW9udGhzIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FsZW5kYXIgbW9udGhzIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzLlxuICpcbiAqICMjIyB2Mi4wLjAgYnJlYWtpbmcgY2hhbmdlczpcbiAqXG4gKiAtIFtDaGFuZ2VzIHRoYXQgYXJlIGNvbW1vbiBmb3IgdGhlIHdob2xlIGxpYnJhcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VwZ3JhZGVHdWlkZS5tZCNDb21tb24tQ2hhbmdlcykuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZUxlZnQgLSB0aGUgbGF0ZXIgZGF0ZVxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZVJpZ2h0IC0gdGhlIGVhcmxpZXIgZGF0ZVxuICogQHJldHVybnMge051bWJlcn0gdGhlIG51bWJlciBvZiBjYWxlbmRhciBtb250aHNcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSG93IG1hbnkgY2FsZW5kYXIgbW9udGhzIGFyZSBiZXR3ZWVuIDMxIEphbnVhcnkgMjAxNCBhbmQgMSBTZXB0ZW1iZXIgMjAxND9cbiAqIHZhciByZXN1bHQgPSBkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyhcbiAqICAgbmV3IERhdGUoMjAxNCwgOCwgMSksXG4gKiAgIG5ldyBEYXRlKDIwMTQsIDAsIDMxKVxuICogKVxuICogLy89PiA4XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGlmZmVyZW5jZUluQ2FsZW5kYXJNb250aHMoZGlydHlEYXRlTGVmdCwgZGlydHlEYXRlUmlnaHQpIHtcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XG4gIHZhciBkYXRlTGVmdCA9IHRvRGF0ZShkaXJ0eURhdGVMZWZ0KTtcbiAgdmFyIGRhdGVSaWdodCA9IHRvRGF0ZShkaXJ0eURhdGVSaWdodCk7XG4gIHZhciB5ZWFyRGlmZiA9IGRhdGVMZWZ0LmdldEZ1bGxZZWFyKCkgLSBkYXRlUmlnaHQuZ2V0RnVsbFllYXIoKTtcbiAgdmFyIG1vbnRoRGlmZiA9IGRhdGVMZWZ0LmdldE1vbnRoKCkgLSBkYXRlUmlnaHQuZ2V0TW9udGgoKTtcbiAgcmV0dXJuIHllYXJEaWZmICogMTIgKyBtb250aERpZmY7XG59IiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBlbmRPZkRheVxuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBSZXR1cm4gdGhlIGVuZCBvZiBhIGRheSBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm4gdGhlIGVuZCBvZiBhIGRheSBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKiBUaGUgcmVzdWx0IHdpbGwgYmUgaW4gdGhlIGxvY2FsIHRpbWV6b25lLlxuICpcbiAqICMjIyB2Mi4wLjAgYnJlYWtpbmcgY2hhbmdlczpcbiAqXG4gKiAtIFtDaGFuZ2VzIHRoYXQgYXJlIGNvbW1vbiBmb3IgdGhlIHdob2xlIGxpYnJhcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VwZ3JhZGVHdWlkZS5tZCNDb21tb24tQ2hhbmdlcykuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZSAtIHRoZSBvcmlnaW5hbCBkYXRlXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIGVuZCBvZiBhIGRheVxuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFRoZSBlbmQgb2YgYSBkYXkgZm9yIDIgU2VwdGVtYmVyIDIwMTQgMTE6NTU6MDA6XG4gKiBjb25zdCByZXN1bHQgPSBlbmRPZkRheShuZXcgRGF0ZSgyMDE0LCA4LCAyLCAxMSwgNTUsIDApKVxuICogLy89PiBUdWUgU2VwIDAyIDIwMTQgMjM6NTk6NTkuOTk5XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZW5kT2ZEYXkoZGlydHlEYXRlKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuICBkYXRlLnNldEhvdXJzKDIzLCA1OSwgNTksIDk5OSk7XG4gIHJldHVybiBkYXRlO1xufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgZW5kT2ZNb250aFxuICogQGNhdGVnb3J5IE1vbnRoIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IFJldHVybiB0aGUgZW5kIG9mIGEgbW9udGggZm9yIHRoZSBnaXZlbiBkYXRlLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJuIHRoZSBlbmQgb2YgYSBtb250aCBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKiBUaGUgcmVzdWx0IHdpbGwgYmUgaW4gdGhlIGxvY2FsIHRpbWV6b25lLlxuICpcbiAqICMjIyB2Mi4wLjAgYnJlYWtpbmcgY2hhbmdlczpcbiAqXG4gKiAtIFtDaGFuZ2VzIHRoYXQgYXJlIGNvbW1vbiBmb3IgdGhlIHdob2xlIGxpYnJhcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VwZ3JhZGVHdWlkZS5tZCNDb21tb24tQ2hhbmdlcykuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZSAtIHRoZSBvcmlnaW5hbCBkYXRlXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIGVuZCBvZiBhIG1vbnRoXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDEgYXJndW1lbnQgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gVGhlIGVuZCBvZiBhIG1vbnRoIGZvciAyIFNlcHRlbWJlciAyMDE0IDExOjU1OjAwOlxuICogY29uc3QgcmVzdWx0ID0gZW5kT2ZNb250aChuZXcgRGF0ZSgyMDE0LCA4LCAyLCAxMSwgNTUsIDApKVxuICogLy89PiBUdWUgU2VwIDMwIDIwMTQgMjM6NTk6NTkuOTk5XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZW5kT2ZNb250aChkaXJ0eURhdGUpIHtcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XG4gIHZhciBtb250aCA9IGRhdGUuZ2V0TW9udGgoKTtcbiAgZGF0ZS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCksIG1vbnRoICsgMSwgMCk7XG4gIGRhdGUuc2V0SG91cnMoMjMsIDU5LCA1OSwgOTk5KTtcbiAgcmV0dXJuIGRhdGU7XG59IiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgZW5kT2ZEYXkgZnJvbSBcIi4uL2VuZE9mRGF5L2luZGV4LmpzXCI7XG5pbXBvcnQgZW5kT2ZNb250aCBmcm9tIFwiLi4vZW5kT2ZNb250aC9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgaXNMYXN0RGF5T2ZNb250aFxuICogQGNhdGVnb3J5IE1vbnRoIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IElzIHRoZSBnaXZlbiBkYXRlIHRoZSBsYXN0IGRheSBvZiBhIG1vbnRoP1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogSXMgdGhlIGdpdmVuIGRhdGUgdGhlIGxhc3QgZGF5IG9mIGEgbW9udGg/XG4gKlxuICogIyMjIHYyLjAuMCBicmVha2luZyBjaGFuZ2VzOlxuICpcbiAqIC0gW0NoYW5nZXMgdGhhdCBhcmUgY29tbW9uIGZvciB0aGUgd2hvbGUgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdXBncmFkZUd1aWRlLm1kI0NvbW1vbi1DaGFuZ2VzKS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIGRhdGUgdG8gY2hlY2tcbiAqIEByZXR1cm5zIHtCb29sZWFufSB0aGUgZGF0ZSBpcyB0aGUgbGFzdCBkYXkgb2YgYSBtb250aFxuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElzIDI4IEZlYnJ1YXJ5IDIwMTQgdGhlIGxhc3QgZGF5IG9mIGEgbW9udGg/XG4gKiB2YXIgcmVzdWx0ID0gaXNMYXN0RGF5T2ZNb250aChuZXcgRGF0ZSgyMDE0LCAxLCAyOCkpXG4gKiAvLz0+IHRydWVcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0xhc3REYXlPZk1vbnRoKGRpcnR5RGF0ZSkge1xuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcbiAgdmFyIGRhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcbiAgcmV0dXJuIGVuZE9mRGF5KGRhdGUpLmdldFRpbWUoKSA9PT0gZW5kT2ZNb250aChkYXRlKS5nZXRUaW1lKCk7XG59IiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgZGlmZmVyZW5jZUluQ2FsZW5kYXJNb250aHMgZnJvbSBcIi4uL2RpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzL2luZGV4LmpzXCI7XG5pbXBvcnQgY29tcGFyZUFzYyBmcm9tIFwiLi4vY29tcGFyZUFzYy9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbmltcG9ydCBpc0xhc3REYXlPZk1vbnRoIGZyb20gXCIuLi9pc0xhc3REYXlPZk1vbnRoL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIGRpZmZlcmVuY2VJbk1vbnRoc1xuICogQGNhdGVnb3J5IE1vbnRoIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IEdldCB0aGUgbnVtYmVyIG9mIGZ1bGwgbW9udGhzIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogR2V0IHRoZSBudW1iZXIgb2YgZnVsbCBtb250aHMgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMgdXNpbmcgdHJ1bmMgYXMgYSBkZWZhdWx0IHJvdW5kaW5nIG1ldGhvZC5cbiAqXG4gKiAjIyMgdjIuMC4wIGJyZWFraW5nIGNoYW5nZXM6XG4gKlxuICogLSBbQ2hhbmdlcyB0aGF0IGFyZSBjb21tb24gZm9yIHRoZSB3aG9sZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjQ29tbW9uLUNoYW5nZXMpLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVMZWZ0IC0gdGhlIGxhdGVyIGRhdGVcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVSaWdodCAtIHRoZSBlYXJsaWVyIGRhdGVcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IHRoZSBudW1iZXIgb2YgZnVsbCBtb250aHNcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSG93IG1hbnkgZnVsbCBtb250aHMgYXJlIGJldHdlZW4gMzEgSmFudWFyeSAyMDE0IGFuZCAxIFNlcHRlbWJlciAyMDE0P1xuICogY29uc3QgcmVzdWx0ID0gZGlmZmVyZW5jZUluTW9udGhzKG5ldyBEYXRlKDIwMTQsIDgsIDEpLCBuZXcgRGF0ZSgyMDE0LCAwLCAzMSkpXG4gKiAvLz0+IDdcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaWZmZXJlbmNlSW5Nb250aHMoZGlydHlEYXRlTGVmdCwgZGlydHlEYXRlUmlnaHQpIHtcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XG4gIHZhciBkYXRlTGVmdCA9IHRvRGF0ZShkaXJ0eURhdGVMZWZ0KTtcbiAgdmFyIGRhdGVSaWdodCA9IHRvRGF0ZShkaXJ0eURhdGVSaWdodCk7XG4gIHZhciBzaWduID0gY29tcGFyZUFzYyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KTtcbiAgdmFyIGRpZmZlcmVuY2UgPSBNYXRoLmFicyhkaWZmZXJlbmNlSW5DYWxlbmRhck1vbnRocyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSk7XG4gIHZhciByZXN1bHQ7IC8vIENoZWNrIGZvciB0aGUgZGlmZmVyZW5jZSBvZiBsZXNzIHRoYW4gbW9udGhcblxuICBpZiAoZGlmZmVyZW5jZSA8IDEpIHtcbiAgICByZXN1bHQgPSAwO1xuICB9IGVsc2Uge1xuICAgIGlmIChkYXRlTGVmdC5nZXRNb250aCgpID09PSAxICYmIGRhdGVMZWZ0LmdldERhdGUoKSA+IDI3KSB7XG4gICAgICAvLyBUaGlzIHdpbGwgY2hlY2sgaWYgdGhlIGRhdGUgaXMgZW5kIG9mIEZlYiBhbmQgYXNzaWduIGEgaGlnaGVyIGVuZCBvZiBtb250aCBkYXRlXG4gICAgICAvLyB0byBjb21wYXJlIGl0IHdpdGggSmFuXG4gICAgICBkYXRlTGVmdC5zZXREYXRlKDMwKTtcbiAgICB9XG5cbiAgICBkYXRlTGVmdC5zZXRNb250aChkYXRlTGVmdC5nZXRNb250aCgpIC0gc2lnbiAqIGRpZmZlcmVuY2UpOyAvLyBNYXRoLmFicyhkaWZmIGluIGZ1bGwgbW9udGhzIC0gZGlmZiBpbiBjYWxlbmRhciBtb250aHMpID09PSAxIGlmIGxhc3QgY2FsZW5kYXIgbW9udGggaXMgbm90IGZ1bGxcbiAgICAvLyBJZiBzbywgcmVzdWx0IG11c3QgYmUgZGVjcmVhc2VkIGJ5IDEgaW4gYWJzb2x1dGUgdmFsdWVcblxuICAgIHZhciBpc0xhc3RNb250aE5vdEZ1bGwgPSBjb21wYXJlQXNjKGRhdGVMZWZ0LCBkYXRlUmlnaHQpID09PSAtc2lnbjsgLy8gQ2hlY2sgZm9yIGNhc2VzIG9mIG9uZSBmdWxsIGNhbGVuZGFyIG1vbnRoXG5cbiAgICBpZiAoaXNMYXN0RGF5T2ZNb250aCh0b0RhdGUoZGlydHlEYXRlTGVmdCkpICYmIGRpZmZlcmVuY2UgPT09IDEgJiYgY29tcGFyZUFzYyhkaXJ0eURhdGVMZWZ0LCBkYXRlUmlnaHQpID09PSAxKSB7XG4gICAgICBpc0xhc3RNb250aE5vdEZ1bGwgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXN1bHQgPSBzaWduICogKGRpZmZlcmVuY2UgLSBOdW1iZXIoaXNMYXN0TW9udGhOb3RGdWxsKSk7XG4gIH0gLy8gUHJldmVudCBuZWdhdGl2ZSB6ZXJvXG5cblxuICByZXR1cm4gcmVzdWx0ID09PSAwID8gMCA6IHJlc3VsdDtcbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gXCIuLi90b0RhdGUvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIGRpZmZlcmVuY2VJbk1pbGxpc2Vjb25kc1xuICogQGNhdGVnb3J5IE1pbGxpc2Vjb25kIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IEdldCB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEdldCB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy5cbiAqXG4gKiAjIyMgdjIuMC4wIGJyZWFraW5nIGNoYW5nZXM6XG4gKlxuICogLSBbQ2hhbmdlcyB0aGF0IGFyZSBjb21tb24gZm9yIHRoZSB3aG9sZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjQ29tbW9uLUNoYW5nZXMpLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVMZWZ0IC0gdGhlIGxhdGVyIGRhdGVcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVSaWdodCAtIHRoZSBlYXJsaWVyIGRhdGVcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEhvdyBtYW55IG1pbGxpc2Vjb25kcyBhcmUgYmV0d2VlblxuICogLy8gMiBKdWx5IDIwMTQgMTI6MzA6MjAuNjAwIGFuZCAyIEp1bHkgMjAxNCAxMjozMDoyMS43MDA/XG4gKiBjb25zdCByZXN1bHQgPSBkaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMoXG4gKiAgIG5ldyBEYXRlKDIwMTQsIDYsIDIsIDEyLCAzMCwgMjEsIDcwMCksXG4gKiAgIG5ldyBEYXRlKDIwMTQsIDYsIDIsIDEyLCAzMCwgMjAsIDYwMClcbiAqIClcbiAqIC8vPT4gMTEwMFxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpZmZlcmVuY2VJbk1pbGxpc2Vjb25kcyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSB7XG4gIHJlcXVpcmVkQXJncygyLCBhcmd1bWVudHMpO1xuICByZXR1cm4gdG9EYXRlKGRhdGVMZWZ0KS5nZXRUaW1lKCkgLSB0b0RhdGUoZGF0ZVJpZ2h0KS5nZXRUaW1lKCk7XG59IiwidmFyIHJvdW5kaW5nTWFwID0ge1xuICBjZWlsOiBNYXRoLmNlaWwsXG4gIHJvdW5kOiBNYXRoLnJvdW5kLFxuICBmbG9vcjogTWF0aC5mbG9vcixcbiAgdHJ1bmM6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSA8IDAgPyBNYXRoLmNlaWwodmFsdWUpIDogTWF0aC5mbG9vcih2YWx1ZSk7XG4gIH0gLy8gTWF0aC50cnVuYyBpcyBub3Qgc3VwcG9ydGVkIGJ5IElFXG5cbn07XG52YXIgZGVmYXVsdFJvdW5kaW5nTWV0aG9kID0gJ3RydW5jJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRSb3VuZGluZ01ldGhvZChtZXRob2QpIHtcbiAgcmV0dXJuIG1ldGhvZCA/IHJvdW5kaW5nTWFwW21ldGhvZF0gOiByb3VuZGluZ01hcFtkZWZhdWx0Um91bmRpbmdNZXRob2RdO1xufSIsImltcG9ydCBkaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMgZnJvbSBcIi4uL2RpZmZlcmVuY2VJbk1pbGxpc2Vjb25kcy9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbmltcG9ydCB7IGdldFJvdW5kaW5nTWV0aG9kIH0gZnJvbSBcIi4uL19saWIvcm91bmRpbmdNZXRob2RzL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIGRpZmZlcmVuY2VJblNlY29uZHNcbiAqIEBjYXRlZ29yeSBTZWNvbmQgSGVscGVyc1xuICogQHN1bW1hcnkgR2V0IHRoZSBudW1iZXIgb2Ygc2Vjb25kcyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEdldCB0aGUgbnVtYmVyIG9mIHNlY29uZHMgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMuXG4gKlxuICogIyMjIHYyLjAuMCBicmVha2luZyBjaGFuZ2VzOlxuICpcbiAqIC0gW0NoYW5nZXMgdGhhdCBhcmUgY29tbW9uIGZvciB0aGUgd2hvbGUgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdXBncmFkZUd1aWRlLm1kI0NvbW1vbi1DaGFuZ2VzKS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlTGVmdCAtIHRoZSBsYXRlciBkYXRlXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlUmlnaHQgLSB0aGUgZWFybGllciBkYXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gYW4gb2JqZWN0IHdpdGggb3B0aW9ucy5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5yb3VuZGluZ01ldGhvZD0ndHJ1bmMnXSAtIGEgcm91bmRpbmcgbWV0aG9kIChgY2VpbGAsIGBmbG9vcmAsIGByb3VuZGAgb3IgYHRydW5jYClcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IHRoZSBudW1iZXIgb2Ygc2Vjb25kc1xuICogQHRocm93cyB7VHlwZUVycm9yfSAyIGFyZ3VtZW50cyByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBIb3cgbWFueSBzZWNvbmRzIGFyZSBiZXR3ZWVuXG4gKiAvLyAyIEp1bHkgMjAxNCAxMjozMDowNy45OTkgYW5kIDIgSnVseSAyMDE0IDEyOjMwOjIwLjAwMD9cbiAqIGNvbnN0IHJlc3VsdCA9IGRpZmZlcmVuY2VJblNlY29uZHMoXG4gKiAgIG5ldyBEYXRlKDIwMTQsIDYsIDIsIDEyLCAzMCwgMjAsIDApLFxuICogICBuZXcgRGF0ZSgyMDE0LCA2LCAyLCAxMiwgMzAsIDcsIDk5OSlcbiAqIClcbiAqIC8vPT4gMTJcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaWZmZXJlbmNlSW5TZWNvbmRzKGRhdGVMZWZ0LCBkYXRlUmlnaHQsIG9wdGlvbnMpIHtcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XG4gIHZhciBkaWZmID0gZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzKGRhdGVMZWZ0LCBkYXRlUmlnaHQpIC8gMTAwMDtcbiAgcmV0dXJuIGdldFJvdW5kaW5nTWV0aG9kKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5yb3VuZGluZ01ldGhvZCkoZGlmZik7XG59IiwidmFyIGZvcm1hdERpc3RhbmNlTG9jYWxlID0ge1xuICBsZXNzVGhhblhTZWNvbmRzOiB7XG4gICAgb25lOiAnbGVzcyB0aGFuIGEgc2Vjb25kJyxcbiAgICBvdGhlcjogJ2xlc3MgdGhhbiB7e2NvdW50fX0gc2Vjb25kcydcbiAgfSxcbiAgeFNlY29uZHM6IHtcbiAgICBvbmU6ICcxIHNlY29uZCcsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gc2Vjb25kcydcbiAgfSxcbiAgaGFsZkFNaW51dGU6ICdoYWxmIGEgbWludXRlJyxcbiAgbGVzc1RoYW5YTWludXRlczoge1xuICAgIG9uZTogJ2xlc3MgdGhhbiBhIG1pbnV0ZScsXG4gICAgb3RoZXI6ICdsZXNzIHRoYW4ge3tjb3VudH19IG1pbnV0ZXMnXG4gIH0sXG4gIHhNaW51dGVzOiB7XG4gICAgb25lOiAnMSBtaW51dGUnLFxuICAgIG90aGVyOiAne3tjb3VudH19IG1pbnV0ZXMnXG4gIH0sXG4gIGFib3V0WEhvdXJzOiB7XG4gICAgb25lOiAnYWJvdXQgMSBob3VyJyxcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSBob3VycydcbiAgfSxcbiAgeEhvdXJzOiB7XG4gICAgb25lOiAnMSBob3VyJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBob3VycydcbiAgfSxcbiAgeERheXM6IHtcbiAgICBvbmU6ICcxIGRheScsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gZGF5cydcbiAgfSxcbiAgYWJvdXRYV2Vla3M6IHtcbiAgICBvbmU6ICdhYm91dCAxIHdlZWsnLFxuICAgIG90aGVyOiAnYWJvdXQge3tjb3VudH19IHdlZWtzJ1xuICB9LFxuICB4V2Vla3M6IHtcbiAgICBvbmU6ICcxIHdlZWsnLFxuICAgIG90aGVyOiAne3tjb3VudH19IHdlZWtzJ1xuICB9LFxuICBhYm91dFhNb250aHM6IHtcbiAgICBvbmU6ICdhYm91dCAxIG1vbnRoJyxcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSBtb250aHMnXG4gIH0sXG4gIHhNb250aHM6IHtcbiAgICBvbmU6ICcxIG1vbnRoJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBtb250aHMnXG4gIH0sXG4gIGFib3V0WFllYXJzOiB7XG4gICAgb25lOiAnYWJvdXQgMSB5ZWFyJyxcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSB5ZWFycydcbiAgfSxcbiAgeFllYXJzOiB7XG4gICAgb25lOiAnMSB5ZWFyJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSB5ZWFycydcbiAgfSxcbiAgb3ZlclhZZWFyczoge1xuICAgIG9uZTogJ292ZXIgMSB5ZWFyJyxcbiAgICBvdGhlcjogJ292ZXIge3tjb3VudH19IHllYXJzJ1xuICB9LFxuICBhbG1vc3RYWWVhcnM6IHtcbiAgICBvbmU6ICdhbG1vc3QgMSB5ZWFyJyxcbiAgICBvdGhlcjogJ2FsbW9zdCB7e2NvdW50fX0geWVhcnMnXG4gIH1cbn07XG5cbnZhciBmb3JtYXREaXN0YW5jZSA9IGZ1bmN0aW9uICh0b2tlbiwgY291bnQsIG9wdGlvbnMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgdmFyIHRva2VuVmFsdWUgPSBmb3JtYXREaXN0YW5jZUxvY2FsZVt0b2tlbl07XG5cbiAgaWYgKHR5cGVvZiB0b2tlblZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIHJlc3VsdCA9IHRva2VuVmFsdWU7XG4gIH0gZWxzZSBpZiAoY291bnQgPT09IDEpIHtcbiAgICByZXN1bHQgPSB0b2tlblZhbHVlLm9uZTtcbiAgfSBlbHNlIHtcbiAgICByZXN1bHQgPSB0b2tlblZhbHVlLm90aGVyLnJlcGxhY2UoJ3t7Y291bnR9fScsIGNvdW50LnRvU3RyaW5nKCkpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwICYmIG9wdGlvbnMuYWRkU3VmZml4KSB7XG4gICAgaWYgKG9wdGlvbnMuY29tcGFyaXNvbiAmJiBvcHRpb25zLmNvbXBhcmlzb24gPiAwKSB7XG4gICAgICByZXR1cm4gJ2luICcgKyByZXN1bHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiByZXN1bHQgKyAnIGFnbyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZvcm1hdERpc3RhbmNlOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJ1aWxkRm9ybWF0TG9uZ0ZuKGFyZ3MpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgLy8gVE9ETzogUmVtb3ZlIFN0cmluZygpXG4gICAgdmFyIHdpZHRoID0gb3B0aW9ucy53aWR0aCA/IFN0cmluZyhvcHRpb25zLndpZHRoKSA6IGFyZ3MuZGVmYXVsdFdpZHRoO1xuICAgIHZhciBmb3JtYXQgPSBhcmdzLmZvcm1hdHNbd2lkdGhdIHx8IGFyZ3MuZm9ybWF0c1thcmdzLmRlZmF1bHRXaWR0aF07XG4gICAgcmV0dXJuIGZvcm1hdDtcbiAgfTtcbn0iLCJpbXBvcnQgYnVpbGRGb3JtYXRMb25nRm4gZnJvbSBcIi4uLy4uLy4uL19saWIvYnVpbGRGb3JtYXRMb25nRm4vaW5kZXguanNcIjtcbnZhciBkYXRlRm9ybWF0cyA9IHtcbiAgZnVsbDogJ0VFRUUsIE1NTU0gZG8sIHknLFxuICBsb25nOiAnTU1NTSBkbywgeScsXG4gIG1lZGl1bTogJ01NTSBkLCB5JyxcbiAgc2hvcnQ6ICdNTS9kZC95eXl5J1xufTtcbnZhciB0aW1lRm9ybWF0cyA9IHtcbiAgZnVsbDogJ2g6bW06c3MgYSB6enp6JyxcbiAgbG9uZzogJ2g6bW06c3MgYSB6JyxcbiAgbWVkaXVtOiAnaDptbTpzcyBhJyxcbiAgc2hvcnQ6ICdoOm1tIGEnXG59O1xudmFyIGRhdGVUaW1lRm9ybWF0cyA9IHtcbiAgZnVsbDogXCJ7e2RhdGV9fSAnYXQnIHt7dGltZX19XCIsXG4gIGxvbmc6IFwie3tkYXRlfX0gJ2F0JyB7e3RpbWV9fVwiLFxuICBtZWRpdW06ICd7e2RhdGV9fSwge3t0aW1lfX0nLFxuICBzaG9ydDogJ3t7ZGF0ZX19LCB7e3RpbWV9fSdcbn07XG52YXIgZm9ybWF0TG9uZyA9IHtcbiAgZGF0ZTogYnVpbGRGb3JtYXRMb25nRm4oe1xuICAgIGZvcm1hdHM6IGRhdGVGb3JtYXRzLFxuICAgIGRlZmF1bHRXaWR0aDogJ2Z1bGwnXG4gIH0pLFxuICB0aW1lOiBidWlsZEZvcm1hdExvbmdGbih7XG4gICAgZm9ybWF0czogdGltZUZvcm1hdHMsXG4gICAgZGVmYXVsdFdpZHRoOiAnZnVsbCdcbiAgfSksXG4gIGRhdGVUaW1lOiBidWlsZEZvcm1hdExvbmdGbih7XG4gICAgZm9ybWF0czogZGF0ZVRpbWVGb3JtYXRzLFxuICAgIGRlZmF1bHRXaWR0aDogJ2Z1bGwnXG4gIH0pXG59O1xuZXhwb3J0IGRlZmF1bHQgZm9ybWF0TG9uZzsiLCJ2YXIgZm9ybWF0UmVsYXRpdmVMb2NhbGUgPSB7XG4gIGxhc3RXZWVrOiBcIidsYXN0JyBlZWVlICdhdCcgcFwiLFxuICB5ZXN0ZXJkYXk6IFwiJ3llc3RlcmRheSBhdCcgcFwiLFxuICB0b2RheTogXCIndG9kYXkgYXQnIHBcIixcbiAgdG9tb3Jyb3c6IFwiJ3RvbW9ycm93IGF0JyBwXCIsXG4gIG5leHRXZWVrOiBcImVlZWUgJ2F0JyBwXCIsXG4gIG90aGVyOiAnUCdcbn07XG5cbnZhciBmb3JtYXRSZWxhdGl2ZSA9IGZ1bmN0aW9uICh0b2tlbiwgX2RhdGUsIF9iYXNlRGF0ZSwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIGZvcm1hdFJlbGF0aXZlTG9jYWxlW3Rva2VuXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZvcm1hdFJlbGF0aXZlOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJ1aWxkTG9jYWxpemVGbihhcmdzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoZGlydHlJbmRleCwgZGlydHlPcHRpb25zKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBkaXJ0eU9wdGlvbnMgfHwge307XG4gICAgdmFyIGNvbnRleHQgPSBvcHRpb25zLmNvbnRleHQgPyBTdHJpbmcob3B0aW9ucy5jb250ZXh0KSA6ICdzdGFuZGFsb25lJztcbiAgICB2YXIgdmFsdWVzQXJyYXk7XG5cbiAgICBpZiAoY29udGV4dCA9PT0gJ2Zvcm1hdHRpbmcnICYmIGFyZ3MuZm9ybWF0dGluZ1ZhbHVlcykge1xuICAgICAgdmFyIGRlZmF1bHRXaWR0aCA9IGFyZ3MuZGVmYXVsdEZvcm1hdHRpbmdXaWR0aCB8fCBhcmdzLmRlZmF1bHRXaWR0aDtcbiAgICAgIHZhciB3aWR0aCA9IG9wdGlvbnMud2lkdGggPyBTdHJpbmcob3B0aW9ucy53aWR0aCkgOiBkZWZhdWx0V2lkdGg7XG4gICAgICB2YWx1ZXNBcnJheSA9IGFyZ3MuZm9ybWF0dGluZ1ZhbHVlc1t3aWR0aF0gfHwgYXJncy5mb3JtYXR0aW5nVmFsdWVzW2RlZmF1bHRXaWR0aF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBfZGVmYXVsdFdpZHRoID0gYXJncy5kZWZhdWx0V2lkdGg7XG5cbiAgICAgIHZhciBfd2lkdGggPSBvcHRpb25zLndpZHRoID8gU3RyaW5nKG9wdGlvbnMud2lkdGgpIDogYXJncy5kZWZhdWx0V2lkdGg7XG5cbiAgICAgIHZhbHVlc0FycmF5ID0gYXJncy52YWx1ZXNbX3dpZHRoXSB8fCBhcmdzLnZhbHVlc1tfZGVmYXVsdFdpZHRoXTtcbiAgICB9XG5cbiAgICB2YXIgaW5kZXggPSBhcmdzLmFyZ3VtZW50Q2FsbGJhY2sgPyBhcmdzLmFyZ3VtZW50Q2FsbGJhY2soZGlydHlJbmRleCkgOiBkaXJ0eUluZGV4OyAvLyBAdHMtaWdub3JlOiBGb3Igc29tZSByZWFzb24gVHlwZVNjcmlwdCBqdXN0IGRvbid0IHdhbnQgdG8gbWF0Y2ggaXQsIG5vIG1hdHRlciBob3cgaGFyZCB3ZSB0cnkuIEkgY2hhbGxlbmdlIHlvdSB0byB0cnkgdG8gcmVtb3ZlIGl0IVxuXG4gICAgcmV0dXJuIHZhbHVlc0FycmF5W2luZGV4XTtcbiAgfTtcbn0iLCJpbXBvcnQgYnVpbGRMb2NhbGl6ZUZuIGZyb20gXCIuLi8uLi8uLi9fbGliL2J1aWxkTG9jYWxpemVGbi9pbmRleC5qc1wiO1xudmFyIGVyYVZhbHVlcyA9IHtcbiAgbmFycm93OiBbJ0InLCAnQSddLFxuICBhYmJyZXZpYXRlZDogWydCQycsICdBRCddLFxuICB3aWRlOiBbJ0JlZm9yZSBDaHJpc3QnLCAnQW5ubyBEb21pbmknXVxufTtcbnZhciBxdWFydGVyVmFsdWVzID0ge1xuICBuYXJyb3c6IFsnMScsICcyJywgJzMnLCAnNCddLFxuICBhYmJyZXZpYXRlZDogWydRMScsICdRMicsICdRMycsICdRNCddLFxuICB3aWRlOiBbJzFzdCBxdWFydGVyJywgJzJuZCBxdWFydGVyJywgJzNyZCBxdWFydGVyJywgJzR0aCBxdWFydGVyJ11cbn07IC8vIE5vdGU6IGluIEVuZ2xpc2gsIHRoZSBuYW1lcyBvZiBkYXlzIG9mIHRoZSB3ZWVrIGFuZCBtb250aHMgYXJlIGNhcGl0YWxpemVkLlxuLy8gSWYgeW91IGFyZSBtYWtpbmcgYSBuZXcgbG9jYWxlIGJhc2VkIG9uIHRoaXMgb25lLCBjaGVjayBpZiB0aGUgc2FtZSBpcyB0cnVlIGZvciB0aGUgbGFuZ3VhZ2UgeW91J3JlIHdvcmtpbmcgb24uXG4vLyBHZW5lcmFsbHksIGZvcm1hdHRlZCBkYXRlcyBzaG91bGQgbG9vayBsaWtlIHRoZXkgYXJlIGluIHRoZSBtaWRkbGUgb2YgYSBzZW50ZW5jZSxcbi8vIGUuZy4gaW4gU3BhbmlzaCBsYW5ndWFnZSB0aGUgd2Vla2RheXMgYW5kIG1vbnRocyBzaG91bGQgYmUgaW4gdGhlIGxvd2VyY2FzZS5cblxudmFyIG1vbnRoVmFsdWVzID0ge1xuICBuYXJyb3c6IFsnSicsICdGJywgJ00nLCAnQScsICdNJywgJ0onLCAnSicsICdBJywgJ1MnLCAnTycsICdOJywgJ0QnXSxcbiAgYWJicmV2aWF0ZWQ6IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnXSxcbiAgd2lkZTogWydKYW51YXJ5JywgJ0ZlYnJ1YXJ5JywgJ01hcmNoJywgJ0FwcmlsJywgJ01heScsICdKdW5lJywgJ0p1bHknLCAnQXVndXN0JywgJ1NlcHRlbWJlcicsICdPY3RvYmVyJywgJ05vdmVtYmVyJywgJ0RlY2VtYmVyJ11cbn07XG52YXIgZGF5VmFsdWVzID0ge1xuICBuYXJyb3c6IFsnUycsICdNJywgJ1QnLCAnVycsICdUJywgJ0YnLCAnUyddLFxuICBzaG9ydDogWydTdScsICdNbycsICdUdScsICdXZScsICdUaCcsICdGcicsICdTYSddLFxuICBhYmJyZXZpYXRlZDogWydTdW4nLCAnTW9uJywgJ1R1ZScsICdXZWQnLCAnVGh1JywgJ0ZyaScsICdTYXQnXSxcbiAgd2lkZTogWydTdW5kYXknLCAnTW9uZGF5JywgJ1R1ZXNkYXknLCAnV2VkbmVzZGF5JywgJ1RodXJzZGF5JywgJ0ZyaWRheScsICdTYXR1cmRheSddXG59O1xudmFyIGRheVBlcmlvZFZhbHVlcyA9IHtcbiAgbmFycm93OiB7XG4gICAgYW06ICdhJyxcbiAgICBwbTogJ3AnLFxuICAgIG1pZG5pZ2h0OiAnbWknLFxuICAgIG5vb246ICduJyxcbiAgICBtb3JuaW5nOiAnbW9ybmluZycsXG4gICAgYWZ0ZXJub29uOiAnYWZ0ZXJub29uJyxcbiAgICBldmVuaW5nOiAnZXZlbmluZycsXG4gICAgbmlnaHQ6ICduaWdodCdcbiAgfSxcbiAgYWJicmV2aWF0ZWQ6IHtcbiAgICBhbTogJ0FNJyxcbiAgICBwbTogJ1BNJyxcbiAgICBtaWRuaWdodDogJ21pZG5pZ2h0JyxcbiAgICBub29uOiAnbm9vbicsXG4gICAgbW9ybmluZzogJ21vcm5pbmcnLFxuICAgIGFmdGVybm9vbjogJ2FmdGVybm9vbicsXG4gICAgZXZlbmluZzogJ2V2ZW5pbmcnLFxuICAgIG5pZ2h0OiAnbmlnaHQnXG4gIH0sXG4gIHdpZGU6IHtcbiAgICBhbTogJ2EubS4nLFxuICAgIHBtOiAncC5tLicsXG4gICAgbWlkbmlnaHQ6ICdtaWRuaWdodCcsXG4gICAgbm9vbjogJ25vb24nLFxuICAgIG1vcm5pbmc6ICdtb3JuaW5nJyxcbiAgICBhZnRlcm5vb246ICdhZnRlcm5vb24nLFxuICAgIGV2ZW5pbmc6ICdldmVuaW5nJyxcbiAgICBuaWdodDogJ25pZ2h0J1xuICB9XG59O1xudmFyIGZvcm1hdHRpbmdEYXlQZXJpb2RWYWx1ZXMgPSB7XG4gIG5hcnJvdzoge1xuICAgIGFtOiAnYScsXG4gICAgcG06ICdwJyxcbiAgICBtaWRuaWdodDogJ21pJyxcbiAgICBub29uOiAnbicsXG4gICAgbW9ybmluZzogJ2luIHRoZSBtb3JuaW5nJyxcbiAgICBhZnRlcm5vb246ICdpbiB0aGUgYWZ0ZXJub29uJyxcbiAgICBldmVuaW5nOiAnaW4gdGhlIGV2ZW5pbmcnLFxuICAgIG5pZ2h0OiAnYXQgbmlnaHQnXG4gIH0sXG4gIGFiYnJldmlhdGVkOiB7XG4gICAgYW06ICdBTScsXG4gICAgcG06ICdQTScsXG4gICAgbWlkbmlnaHQ6ICdtaWRuaWdodCcsXG4gICAgbm9vbjogJ25vb24nLFxuICAgIG1vcm5pbmc6ICdpbiB0aGUgbW9ybmluZycsXG4gICAgYWZ0ZXJub29uOiAnaW4gdGhlIGFmdGVybm9vbicsXG4gICAgZXZlbmluZzogJ2luIHRoZSBldmVuaW5nJyxcbiAgICBuaWdodDogJ2F0IG5pZ2h0J1xuICB9LFxuICB3aWRlOiB7XG4gICAgYW06ICdhLm0uJyxcbiAgICBwbTogJ3AubS4nLFxuICAgIG1pZG5pZ2h0OiAnbWlkbmlnaHQnLFxuICAgIG5vb246ICdub29uJyxcbiAgICBtb3JuaW5nOiAnaW4gdGhlIG1vcm5pbmcnLFxuICAgIGFmdGVybm9vbjogJ2luIHRoZSBhZnRlcm5vb24nLFxuICAgIGV2ZW5pbmc6ICdpbiB0aGUgZXZlbmluZycsXG4gICAgbmlnaHQ6ICdhdCBuaWdodCdcbiAgfVxufTtcblxudmFyIG9yZGluYWxOdW1iZXIgPSBmdW5jdGlvbiAoZGlydHlOdW1iZXIsIF9vcHRpb25zKSB7XG4gIHZhciBudW1iZXIgPSBOdW1iZXIoZGlydHlOdW1iZXIpOyAvLyBJZiBvcmRpbmFsIG51bWJlcnMgZGVwZW5kIG9uIGNvbnRleHQsIGZvciBleGFtcGxlLFxuICAvLyBpZiB0aGV5IGFyZSBkaWZmZXJlbnQgZm9yIGRpZmZlcmVudCBncmFtbWF0aWNhbCBnZW5kZXJzLFxuICAvLyB1c2UgYG9wdGlvbnMudW5pdGAuXG4gIC8vXG4gIC8vIGB1bml0YCBjYW4gYmUgJ3llYXInLCAncXVhcnRlcicsICdtb250aCcsICd3ZWVrJywgJ2RhdGUnLCAnZGF5T2ZZZWFyJyxcbiAgLy8gJ2RheScsICdob3VyJywgJ21pbnV0ZScsICdzZWNvbmQnLlxuXG4gIHZhciByZW0xMDAgPSBudW1iZXIgJSAxMDA7XG5cbiAgaWYgKHJlbTEwMCA+IDIwIHx8IHJlbTEwMCA8IDEwKSB7XG4gICAgc3dpdGNoIChyZW0xMDAgJSAxMCkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICByZXR1cm4gbnVtYmVyICsgJ3N0JztcblxuICAgICAgY2FzZSAyOlxuICAgICAgICByZXR1cm4gbnVtYmVyICsgJ25kJztcblxuICAgICAgY2FzZSAzOlxuICAgICAgICByZXR1cm4gbnVtYmVyICsgJ3JkJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVtYmVyICsgJ3RoJztcbn07XG5cbnZhciBsb2NhbGl6ZSA9IHtcbiAgb3JkaW5hbE51bWJlcjogb3JkaW5hbE51bWJlcixcbiAgZXJhOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogZXJhVmFsdWVzLFxuICAgIGRlZmF1bHRXaWR0aDogJ3dpZGUnXG4gIH0pLFxuICBxdWFydGVyOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogcXVhcnRlclZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6ICd3aWRlJyxcbiAgICBhcmd1bWVudENhbGxiYWNrOiBmdW5jdGlvbiAocXVhcnRlcikge1xuICAgICAgcmV0dXJuIHF1YXJ0ZXIgLSAxO1xuICAgIH1cbiAgfSksXG4gIG1vbnRoOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogbW9udGhWYWx1ZXMsXG4gICAgZGVmYXVsdFdpZHRoOiAnd2lkZSdcbiAgfSksXG4gIGRheTogYnVpbGRMb2NhbGl6ZUZuKHtcbiAgICB2YWx1ZXM6IGRheVZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6ICd3aWRlJ1xuICB9KSxcbiAgZGF5UGVyaW9kOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogZGF5UGVyaW9kVmFsdWVzLFxuICAgIGRlZmF1bHRXaWR0aDogJ3dpZGUnLFxuICAgIGZvcm1hdHRpbmdWYWx1ZXM6IGZvcm1hdHRpbmdEYXlQZXJpb2RWYWx1ZXMsXG4gICAgZGVmYXVsdEZvcm1hdHRpbmdXaWR0aDogJ3dpZGUnXG4gIH0pXG59O1xuZXhwb3J0IGRlZmF1bHQgbG9jYWxpemU7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRNYXRjaEZuKGFyZ3MpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gICAgdmFyIHdpZHRoID0gb3B0aW9ucy53aWR0aDtcbiAgICB2YXIgbWF0Y2hQYXR0ZXJuID0gd2lkdGggJiYgYXJncy5tYXRjaFBhdHRlcm5zW3dpZHRoXSB8fCBhcmdzLm1hdGNoUGF0dGVybnNbYXJncy5kZWZhdWx0TWF0Y2hXaWR0aF07XG4gICAgdmFyIG1hdGNoUmVzdWx0ID0gc3RyaW5nLm1hdGNoKG1hdGNoUGF0dGVybik7XG5cbiAgICBpZiAoIW1hdGNoUmVzdWx0KSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgbWF0Y2hlZFN0cmluZyA9IG1hdGNoUmVzdWx0WzBdO1xuICAgIHZhciBwYXJzZVBhdHRlcm5zID0gd2lkdGggJiYgYXJncy5wYXJzZVBhdHRlcm5zW3dpZHRoXSB8fCBhcmdzLnBhcnNlUGF0dGVybnNbYXJncy5kZWZhdWx0UGFyc2VXaWR0aF07XG4gICAgdmFyIGtleSA9IEFycmF5LmlzQXJyYXkocGFyc2VQYXR0ZXJucykgPyBmaW5kSW5kZXgocGFyc2VQYXR0ZXJucywgZnVuY3Rpb24gKHBhdHRlcm4pIHtcbiAgICAgIHJldHVybiBwYXR0ZXJuLnRlc3QobWF0Y2hlZFN0cmluZyk7XG4gICAgfSkgOiBmaW5kS2V5KHBhcnNlUGF0dGVybnMsIGZ1bmN0aW9uIChwYXR0ZXJuKSB7XG4gICAgICByZXR1cm4gcGF0dGVybi50ZXN0KG1hdGNoZWRTdHJpbmcpO1xuICAgIH0pO1xuICAgIHZhciB2YWx1ZTtcbiAgICB2YWx1ZSA9IGFyZ3MudmFsdWVDYWxsYmFjayA/IGFyZ3MudmFsdWVDYWxsYmFjayhrZXkpIDoga2V5O1xuICAgIHZhbHVlID0gb3B0aW9ucy52YWx1ZUNhbGxiYWNrID8gb3B0aW9ucy52YWx1ZUNhbGxiYWNrKHZhbHVlKSA6IHZhbHVlO1xuICAgIHZhciByZXN0ID0gc3RyaW5nLnNsaWNlKG1hdGNoZWRTdHJpbmcubGVuZ3RoKTtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgcmVzdDogcmVzdFxuICAgIH07XG4gIH07XG59XG5cbmZ1bmN0aW9uIGZpbmRLZXkob2JqZWN0LCBwcmVkaWNhdGUpIHtcbiAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgIGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSAmJiBwcmVkaWNhdGUob2JqZWN0W2tleV0pKSB7XG4gICAgICByZXR1cm4ga2V5O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGZpbmRJbmRleChhcnJheSwgcHJlZGljYXRlKSB7XG4gIGZvciAodmFyIGtleSA9IDA7IGtleSA8IGFycmF5Lmxlbmd0aDsga2V5KyspIHtcbiAgICBpZiAocHJlZGljYXRlKGFycmF5W2tleV0pKSB7XG4gICAgICByZXR1cm4ga2V5O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWQ7XG59IiwiaW1wb3J0IGJ1aWxkTWF0Y2hGbiBmcm9tIFwiLi4vLi4vLi4vX2xpYi9idWlsZE1hdGNoRm4vaW5kZXguanNcIjtcbmltcG9ydCBidWlsZE1hdGNoUGF0dGVybkZuIGZyb20gXCIuLi8uLi8uLi9fbGliL2J1aWxkTWF0Y2hQYXR0ZXJuRm4vaW5kZXguanNcIjtcbnZhciBtYXRjaE9yZGluYWxOdW1iZXJQYXR0ZXJuID0gL14oXFxkKykodGh8c3R8bmR8cmQpPy9pO1xudmFyIHBhcnNlT3JkaW5hbE51bWJlclBhdHRlcm4gPSAvXFxkKy9pO1xudmFyIG1hdGNoRXJhUGF0dGVybnMgPSB7XG4gIG5hcnJvdzogL14oYnxhKS9pLFxuICBhYmJyZXZpYXRlZDogL14oYlxcLj9cXHM/Y1xcLj98YlxcLj9cXHM/Y1xcLj9cXHM/ZVxcLj98YVxcLj9cXHM/ZFxcLj98Y1xcLj9cXHM/ZVxcLj8pL2ksXG4gIHdpZGU6IC9eKGJlZm9yZSBjaHJpc3R8YmVmb3JlIGNvbW1vbiBlcmF8YW5ubyBkb21pbml8Y29tbW9uIGVyYSkvaVxufTtcbnZhciBwYXJzZUVyYVBhdHRlcm5zID0ge1xuICBhbnk6IFsvXmIvaSwgL14oYXxjKS9pXVxufTtcbnZhciBtYXRjaFF1YXJ0ZXJQYXR0ZXJucyA9IHtcbiAgbmFycm93OiAvXlsxMjM0XS9pLFxuICBhYmJyZXZpYXRlZDogL15xWzEyMzRdL2ksXG4gIHdpZGU6IC9eWzEyMzRdKHRofHN0fG5kfHJkKT8gcXVhcnRlci9pXG59O1xudmFyIHBhcnNlUXVhcnRlclBhdHRlcm5zID0ge1xuICBhbnk6IFsvMS9pLCAvMi9pLCAvMy9pLCAvNC9pXVxufTtcbnZhciBtYXRjaE1vbnRoUGF0dGVybnMgPSB7XG4gIG5hcnJvdzogL15bamZtYXNvbmRdL2ksXG4gIGFiYnJldmlhdGVkOiAvXihqYW58ZmVifG1hcnxhcHJ8bWF5fGp1bnxqdWx8YXVnfHNlcHxvY3R8bm92fGRlYykvaSxcbiAgd2lkZTogL14oamFudWFyeXxmZWJydWFyeXxtYXJjaHxhcHJpbHxtYXl8anVuZXxqdWx5fGF1Z3VzdHxzZXB0ZW1iZXJ8b2N0b2Jlcnxub3ZlbWJlcnxkZWNlbWJlcikvaVxufTtcbnZhciBwYXJzZU1vbnRoUGF0dGVybnMgPSB7XG4gIG5hcnJvdzogWy9eai9pLCAvXmYvaSwgL15tL2ksIC9eYS9pLCAvXm0vaSwgL15qL2ksIC9eai9pLCAvXmEvaSwgL15zL2ksIC9eby9pLCAvXm4vaSwgL15kL2ldLFxuICBhbnk6IFsvXmphL2ksIC9eZi9pLCAvXm1hci9pLCAvXmFwL2ksIC9ebWF5L2ksIC9eanVuL2ksIC9eanVsL2ksIC9eYXUvaSwgL15zL2ksIC9eby9pLCAvXm4vaSwgL15kL2ldXG59O1xudmFyIG1hdGNoRGF5UGF0dGVybnMgPSB7XG4gIG5hcnJvdzogL15bc210d2ZdL2ksXG4gIHNob3J0OiAvXihzdXxtb3x0dXx3ZXx0aHxmcnxzYSkvaSxcbiAgYWJicmV2aWF0ZWQ6IC9eKHN1bnxtb258dHVlfHdlZHx0aHV8ZnJpfHNhdCkvaSxcbiAgd2lkZTogL14oc3VuZGF5fG1vbmRheXx0dWVzZGF5fHdlZG5lc2RheXx0aHVyc2RheXxmcmlkYXl8c2F0dXJkYXkpL2lcbn07XG52YXIgcGFyc2VEYXlQYXR0ZXJucyA9IHtcbiAgbmFycm93OiBbL15zL2ksIC9ebS9pLCAvXnQvaSwgL153L2ksIC9edC9pLCAvXmYvaSwgL15zL2ldLFxuICBhbnk6IFsvXnN1L2ksIC9ebS9pLCAvXnR1L2ksIC9edy9pLCAvXnRoL2ksIC9eZi9pLCAvXnNhL2ldXG59O1xudmFyIG1hdGNoRGF5UGVyaW9kUGF0dGVybnMgPSB7XG4gIG5hcnJvdzogL14oYXxwfG1pfG58KGluIHRoZXxhdCkgKG1vcm5pbmd8YWZ0ZXJub29ufGV2ZW5pbmd8bmlnaHQpKS9pLFxuICBhbnk6IC9eKFthcF1cXC4/XFxzP21cXC4/fG1pZG5pZ2h0fG5vb258KGluIHRoZXxhdCkgKG1vcm5pbmd8YWZ0ZXJub29ufGV2ZW5pbmd8bmlnaHQpKS9pXG59O1xudmFyIHBhcnNlRGF5UGVyaW9kUGF0dGVybnMgPSB7XG4gIGFueToge1xuICAgIGFtOiAvXmEvaSxcbiAgICBwbTogL15wL2ksXG4gICAgbWlkbmlnaHQ6IC9ebWkvaSxcbiAgICBub29uOiAvXm5vL2ksXG4gICAgbW9ybmluZzogL21vcm5pbmcvaSxcbiAgICBhZnRlcm5vb246IC9hZnRlcm5vb24vaSxcbiAgICBldmVuaW5nOiAvZXZlbmluZy9pLFxuICAgIG5pZ2h0OiAvbmlnaHQvaVxuICB9XG59O1xudmFyIG1hdGNoID0ge1xuICBvcmRpbmFsTnVtYmVyOiBidWlsZE1hdGNoUGF0dGVybkZuKHtcbiAgICBtYXRjaFBhdHRlcm46IG1hdGNoT3JkaW5hbE51bWJlclBhdHRlcm4sXG4gICAgcGFyc2VQYXR0ZXJuOiBwYXJzZU9yZGluYWxOdW1iZXJQYXR0ZXJuLFxuICAgIHZhbHVlQ2FsbGJhY2s6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHBhcnNlSW50KHZhbHVlLCAxMCk7XG4gICAgfVxuICB9KSxcbiAgZXJhOiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoRXJhUGF0dGVybnMsXG4gICAgZGVmYXVsdE1hdGNoV2lkdGg6ICd3aWRlJyxcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZUVyYVBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiAnYW55J1xuICB9KSxcbiAgcXVhcnRlcjogYnVpbGRNYXRjaEZuKHtcbiAgICBtYXRjaFBhdHRlcm5zOiBtYXRjaFF1YXJ0ZXJQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogJ3dpZGUnLFxuICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlUXVhcnRlclBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiAnYW55JyxcbiAgICB2YWx1ZUNhbGxiYWNrOiBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgIHJldHVybiBpbmRleCArIDE7XG4gICAgfVxuICB9KSxcbiAgbW9udGg6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hNb250aFBhdHRlcm5zLFxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiAnd2lkZScsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VNb250aFBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiAnYW55J1xuICB9KSxcbiAgZGF5OiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoRGF5UGF0dGVybnMsXG4gICAgZGVmYXVsdE1hdGNoV2lkdGg6ICd3aWRlJyxcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZURheVBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiAnYW55J1xuICB9KSxcbiAgZGF5UGVyaW9kOiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoRGF5UGVyaW9kUGF0dGVybnMsXG4gICAgZGVmYXVsdE1hdGNoV2lkdGg6ICdhbnknLFxuICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlRGF5UGVyaW9kUGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknXG4gIH0pXG59O1xuZXhwb3J0IGRlZmF1bHQgbWF0Y2g7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRNYXRjaFBhdHRlcm5GbihhcmdzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgIHZhciBtYXRjaFJlc3VsdCA9IHN0cmluZy5tYXRjaChhcmdzLm1hdGNoUGF0dGVybik7XG4gICAgaWYgKCFtYXRjaFJlc3VsdCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1hdGNoZWRTdHJpbmcgPSBtYXRjaFJlc3VsdFswXTtcbiAgICB2YXIgcGFyc2VSZXN1bHQgPSBzdHJpbmcubWF0Y2goYXJncy5wYXJzZVBhdHRlcm4pO1xuICAgIGlmICghcGFyc2VSZXN1bHQpIHJldHVybiBudWxsO1xuICAgIHZhciB2YWx1ZSA9IGFyZ3MudmFsdWVDYWxsYmFjayA/IGFyZ3MudmFsdWVDYWxsYmFjayhwYXJzZVJlc3VsdFswXSkgOiBwYXJzZVJlc3VsdFswXTtcbiAgICB2YWx1ZSA9IG9wdGlvbnMudmFsdWVDYWxsYmFjayA/IG9wdGlvbnMudmFsdWVDYWxsYmFjayh2YWx1ZSkgOiB2YWx1ZTtcbiAgICB2YXIgcmVzdCA9IHN0cmluZy5zbGljZShtYXRjaGVkU3RyaW5nLmxlbmd0aCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIHJlc3Q6IHJlc3RcbiAgICB9O1xuICB9O1xufSIsImltcG9ydCBmb3JtYXREaXN0YW5jZSBmcm9tIFwiLi9fbGliL2Zvcm1hdERpc3RhbmNlL2luZGV4LmpzXCI7XG5pbXBvcnQgZm9ybWF0TG9uZyBmcm9tIFwiLi9fbGliL2Zvcm1hdExvbmcvaW5kZXguanNcIjtcbmltcG9ydCBmb3JtYXRSZWxhdGl2ZSBmcm9tIFwiLi9fbGliL2Zvcm1hdFJlbGF0aXZlL2luZGV4LmpzXCI7XG5pbXBvcnQgbG9jYWxpemUgZnJvbSBcIi4vX2xpYi9sb2NhbGl6ZS9pbmRleC5qc1wiO1xuaW1wb3J0IG1hdGNoIGZyb20gXCIuL19saWIvbWF0Y2gvaW5kZXguanNcIjtcblxuLyoqXG4gKiBAdHlwZSB7TG9jYWxlfVxuICogQGNhdGVnb3J5IExvY2FsZXNcbiAqIEBzdW1tYXJ5IEVuZ2xpc2ggbG9jYWxlIChVbml0ZWQgU3RhdGVzKS5cbiAqIEBsYW5ndWFnZSBFbmdsaXNoXG4gKiBAaXNvLTYzOS0yIGVuZ1xuICogQGF1dGhvciBTYXNoYSBLb3NzIFtAa29zc25vY29ycF17QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2tvc3Nub2NvcnB9XG4gKiBAYXV0aG9yIExlc2hhIEtvc3MgW0BsZXNoYWtvc3Nde0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9sZXNoYWtvc3N9XG4gKi9cbnZhciBsb2NhbGUgPSB7XG4gIGNvZGU6ICdlbi1VUycsXG4gIGZvcm1hdERpc3RhbmNlOiBmb3JtYXREaXN0YW5jZSxcbiAgZm9ybWF0TG9uZzogZm9ybWF0TG9uZyxcbiAgZm9ybWF0UmVsYXRpdmU6IGZvcm1hdFJlbGF0aXZlLFxuICBsb2NhbGl6ZTogbG9jYWxpemUsXG4gIG1hdGNoOiBtYXRjaCxcbiAgb3B0aW9uczoge1xuICAgIHdlZWtTdGFydHNPbjogMFxuICAgIC8qIFN1bmRheSAqL1xuICAgICxcbiAgICBmaXJzdFdlZWtDb250YWluc0RhdGU6IDFcbiAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IGxvY2FsZTsiLCJpbXBvcnQgYXNzaWduIGZyb20gXCIuLi9hc3NpZ24vaW5kZXguanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNsb25lT2JqZWN0KGRpcnR5T2JqZWN0KSB7XG4gIHJldHVybiBhc3NpZ24oe30sIGRpcnR5T2JqZWN0KTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBkaXJ0eU9iamVjdCkge1xuICBpZiAodGFyZ2V0ID09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhc3NpZ24gcmVxdWlyZXMgdGhhdCBpbnB1dCBwYXJhbWV0ZXIgbm90IGJlIG51bGwgb3IgdW5kZWZpbmVkJyk7XG4gIH1cblxuICBkaXJ0eU9iamVjdCA9IGRpcnR5T2JqZWN0IHx8IHt9O1xuXG4gIGZvciAodmFyIHByb3BlcnR5IGluIGRpcnR5T2JqZWN0KSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChkaXJ0eU9iamVjdCwgcHJvcGVydHkpKSB7XG4gICAgICB0YXJnZXRbcHJvcGVydHldID0gZGlydHlPYmplY3RbcHJvcGVydHldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IGNvbXBhcmVBc2MgZnJvbSBcIi4uL2NvbXBhcmVBc2MvaW5kZXguanNcIjtcbmltcG9ydCBkaWZmZXJlbmNlSW5Nb250aHMgZnJvbSBcIi4uL2RpZmZlcmVuY2VJbk1vbnRocy9pbmRleC5qc1wiO1xuaW1wb3J0IGRpZmZlcmVuY2VJblNlY29uZHMgZnJvbSBcIi4uL2RpZmZlcmVuY2VJblNlY29uZHMvaW5kZXguanNcIjtcbmltcG9ydCBkZWZhdWx0TG9jYWxlIGZyb20gXCIuLi9sb2NhbGUvZW4tVVMvaW5kZXguanNcIjtcbmltcG9ydCB0b0RhdGUgZnJvbSBcIi4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IGNsb25lT2JqZWN0IGZyb20gXCIuLi9fbGliL2Nsb25lT2JqZWN0L2luZGV4LmpzXCI7XG5pbXBvcnQgZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyBmcm9tIFwiLi4vX2xpYi9nZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xudmFyIE1JTlVURVNfSU5fREFZID0gMTQ0MDtcbnZhciBNSU5VVEVTX0lOX0FMTU9TVF9UV09fREFZUyA9IDI1MjA7XG52YXIgTUlOVVRFU19JTl9NT05USCA9IDQzMjAwO1xudmFyIE1JTlVURVNfSU5fVFdPX01PTlRIUyA9IDg2NDAwO1xuLyoqXG4gKiBAbmFtZSBmb3JtYXREaXN0YW5jZVxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBSZXR1cm4gdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzIGluIHdvcmRzLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJuIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcyBpbiB3b3Jkcy5cbiAqXG4gKiB8IERpc3RhbmNlIGJldHdlZW4gZGF0ZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgUmVzdWx0ICAgICAgICAgICAgICB8XG4gKiB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS18XG4gKiB8IDAgLi4uIDMwIHNlY3MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbGVzcyB0aGFuIGEgbWludXRlICB8XG4gKiB8IDMwIHNlY3MgLi4uIDEgbWluIDMwIHNlY3MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMSBtaW51dGUgICAgICAgICAgICB8XG4gKiB8IDEgbWluIDMwIHNlY3MgLi4uIDQ0IG1pbnMgMzAgc2VjcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgWzIuLjQ0XSBtaW51dGVzICAgICB8XG4gKiB8IDQ0IG1pbnMgLi4uIDMwIHNlY3MgLi4uIDg5IG1pbnMgMzAgc2VjcyAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYWJvdXQgMSBob3VyICAgICAgICB8XG4gKiB8IDg5IG1pbnMgMzAgc2VjcyAuLi4gMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyAgICAgICAgICAgICAgICAgICAgICAgIHwgYWJvdXQgWzIuLjI0XSBob3VycyB8XG4gKiB8IDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgLi4uIDQxIGhycyA1OSBtaW5zIDMwIHNlY3MgICAgICAgICAgICAgICAgIHwgMSBkYXkgICAgICAgICAgICAgICB8XG4gKiB8IDQxIGhycyA1OSBtaW5zIDMwIHNlY3MgLi4uIDI5IGRheXMgMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyAgICAgICAgIHwgWzIuLjMwXSBkYXlzICAgICAgICB8XG4gKiB8IDI5IGRheXMgMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyAuLi4gNDQgZGF5cyAyMyBocnMgNTkgbWlucyAzMCBzZWNzIHwgYWJvdXQgMSBtb250aCAgICAgICB8XG4gKiB8IDQ0IGRheXMgMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyAuLi4gNTkgZGF5cyAyMyBocnMgNTkgbWlucyAzMCBzZWNzIHwgYWJvdXQgMiBtb250aHMgICAgICB8XG4gKiB8IDU5IGRheXMgMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyAuLi4gMSB5ciAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgWzIuLjEyXSBtb250aHMgICAgICB8XG4gKiB8IDEgeXIgLi4uIDEgeXIgMyBtb250aHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYWJvdXQgMSB5ZWFyICAgICAgICB8XG4gKiB8IDEgeXIgMyBtb250aHMgLi4uIDEgeXIgOSBtb250aCBzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgb3ZlciAxIHllYXIgICAgICAgICB8XG4gKiB8IDEgeXIgOSBtb250aHMgLi4uIDIgeXJzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYWxtb3N0IDIgeWVhcnMgICAgICB8XG4gKiB8IE4geXJzIC4uLiBOIHlycyAzIG1vbnRocyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYWJvdXQgTiB5ZWFycyAgICAgICB8XG4gKiB8IE4geXJzIDMgbW9udGhzIC4uLiBOIHlycyA5IG1vbnRocyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgb3ZlciBOIHllYXJzICAgICAgICB8XG4gKiB8IE4geXJzIDkgbW9udGhzIC4uLiBOKzEgeXJzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYWxtb3N0IE4rMSB5ZWFycyAgICB8XG4gKlxuICogV2l0aCBgb3B0aW9ucy5pbmNsdWRlU2Vjb25kcyA9PSB0cnVlYDpcbiAqIHwgRGlzdGFuY2UgYmV0d2VlbiBkYXRlcyB8IFJlc3VsdCAgICAgICAgICAgICAgIHxcbiAqIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcbiAqIHwgMCBzZWNzIC4uLiA1IHNlY3MgICAgICB8IGxlc3MgdGhhbiA1IHNlY29uZHMgIHxcbiAqIHwgNSBzZWNzIC4uLiAxMCBzZWNzICAgICB8IGxlc3MgdGhhbiAxMCBzZWNvbmRzIHxcbiAqIHwgMTAgc2VjcyAuLi4gMjAgc2VjcyAgICB8IGxlc3MgdGhhbiAyMCBzZWNvbmRzIHxcbiAqIHwgMjAgc2VjcyAuLi4gNDAgc2VjcyAgICB8IGhhbGYgYSBtaW51dGUgICAgICAgIHxcbiAqIHwgNDAgc2VjcyAuLi4gNjAgc2VjcyAgICB8IGxlc3MgdGhhbiBhIG1pbnV0ZSAgIHxcbiAqIHwgNjAgc2VjcyAuLi4gOTAgc2VjcyAgICB8IDEgbWludXRlICAgICAgICAgICAgIHxcbiAqXG4gKiAjIyMgdjIuMC4wIGJyZWFraW5nIGNoYW5nZXM6XG4gKlxuICogLSBbQ2hhbmdlcyB0aGF0IGFyZSBjb21tb24gZm9yIHRoZSB3aG9sZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjQ29tbW9uLUNoYW5nZXMpLlxuICpcbiAqIC0gVGhlIGZ1bmN0aW9uIHdhcyByZW5hbWVkIGZyb20gYGRpc3RhbmNlSW5Xb3JkcyBgIHRvIGBmb3JtYXREaXN0YW5jZWBcbiAqICAgdG8gbWFrZSBpdHMgbmFtZSBjb25zaXN0ZW50IHdpdGggYGZvcm1hdGAgYW5kIGBmb3JtYXRSZWxhdGl2ZWAuXG4gKlxuICogLSBUaGUgb3JkZXIgb2YgYXJndW1lbnRzIGlzIHN3YXBwZWQgdG8gbWFrZSB0aGUgZnVuY3Rpb25cbiAqICAgY29uc2lzdGVudCB3aXRoIGBkaWZmZXJlbmNlSW4uLi5gIGZ1bmN0aW9ucy5cbiAqXG4gKiAgIGBgYGphdmFzY3JpcHRcbiAqICAgLy8gQmVmb3JlIHYyLjAuMFxuICpcbiAqICAgZGlzdGFuY2VJbldvcmRzKFxuICogICAgIG5ldyBEYXRlKDE5ODYsIDMsIDQsIDEwLCAzMiwgMCksXG4gKiAgICAgbmV3IERhdGUoMTk4NiwgMywgNCwgMTEsIDMyLCAwKSxcbiAqICAgICB7IGFkZFN1ZmZpeDogdHJ1ZSB9XG4gKiAgICkgLy89PiAnaW4gYWJvdXQgMSBob3VyJ1xuICpcbiAqICAgLy8gdjIuMC4wIG9ud2FyZFxuICpcbiAqICAgZm9ybWF0RGlzdGFuY2UoXG4gKiAgICAgbmV3IERhdGUoMTk4NiwgMywgNCwgMTEsIDMyLCAwKSxcbiAqICAgICBuZXcgRGF0ZSgxOTg2LCAzLCA0LCAxMCwgMzIsIDApLFxuICogICAgIHsgYWRkU3VmZml4OiB0cnVlIH1cbiAqICAgKSAvLz0+ICdpbiBhYm91dCAxIGhvdXInXG4gKiAgIGBgYFxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGUgLSB0aGUgZGF0ZVxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gYmFzZURhdGUgLSB0aGUgZGF0ZSB0byBjb21wYXJlIHdpdGhcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBhbiBvYmplY3Qgd2l0aCBvcHRpb25zLlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5pbmNsdWRlU2Vjb25kcz1mYWxzZV0gLSBkaXN0YW5jZXMgbGVzcyB0aGFuIGEgbWludXRlIGFyZSBtb3JlIGRldGFpbGVkXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmFkZFN1ZmZpeD1mYWxzZV0gLSByZXN1bHQgaW5kaWNhdGVzIGlmIHRoZSBzZWNvbmQgZGF0ZSBpcyBlYXJsaWVyIG9yIGxhdGVyIHRoYW4gdGhlIGZpcnN0XG4gKiBAcGFyYW0ge0xvY2FsZX0gW29wdGlvbnMubG9jYWxlPWRlZmF1bHRMb2NhbGVdIC0gdGhlIGxvY2FsZSBvYmplY3QuIFNlZSBbTG9jYWxlXXtAbGluayBodHRwczovL2RhdGUtZm5zLm9yZy9kb2NzL0xvY2FsZX1cbiAqIEByZXR1cm5zIHtTdHJpbmd9IHRoZSBkaXN0YW5jZSBpbiB3b3Jkc1xuICogQHRocm93cyB7VHlwZUVycm9yfSAyIGFyZ3VtZW50cyByZXF1aXJlZFxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gYGRhdGVgIG11c3Qgbm90IGJlIEludmFsaWQgRGF0ZVxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gYGJhc2VEYXRlYCBtdXN0IG5vdCBiZSBJbnZhbGlkIERhdGVcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBvcHRpb25zLmxvY2FsZWAgbXVzdCBjb250YWluIGBmb3JtYXREaXN0YW5jZWAgcHJvcGVydHlcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gV2hhdCBpcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiAyIEp1bHkgMjAxNCBhbmQgMSBKYW51YXJ5IDIwMTU/XG4gKiBjb25zdCByZXN1bHQgPSBmb3JtYXREaXN0YW5jZShuZXcgRGF0ZSgyMDE0LCA2LCAyKSwgbmV3IERhdGUoMjAxNSwgMCwgMSkpXG4gKiAvLz0+ICc2IG1vbnRocydcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gV2hhdCBpcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiAxIEphbnVhcnkgMjAxNSAwMDowMDoxNVxuICogLy8gYW5kIDEgSmFudWFyeSAyMDE1IDAwOjAwOjAwLCBpbmNsdWRpbmcgc2Vjb25kcz9cbiAqIGNvbnN0IHJlc3VsdCA9IGZvcm1hdERpc3RhbmNlKFxuICogICBuZXcgRGF0ZSgyMDE1LCAwLCAxLCAwLCAwLCAxNSksXG4gKiAgIG5ldyBEYXRlKDIwMTUsIDAsIDEsIDAsIDAsIDApLFxuICogICB7IGluY2x1ZGVTZWNvbmRzOiB0cnVlIH1cbiAqIClcbiAqIC8vPT4gJ2xlc3MgdGhhbiAyMCBzZWNvbmRzJ1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBXaGF0IGlzIHRoZSBkaXN0YW5jZSBmcm9tIDEgSmFudWFyeSAyMDE2XG4gKiAvLyB0byAxIEphbnVhcnkgMjAxNSwgd2l0aCBhIHN1ZmZpeD9cbiAqIGNvbnN0IHJlc3VsdCA9IGZvcm1hdERpc3RhbmNlKG5ldyBEYXRlKDIwMTUsIDAsIDEpLCBuZXcgRGF0ZSgyMDE2LCAwLCAxKSwge1xuICogICBhZGRTdWZmaXg6IHRydWVcbiAqIH0pXG4gKiAvLz0+ICdhYm91dCAxIHllYXIgYWdvJ1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBXaGF0IGlzIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIDEgQXVndXN0IDIwMTYgYW5kIDEgSmFudWFyeSAyMDE1IGluIEVzcGVyYW50bz9cbiAqIGltcG9ydCB7IGVvTG9jYWxlIH0gZnJvbSAnZGF0ZS1mbnMvbG9jYWxlL2VvJ1xuICogY29uc3QgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2UobmV3IERhdGUoMjAxNiwgNywgMSksIG5ldyBEYXRlKDIwMTUsIDAsIDEpLCB7XG4gKiAgIGxvY2FsZTogZW9Mb2NhbGVcbiAqIH0pXG4gKiAvLz0+ICdwbGkgb2wgMSBqYXJvJ1xuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvcm1hdERpc3RhbmNlKGRpcnR5RGF0ZSwgZGlydHlCYXNlRGF0ZSkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG4gIHJlcXVpcmVkQXJncygyLCBhcmd1bWVudHMpO1xuICB2YXIgbG9jYWxlID0gb3B0aW9ucy5sb2NhbGUgfHwgZGVmYXVsdExvY2FsZTtcblxuICBpZiAoIWxvY2FsZS5mb3JtYXREaXN0YW5jZSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdsb2NhbGUgbXVzdCBjb250YWluIGZvcm1hdERpc3RhbmNlIHByb3BlcnR5Jyk7XG4gIH1cblxuICB2YXIgY29tcGFyaXNvbiA9IGNvbXBhcmVBc2MoZGlydHlEYXRlLCBkaXJ0eUJhc2VEYXRlKTtcblxuICBpZiAoaXNOYU4oY29tcGFyaXNvbikpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCB0aW1lIHZhbHVlJyk7XG4gIH1cblxuICB2YXIgbG9jYWxpemVPcHRpb25zID0gY2xvbmVPYmplY3Qob3B0aW9ucyk7XG4gIGxvY2FsaXplT3B0aW9ucy5hZGRTdWZmaXggPSBCb29sZWFuKG9wdGlvbnMuYWRkU3VmZml4KTtcbiAgbG9jYWxpemVPcHRpb25zLmNvbXBhcmlzb24gPSBjb21wYXJpc29uO1xuICB2YXIgZGF0ZUxlZnQ7XG4gIHZhciBkYXRlUmlnaHQ7XG5cbiAgaWYgKGNvbXBhcmlzb24gPiAwKSB7XG4gICAgZGF0ZUxlZnQgPSB0b0RhdGUoZGlydHlCYXNlRGF0ZSk7XG4gICAgZGF0ZVJpZ2h0ID0gdG9EYXRlKGRpcnR5RGF0ZSk7XG4gIH0gZWxzZSB7XG4gICAgZGF0ZUxlZnQgPSB0b0RhdGUoZGlydHlEYXRlKTtcbiAgICBkYXRlUmlnaHQgPSB0b0RhdGUoZGlydHlCYXNlRGF0ZSk7XG4gIH1cblxuICB2YXIgc2Vjb25kcyA9IGRpZmZlcmVuY2VJblNlY29uZHMoZGF0ZVJpZ2h0LCBkYXRlTGVmdCk7XG4gIHZhciBvZmZzZXRJblNlY29uZHMgPSAoZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhkYXRlUmlnaHQpIC0gZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhkYXRlTGVmdCkpIC8gMTAwMDtcbiAgdmFyIG1pbnV0ZXMgPSBNYXRoLnJvdW5kKChzZWNvbmRzIC0gb2Zmc2V0SW5TZWNvbmRzKSAvIDYwKTtcbiAgdmFyIG1vbnRoczsgLy8gMCB1cCB0byAyIG1pbnNcblxuICBpZiAobWludXRlcyA8IDIpIHtcbiAgICBpZiAob3B0aW9ucy5pbmNsdWRlU2Vjb25kcykge1xuICAgICAgaWYgKHNlY29uZHMgPCA1KSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ2xlc3NUaGFuWFNlY29uZHMnLCA1LCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIGlmIChzZWNvbmRzIDwgMTApIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnbGVzc1RoYW5YU2Vjb25kcycsIDEwLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIGlmIChzZWNvbmRzIDwgMjApIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnbGVzc1RoYW5YU2Vjb25kcycsIDIwLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIGlmIChzZWNvbmRzIDwgNDApIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnaGFsZkFNaW51dGUnLCBudWxsLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIGlmIChzZWNvbmRzIDwgNjApIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnbGVzc1RoYW5YTWludXRlcycsIDEsIGxvY2FsaXplT3B0aW9ucyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCd4TWludXRlcycsIDEsIGxvY2FsaXplT3B0aW9ucyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChtaW51dGVzID09PSAwKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ2xlc3NUaGFuWE1pbnV0ZXMnLCAxLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgneE1pbnV0ZXMnLCBtaW51dGVzLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgICAgfVxuICAgIH0gLy8gMiBtaW5zIHVwIHRvIDAuNzUgaHJzXG5cbiAgfSBlbHNlIGlmIChtaW51dGVzIDwgNDUpIHtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCd4TWludXRlcycsIG1pbnV0ZXMsIGxvY2FsaXplT3B0aW9ucyk7IC8vIDAuNzUgaHJzIHVwIHRvIDEuNSBocnNcbiAgfSBlbHNlIGlmIChtaW51dGVzIDwgOTApIHtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCdhYm91dFhIb3VycycsIDEsIGxvY2FsaXplT3B0aW9ucyk7IC8vIDEuNSBocnMgdXAgdG8gMjQgaHJzXG4gIH0gZWxzZSBpZiAobWludXRlcyA8IE1JTlVURVNfSU5fREFZKSB7XG4gICAgdmFyIGhvdXJzID0gTWF0aC5yb3VuZChtaW51dGVzIC8gNjApO1xuICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ2Fib3V0WEhvdXJzJywgaG91cnMsIGxvY2FsaXplT3B0aW9ucyk7IC8vIDEgZGF5IHVwIHRvIDEuNzUgZGF5c1xuICB9IGVsc2UgaWYgKG1pbnV0ZXMgPCBNSU5VVEVTX0lOX0FMTU9TVF9UV09fREFZUykge1xuICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ3hEYXlzJywgMSwgbG9jYWxpemVPcHRpb25zKTsgLy8gMS43NSBkYXlzIHVwIHRvIDMwIGRheXNcbiAgfSBlbHNlIGlmIChtaW51dGVzIDwgTUlOVVRFU19JTl9NT05USCkge1xuICAgIHZhciBkYXlzID0gTWF0aC5yb3VuZChtaW51dGVzIC8gTUlOVVRFU19JTl9EQVkpO1xuICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoJ3hEYXlzJywgZGF5cywgbG9jYWxpemVPcHRpb25zKTsgLy8gMSBtb250aCB1cCB0byAyIG1vbnRoc1xuICB9IGVsc2UgaWYgKG1pbnV0ZXMgPCBNSU5VVEVTX0lOX1RXT19NT05USFMpIHtcbiAgICBtb250aHMgPSBNYXRoLnJvdW5kKG1pbnV0ZXMgLyBNSU5VVEVTX0lOX01PTlRIKTtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCdhYm91dFhNb250aHMnLCBtb250aHMsIGxvY2FsaXplT3B0aW9ucyk7XG4gIH1cblxuICBtb250aHMgPSBkaWZmZXJlbmNlSW5Nb250aHMoZGF0ZVJpZ2h0LCBkYXRlTGVmdCk7IC8vIDIgbW9udGhzIHVwIHRvIDEyIG1vbnRoc1xuXG4gIGlmIChtb250aHMgPCAxMikge1xuICAgIHZhciBuZWFyZXN0TW9udGggPSBNYXRoLnJvdW5kKG1pbnV0ZXMgLyBNSU5VVEVTX0lOX01PTlRIKTtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKCd4TW9udGhzJywgbmVhcmVzdE1vbnRoLCBsb2NhbGl6ZU9wdGlvbnMpOyAvLyAxIHllYXIgdXAgdG8gbWF4IERhdGVcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9udGhzU2luY2VTdGFydE9mWWVhciA9IG1vbnRocyAlIDEyO1xuICAgIHZhciB5ZWFycyA9IE1hdGguZmxvb3IobW9udGhzIC8gMTIpOyAvLyBOIHllYXJzIHVwIHRvIDEgeWVhcnMgMyBtb250aHNcblxuICAgIGlmIChtb250aHNTaW5jZVN0YXJ0T2ZZZWFyIDwgMykge1xuICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnYWJvdXRYWWVhcnMnLCB5ZWFycywgbG9jYWxpemVPcHRpb25zKTsgLy8gTiB5ZWFycyAzIG1vbnRocyB1cCB0byBOIHllYXJzIDkgbW9udGhzXG4gICAgfSBlbHNlIGlmIChtb250aHNTaW5jZVN0YXJ0T2ZZZWFyIDwgOSkge1xuICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnb3ZlclhZZWFycycsIHllYXJzLCBsb2NhbGl6ZU9wdGlvbnMpOyAvLyBOIHllYXJzIDkgbW9udGhzIHVwIHRvIE4geWVhciAxMiBtb250aHNcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZSgnYWxtb3N0WFllYXJzJywgeWVhcnMgKyAxLCBsb2NhbGl6ZU9wdGlvbnMpO1xuICAgIH1cbiAgfVxufSIsImltcG9ydCBkaXN0YW5jZUluV29yZHMgZnJvbSBcIi4uL2Zvcm1hdERpc3RhbmNlL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBmb3JtYXREaXN0YW5jZVRvTm93XG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IFJldHVybiB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZSBhbmQgbm93IGluIHdvcmRzLlxuICogQHB1cmUgZmFsc2VcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJldHVybiB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZSBhbmQgbm93IGluIHdvcmRzLlxuICpcbiAqIHwgRGlzdGFuY2UgdG8gbm93ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBSZXN1bHQgICAgICAgICAgICAgIHxcbiAqIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcbiAqIHwgMCAuLi4gMzAgc2VjcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBsZXNzIHRoYW4gYSBtaW51dGUgIHxcbiAqIHwgMzAgc2VjcyAuLi4gMSBtaW4gMzAgc2VjcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAxIG1pbnV0ZSAgICAgICAgICAgIHxcbiAqIHwgMSBtaW4gMzAgc2VjcyAuLi4gNDQgbWlucyAzMCBzZWNzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBbMi4uNDRdIG1pbnV0ZXMgICAgIHxcbiAqIHwgNDQgbWlucyAuLi4gMzAgc2VjcyAuLi4gODkgbWlucyAzMCBzZWNzICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhYm91dCAxIGhvdXIgICAgICAgIHxcbiAqIHwgODkgbWlucyAzMCBzZWNzIC4uLiAyMyBocnMgNTkgbWlucyAzMCBzZWNzICAgICAgICAgICAgICAgICAgICAgICAgfCBhYm91dCBbMi4uMjRdIGhvdXJzIHxcbiAqIHwgMjMgaHJzIDU5IG1pbnMgMzAgc2VjcyAuLi4gNDEgaHJzIDU5IG1pbnMgMzAgc2VjcyAgICAgICAgICAgICAgICAgfCAxIGRheSAgICAgICAgICAgICAgIHxcbiAqIHwgNDEgaHJzIDU5IG1pbnMgMzAgc2VjcyAuLi4gMjkgZGF5cyAyMyBocnMgNTkgbWlucyAzMCBzZWNzICAgICAgICAgfCBbMi4uMzBdIGRheXMgICAgICAgIHxcbiAqIHwgMjkgZGF5cyAyMyBocnMgNTkgbWlucyAzMCBzZWNzIC4uLiA0NCBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgfCBhYm91dCAxIG1vbnRoICAgICAgIHxcbiAqIHwgNDQgZGF5cyAyMyBocnMgNTkgbWlucyAzMCBzZWNzIC4uLiA1OSBkYXlzIDIzIGhycyA1OSBtaW5zIDMwIHNlY3MgfCBhYm91dCAyIG1vbnRocyAgICAgIHxcbiAqIHwgNTkgZGF5cyAyMyBocnMgNTkgbWlucyAzMCBzZWNzIC4uLiAxIHlyICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBbMi4uMTJdIG1vbnRocyAgICAgIHxcbiAqIHwgMSB5ciAuLi4gMSB5ciAzIG1vbnRocyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhYm91dCAxIHllYXIgICAgICAgIHxcbiAqIHwgMSB5ciAzIG1vbnRocyAuLi4gMSB5ciA5IG1vbnRoIHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBvdmVyIDEgeWVhciAgICAgICAgIHxcbiAqIHwgMSB5ciA5IG1vbnRocyAuLi4gMiB5cnMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhbG1vc3QgMiB5ZWFycyAgICAgIHxcbiAqIHwgTiB5cnMgLi4uIE4geXJzIDMgbW9udGhzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhYm91dCBOIHllYXJzICAgICAgIHxcbiAqIHwgTiB5cnMgMyBtb250aHMgLi4uIE4geXJzIDkgbW9udGhzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBvdmVyIE4geWVhcnMgICAgICAgIHxcbiAqIHwgTiB5cnMgOSBtb250aHMgLi4uIE4rMSB5cnMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhbG1vc3QgTisxIHllYXJzICAgIHxcbiAqXG4gKiBXaXRoIGBvcHRpb25zLmluY2x1ZGVTZWNvbmRzID09IHRydWVgOlxuICogfCBEaXN0YW5jZSB0byBub3cgICAgIHwgUmVzdWx0ICAgICAgICAgICAgICAgfFxuICogfC0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tfFxuICogfCAwIHNlY3MgLi4uIDUgc2VjcyAgIHwgbGVzcyB0aGFuIDUgc2Vjb25kcyAgfFxuICogfCA1IHNlY3MgLi4uIDEwIHNlY3MgIHwgbGVzcyB0aGFuIDEwIHNlY29uZHMgfFxuICogfCAxMCBzZWNzIC4uLiAyMCBzZWNzIHwgbGVzcyB0aGFuIDIwIHNlY29uZHMgfFxuICogfCAyMCBzZWNzIC4uLiA0MCBzZWNzIHwgaGFsZiBhIG1pbnV0ZSAgICAgICAgfFxuICogfCA0MCBzZWNzIC4uLiA2MCBzZWNzIHwgbGVzcyB0aGFuIGEgbWludXRlICAgfFxuICogfCA2MCBzZWNzIC4uLiA5MCBzZWNzIHwgMSBtaW51dGUgICAgICAgICAgICAgfFxuICpcbiAqID4g4pqg77iPIFBsZWFzZSBub3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBpcyBub3QgcHJlc2VudCBpbiB0aGUgRlAgc3VibW9kdWxlIGFzXG4gKiA+IGl0IHVzZXMgYERhdGUubm93KClgIGludGVybmFsbHkgaGVuY2UgaW1wdXJlIGFuZCBjYW4ndCBiZSBzYWZlbHkgY3VycmllZC5cbiAqXG4gKiAjIyMgdjIuMC4wIGJyZWFraW5nIGNoYW5nZXM6XG4gKlxuICogLSBbQ2hhbmdlcyB0aGF0IGFyZSBjb21tb24gZm9yIHRoZSB3aG9sZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjQ29tbW9uLUNoYW5nZXMpLlxuICpcbiAqIC0gVGhlIGZ1bmN0aW9uIHdhcyByZW5hbWVkIGZyb20gYGRpc3RhbmNlSW5Xb3Jkc1RvTm93IGAgdG8gYGZvcm1hdERpc3RhbmNlVG9Ob3dgXG4gKiAgIHRvIG1ha2UgaXRzIG5hbWUgY29uc2lzdGVudCB3aXRoIGBmb3JtYXRgIGFuZCBgZm9ybWF0UmVsYXRpdmVgLlxuICpcbiAqICAgYGBgamF2YXNjcmlwdFxuICogICAvLyBCZWZvcmUgdjIuMC4wXG4gKlxuICogICBkaXN0YW5jZUluV29yZHNUb05vdyhuZXcgRGF0ZSgyMDE0LCA2LCAyKSwgeyBhZGRTdWZmaXg6IHRydWUgfSlcbiAqICAgLy89PiAnaW4gNiBtb250aHMnXG4gKlxuICogICAvLyB2Mi4wLjAgb253YXJkXG4gKlxuICogICBmb3JtYXREaXN0YW5jZVRvTm93KG5ldyBEYXRlKDIwMTQsIDYsIDIpLCB7IGFkZFN1ZmZpeDogdHJ1ZSB9KVxuICogICAvLz0+ICdpbiA2IG1vbnRocydcbiAqICAgYGBgXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZSAtIHRoZSBnaXZlbiBkYXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gdGhlIG9iamVjdCB3aXRoIG9wdGlvbnNcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuaW5jbHVkZVNlY29uZHM9ZmFsc2VdIC0gZGlzdGFuY2VzIGxlc3MgdGhhbiBhIG1pbnV0ZSBhcmUgbW9yZSBkZXRhaWxlZFxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5hZGRTdWZmaXg9ZmFsc2VdIC0gcmVzdWx0IHNwZWNpZmllcyBpZiBub3cgaXMgZWFybGllciBvciBsYXRlciB0aGFuIHRoZSBwYXNzZWQgZGF0ZVxuICogQHBhcmFtIHtMb2NhbGV9IFtvcHRpb25zLmxvY2FsZT1kZWZhdWx0TG9jYWxlXSAtIHRoZSBsb2NhbGUgb2JqZWN0LiBTZWUgW0xvY2FsZV17QGxpbmsgaHR0cHM6Ly9kYXRlLWZucy5vcmcvZG9jcy9Mb2NhbGV9XG4gKiBAcmV0dXJucyB7U3RyaW5nfSB0aGUgZGlzdGFuY2UgaW4gd29yZHNcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gYGRhdGVgIG11c3Qgbm90IGJlIEludmFsaWQgRGF0ZVxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gYG9wdGlvbnMubG9jYWxlYCBtdXN0IGNvbnRhaW4gYGZvcm1hdERpc3RhbmNlYCBwcm9wZXJ0eVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBJZiB0b2RheSBpcyAxIEphbnVhcnkgMjAxNSwgd2hhdCBpcyB0aGUgZGlzdGFuY2UgdG8gMiBKdWx5IDIwMTQ/XG4gKiB2YXIgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VUb05vdyhcbiAqICAgbmV3IERhdGUoMjAxNCwgNiwgMilcbiAqIClcbiAqIC8vPT4gJzYgbW9udGhzJ1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBJZiBub3cgaXMgMSBKYW51YXJ5IDIwMTUgMDA6MDA6MDAsXG4gKiAvLyB3aGF0IGlzIHRoZSBkaXN0YW5jZSB0byAxIEphbnVhcnkgMjAxNSAwMDowMDoxNSwgaW5jbHVkaW5nIHNlY29uZHM/XG4gKiB2YXIgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VUb05vdyhcbiAqICAgbmV3IERhdGUoMjAxNSwgMCwgMSwgMCwgMCwgMTUpLFxuICogICB7aW5jbHVkZVNlY29uZHM6IHRydWV9XG4gKiApXG4gKiAvLz0+ICdsZXNzIHRoYW4gMjAgc2Vjb25kcydcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSWYgdG9kYXkgaXMgMSBKYW51YXJ5IDIwMTUsXG4gKiAvLyB3aGF0IGlzIHRoZSBkaXN0YW5jZSB0byAxIEphbnVhcnkgMjAxNiwgd2l0aCBhIHN1ZmZpeD9cbiAqIHZhciByZXN1bHQgPSBmb3JtYXREaXN0YW5jZVRvTm93KFxuICogICBuZXcgRGF0ZSgyMDE2LCAwLCAxKSxcbiAqICAge2FkZFN1ZmZpeDogdHJ1ZX1cbiAqIClcbiAqIC8vPT4gJ2luIGFib3V0IDEgeWVhcidcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSWYgdG9kYXkgaXMgMSBKYW51YXJ5IDIwMTUsXG4gKiAvLyB3aGF0IGlzIHRoZSBkaXN0YW5jZSB0byAxIEF1Z3VzdCAyMDE2IGluIEVzcGVyYW50bz9cbiAqIHZhciBlb0xvY2FsZSA9IHJlcXVpcmUoJ2RhdGUtZm5zL2xvY2FsZS9lbycpXG4gKiB2YXIgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VUb05vdyhcbiAqICAgbmV3IERhdGUoMjAxNiwgNywgMSksXG4gKiAgIHtsb2NhbGU6IGVvTG9jYWxlfVxuICogKVxuICogLy89PiAncGxpIG9sIDEgamFybydcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXREaXN0YW5jZVRvTm93KGRpcnR5RGF0ZSwgZGlydHlPcHRpb25zKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICByZXR1cm4gZGlzdGFuY2VJbldvcmRzKGRpcnR5RGF0ZSwgRGF0ZS5ub3coKSwgZGlydHlPcHRpb25zKTtcbn0iLCIgXG5pbXBvcnQgeyBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMsIGZvcm1hdERpc3RhbmNlVG9Ob3csIGludGVydmFsVG9EdXJhdGlvbiwgcGFyc2VJU08gfSBmcm9tICdkYXRlLWZucyc7XG5pbXBvcnQgTGlzdEl0ZW1PYmogZnJvbSAnLi9MaXN0SXRlbU9iai5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRhdGFFdmVudHMoKSB7XG4gICAgY29uc3QgbGlzdEl0ZW1PYmplY3QgPSBMaXN0SXRlbU9iaigpO1xuXG4gICAgY29uc3QgYWRkTGlzdEl0ZW1Ub0RCID0gKGxpc3RJdGVtKSA9PiB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGxpc3RJdGVtLklELCBKU09OLnN0cmluZ2lmeShsaXN0SXRlbSkpO1xuICAgIH0gICBcblxuICAgIGNvbnN0IGRlbGV0ZVRoaXNPYmplY3RGcm9tREIgPSAobGlzdEl0ZW0pID0+IHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0obGlzdEl0ZW0uSUQpO1xuICAgIH1cblxuICAgIGNvbnN0IGFkZFN0YXRlU2VsZWN0ZWQgPSAobGlzdEl0ZW0pID0+IHtcbiAgICAgICAgbGlzdEl0ZW0uc2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICBhZGRMaXN0SXRlbVRvREIobGlzdEl0ZW0pO1xuICAgIH1cbiAgICBjb25zdCByZW1vdmVTdGF0ZVNlbGVjdGVkID0gKGxpc3RJdGVtKSA9PiB7XG4gICAgICAgIGxpc3RJdGVtLnNlbGVjdGVkID0gZmFsc2U7XG4gICAgICAgIGFkZExpc3RJdGVtVG9EQihsaXN0SXRlbSk7XG4gICAgfVxuICAgIFxuICAgIFxuICAgIGNvbnN0IGdldExpc3RJdGVtRGV0YWlscyA9IChyZXF1ZXN0VHlwZSwgaXRlbUlEKSA9PiB7XG4gICAgICAgIGxldCBzdG9yYWdlSXRlbXNBcnJheSA9IFtdO1xuICAgICAgICBjb25zdCBzdG9yYWdlS2V5cyA9IE9iamVjdC5rZXlzKGxvY2FsU3RvcmFnZSk7XG4gICAgICAgICBmb3IgKGxldCBpdGVtIGluIHN0b3JhZ2VLZXlzICkge1xuICAgICAgICAgICAgY29uc3QgaXRlbVRvQWRkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShzdG9yYWdlS2V5c1tpdGVtXSkpO1xuICAgICAgICAgICAgaWYgKCBpdGVtVG9BZGQgIT0gbnVsbCApIHtcbiAgICAgICAgICAgICAgICBzdG9yYWdlSXRlbXNBcnJheS5wdXNoKGl0ZW1Ub0FkZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuXG4gICAgICAgIGlmICggcmVxdWVzdFR5cGUgPT0gXCJpc1BhcmVudFwiICkge1xuICAgICAgICAgICAgY29uc3QgcGFyZW50SXRlbXMgPSBzdG9yYWdlSXRlbXNBcnJheS5maWx0ZXIoXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24oc3RvcmFnZUl0ZW1zQXJyYXkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0b3JhZ2VJdGVtc0FycmF5LnBhcmVudExpc3QgPT0gXCJwYXJlbnRcIiAmJiBzdG9yYWdlSXRlbXNBcnJheS5jb21taXR0ZWQgPT0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFyZW50SXRlbXM7XG4gICAgICAgIH0gZWxzZSBpZiAoIHJlcXVlc3RUeXBlID09IFwiZ2V0MUl0ZW1cIiAmJiBpdGVtSUQgPiAtMSApIHtcbiAgICAgICAgICAgIGNvbnN0IGdldDFJdGVtID0gc3RvcmFnZUl0ZW1zQXJyYXkuZmluZChzdG9yYWdlSXRlbXNBcnJheSA9PiBzdG9yYWdlSXRlbXNBcnJheS5JRCA9PSBpdGVtSUQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXQxSXRlbTtcbiAgICAgICAgfSBlbHNlIGlmICggcmVxdWVzdFR5cGUgPT0gXCJnZXRMaXN0SXRlbUNoaWxkcmVuXCIgKSB7XG4gICAgICAgICAgICBjb25zdCBjaGlsZExpc3QgPSBzdG9yYWdlSXRlbXNBcnJheS5maWx0ZXIoXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24oc3RvcmFnZUl0ZW1zQXJyYXkpe3JldHVybiBzdG9yYWdlSXRlbXNBcnJheS5wYXJlbnRMaXN0ID09IGl0ZW1JRH1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBjb25zdCBjaGlsZExpc3RTb3J0ZWQgPSBjaGlsZExpc3Quc29ydChmdW5jdGlvbiBjb21wYXJlRm4oYSwgYil7XG4gICAgICAgICAgICAgICAgbGV0IHNvcnRWYWx1ZSA9IDA7XG4gICAgICAgICAgICAgICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICAgIGxldCBkYXlzQSA9IGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhwYXJzZUlTTyhhLmR1ZURhdGUpLCB0b2RheSk7XG4gICAgICAgICAgICAgICAgbGV0IGRheXNCID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKHBhcnNlSVNPKGIuZHVlRGF0ZSksIHRvZGF5KTtcblxuXG4gICAgICAgICAgICAgICAgaWYgKGlzTmFOKGRheXNBKSkge1xuICAgICAgICAgICAgICAgICAgICBzb3J0VmFsdWUgKz0gLTEwMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRheXNBID4gZGF5c0IpIHtcbiAgICAgICAgICAgICAgICAgICAgc29ydFZhbHVlICs9IC0xO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZGF5c0EgPCAgZGF5c0IpIHtcbiAgICAgICAgICAgICAgICAgICAgc29ydFZhbHVlICs9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBzb3J0VmFsdWU7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9KTsgXG4gICAgICAgICAgICByZXR1cm4gY2hpbGRMaXN0O1xuICAgICAgICB9IGVsc2UgaWYgKCByZXF1ZXN0VHlwZSA9PSBcInVuY29tbWl0dGVkXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHVuY29tbWl0dGVkID0gc3RvcmFnZUl0ZW1zQXJyYXkuZmlsdGVyKFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKHN0b3JhZ2VJdGVtc0FycmF5KXtyZXR1cm4gc3RvcmFnZUl0ZW1zQXJyYXkuY29tbWl0dGVkID09IGZhbHNlfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHJldHVybiB1bmNvbW1pdHRlZDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIFxuXG4gICAgY29uc3QgY3JlYXRlTGlzdE9iamVjdEZyb21TdG9yYWdlID0gKHN0b3JlZEl0ZW0pID0+IHtcbiAgICAgICAgY29uc3QgdGhpc0l0ZW0gPSBsaXN0SXRlbU9iamVjdC5uZXdMaXN0SXRlbShzdG9yZWRJdGVtLklELCBzdG9yZWRJdGVtLnRpdGxlLCBzdG9yZWRJdGVtLmR1ZURhdGUsIFxuICAgICAgICAgICAgc3RvcmVkSXRlbS5pbXBvcnRhbmNlLCBzdG9yZWRJdGVtLnBpbm5lZCwgc3RvcmVkSXRlbS5wYXJlbnRMaXN0LCBzdG9yZWRJdGVtLnNlbGVjdGVkLCBzdG9yZWRJdGVtLmNvbW1pdHRlZCwgc3RvcmVkSXRlbS5jb21wbGV0ZWQpO1xuICAgICAgICByZXR1cm4gdGhpc0l0ZW07XG4gICAgfVxuXG4gICAgY29uc3QgZmluZE5leHRMaXN0SUQgPSAoKSA9PiB7ICAgIFxuICAgICAgICBjb25zdCBpZEFycmF5ID0gT2JqZWN0LmtleXMobG9jYWxTdG9yYWdlKTtcbiAgICAgICAgbGV0IG5leHRJRCA9IDA7XG4gICAgICAgIGlmIChpZEFycmF5Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIG5leHRJRCA9IGlkQXJyYXkucmVkdWNlKGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoYSwgYik7XG4gICAgICAgICAgICB9LCAtSW5maW5pdHkpICsgMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV4dElEO1xuICAgIH1cblxuICAgIGNvbnN0IGRheXNVbnRpbER1ZSA9IChsaXN0SXRlbSkgPT4ge1xuICAgICAgICBjb25zdCBkdWVEYXRlID0gcGFyc2VJU08obGlzdEl0ZW0uZHVlRGF0ZSk7XG4gICAgICAgIGxldCBkYXlzID0ge307XG4gICAgICAgIGlmIChsaXN0SXRlbS5kdWVEYXRlID09IFwiXCIgKSB7XG4gICAgICAgICAgICBkYXlzLmRheXNVbnRpbER1ZSA9ICcwJztcbiAgICAgICAgICAgIGRheXMuZGF5c1VudGlsRHVlV29yZHMgPSBgU2V0IGEgZHVlIGRhdGUuLi5gO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsaXN0SXRlbS5kdWVEYXRlICE9IFwiXCIgKSB7XG4gICAgICAgICAgICBjb25zdCBkaWZmZXJlbmNlID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKGR1ZURhdGUsIG5ldyBEYXRlKCkpXG4gICAgICAgICAgICAgICAgaWYgKCBkaWZmZXJlbmNlIDwgMCApIHtcbiAgICAgICAgICAgICAgICAgICAgZGF5cy5kYXlzVW50aWxEdWUgPSAnLTEnO1xuICAgICAgICAgICAgICAgICAgICBkYXlzLmRheXNVbnRpbER1ZVdvcmRzID0gYER1ZSAke2Zvcm1hdERpc3RhbmNlVG9Ob3coZHVlRGF0ZSwgeyBhZGRTdWZmaXg6IHRydWUgfSl9YDtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZGF5cy5kYXlzVW50aWxEdWUgPSBkaWZmZXJlbmNlO1xuICAgICAgICAgICAgICAgICAgICBkYXlzLmRheXNVbnRpbER1ZVdvcmRzID0gYER1ZSAke2Zvcm1hdERpc3RhbmNlVG9Ob3coZHVlRGF0ZSwgeyBhZGRTdWZmaXg6IHRydWUgfSl9YDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRheXM7XG4gICAgICAgICBcbiAgICB9XG5cbiAgICAgICBcbiAgICBcblxuICAgIFxuICAgIHJldHVybiB7IGZpbmROZXh0TGlzdElELCBhZGRMaXN0SXRlbVRvREIsIGdldExpc3RJdGVtRGV0YWlscywgY3JlYXRlTGlzdE9iamVjdEZyb21TdG9yYWdlLCBhZGRTdGF0ZVNlbGVjdGVkLCByZW1vdmVTdGF0ZVNlbGVjdGVkLCBkYXlzVW50aWxEdWUsIGRlbGV0ZVRoaXNPYmplY3RGcm9tREIgfTtcbiAgICBcbiAgICB9IiwiXG5cbmltcG9ydCBkYXRhRXZlbnRzIGZyb20gXCIuL2RhdGFFdmVudHMuanNcIjtcbmltcG9ydCBEb21FdmVudHMgZnJvbSBcIi4vRE9NZXZlbnRzLmpzXCI7XG5cbiBcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExpc3RJdGVtT2JqKCkge1xuXG4gICAgXG5cbiAgICBjb25zdCBuZXdMaXN0SXRlbSA9IChsaXN0SXRlbUlELCBsaXN0SXRlbVRpdGxlLCBkdWVEYXRlLCBpbXBvcnRhbmNlLCBwaW5uZWQsIHBhcmVudExpc3QsIHNlbGVjdGVkLCBjb21taXR0ZWQsIGNvbXBsZXRlZCkgPT4ge1xuICAgICAgICBjb25zdCBkYXRhRXZlbnRzT2JqID0gZGF0YUV2ZW50cygpO1xuICAgICAgICBjb25zdCBET01FdmVudHNPYmogPSBEb21FdmVudHMoKTtcbiAgICAgICAgLy8gbGV0IG5ld0xpc3RJdGVtSUQgPSBsaXN0SXRlbUlEO1xuICAgICAgICBpZiAoIGlzTmFOKGxpc3RJdGVtSUQpICkge1xuICAgICAgICAgICAgbGlzdEl0ZW1JRCA9IGRhdGFFdmVudHNPYmouZmluZE5leHRMaXN0SUQoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsaXN0SXRlbSA9IHtcbiAgICAgICAgICAgIElEOiBsaXN0SXRlbUlELFxuICAgICAgICAgICAgdGl0bGU6IGxpc3RJdGVtVGl0bGUsXG4gICAgICAgICAgICBkdWVEYXRlOiBkdWVEYXRlLFxuICAgICAgICAgICAgaW1wb3J0YW5jZTogaW1wb3J0YW5jZSxcbiAgICAgICAgICAgIHBpbm5lZDogcGlubmVkLFxuICAgICAgICAgICAgcGFyZW50TGlzdDogcGFyZW50TGlzdCxcbiAgICAgICAgICAgIHNlbGVjdGVkOiBzZWxlY3RlZCxcbiAgICAgICAgICAgIGNvbW1pdHRlZCwgY29tbWl0dGVkLFxuICAgICAgICAgICAgY29tcGxldGVkLCBjb21wbGV0ZWQsXG4gICAgICAgICAgICBhZGRJdGVtdG9EQigpIHtcbiAgICAgICAgICAgICAgICBkYXRhRXZlbnRzT2JqLmFkZExpc3RJdGVtVG9EQihsaXN0SXRlbSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VsZWN0ZWRTdGF0ZUFkZCgpIHtcbiAgICAgICAgICAgICAgICBkYXRhRXZlbnRzT2JqLmFkZFN0YXRlU2VsZWN0ZWQobGlzdEl0ZW0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNlbGVjdGVkU3RhdGVSZW1vdmUoKSB7XG4gICAgICAgICAgICAgICAgZGF0YUV2ZW50c09iai5yZW1vdmVTdGF0ZVNlbGVjdGVkKGxpc3RJdGVtKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkaXNwbGF5Q2hpbGRMaXN0KCkge1xuICAgICAgICAgICAgICAgIERPTUV2ZW50c09iai5kaXNwbGF5TGlzdEl0ZW1DaGlsZHJlbihsaXN0SXRlbSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGF5c0xlZnRUb0R1ZSgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXlzID0gZGF0YUV2ZW50c09iai5kYXlzVW50aWxEdWUobGlzdEl0ZW0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBkYXlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlbGV0ZUZyb21EQigpIHtcbiAgICAgICAgICAgICAgICBkYXRhRXZlbnRzT2JqLmRlbGV0ZVRoaXNPYmplY3RGcm9tREIobGlzdEl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgcmV0dXJuIGxpc3RJdGVtO1xuICAgIH1cbiAgICBcblxucmV0dXJuIHsgbmV3TGlzdEl0ZW0gfTtcblxufSIsImltcG9ydCBMaXN0SXRlbU9iaiBmcm9tICcuL0xpc3RJdGVtT2JqLmpzJztcbmltcG9ydCBkYXRhRXZlbnRzIGZyb20gXCIuL2RhdGFFdmVudHMuanNcIjtcbmltcG9ydCB0YXNrRm9ybU1vZGFsIGZyb20gXCIuL3Rhc2tGb3JtTW9kYWwuanNcIjtcbmltcG9ydCBsaXN0Rm9ybU1vZGFsIGZyb20gXCIuL2xpc3RGb3JtTW9kYWwuanNcIjtcblxuaW1wb3J0IExpc3RJbWcgZnJvbSAnLi96X2ltZy9saXN0S2FydC5wbmcnO1xuaW1wb3J0IE1lbnVJbWcgZnJvbSAnLi96X2ltZy9tZW51LnBuZyc7XG5pbXBvcnQgRmFjZVN3ZWF0SW1nIGZyb20gJy4vel9pbWcvb3ZlcmR1ZUZhY2VTd2VhdC5wbmcnO1xuaW1wb3J0IE5ld0xhbWJJbWcgZnJvbSAnLi96X2ltZy9uZXdMYW1iLnBuZyc7XG5pbXBvcnQgQVdlZWtBd2F5SW1nIGZyb20gJy4vel9pbWcvMXdlZWtDYWxlbmRhci5wbmcnO1xuaW1wb3J0IE92ZXJBV2Vla0F3YXlJbWcgZnJvbSAnLi96X2ltZy9vdmVyMVdlZWtUaW1lTWFjaGluZS5wbmcnO1xuaW1wb3J0IE5vRHVlRGF0ZUltZyBmcm9tICcuL3pfaW1nL25vRHVlRGF0ZVRoaW5raW5nLnBuZyc7XG5pbXBvcnQgQ29tcGxldGVkSW1nIGZyb20gJy4vel9pbWcvY29tcGxldGVMYW5kZWQucG5nJztcblxuaW1wb3J0IFBlbmNpbEltZyBmcm9tICcuL3pfaW1nL3BlbmNpbC5wbmcnO1xuaW1wb3J0IFRyYXNoSW1nIGZyb20gJy4vel9pbWcvdHJhc2gucG5nJztcbmltcG9ydCBDaGVja0JveEltZyBmcm9tICcuL3pfaW1nL2NoZWNrYm94LnBuZyc7XG5pbXBvcnQgQ2hlY2tCb3hVbmNoZWNrZWRJbWcgZnJvbSAnLi96X2ltZy91bmNoZWNrZWRib3gucG5nJztcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEb21FdmVudHMoKSB7ICBcblxuICAgIGNvbnN0IGRhdGFFdmVudHNPYmogPSBkYXRhRXZlbnRzKCk7XG4gICAgY29uc3QgbGlzdEl0ZW1PYmplY3QgPSBMaXN0SXRlbU9iaigpO1xuICAgIGNvbnN0IHRhc2tGb3JtTW9kYWxPYmplY3QgPSB0YXNrRm9ybU1vZGFsKCk7XG4gICAgY29uc3QgbGlzdEZvcm1Nb2RhbE9iamVjdCA9IGxpc3RGb3JtTW9kYWwoKTtcblxuY29uc3QgaW5pdGlhbFNldFVwID0gKCkgPT4ge1xuXG4gICAgY29uc3QgY29udGVudERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY29udGVudERpdi5jbGFzc0xpc3QuYWRkKFwiY29udGVudFwiKVxuICAgIGNvbnN0IHRoZUJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keVwiKTtcbiAgICB0aGVCb2R5LmFwcGVuZENoaWxkKGNvbnRlbnREaXYpOyAgXG4gICAgXG4gICAgY29uc3QgbWFpbkNvbnRhaW5lckRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWN0aW9uXCIpO1xuICAgIG1haW5Db250YWluZXJEaXYuY2xhc3NMaXN0LmFkZChcIm1haW5Db250YWluZXJEaXZcIik7XG4gICAgY29udGVudERpdi5hcHBlbmRDaGlsZChtYWluQ29udGFpbmVyRGl2KTtcblxuICAgIGNvbnN0IGxlZnRNZW51TmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBsZWZ0TWVudU5hdi5jbGFzc0xpc3QuYWRkKFwibGVmdE1lbnVcIik7XG4gICAgbWFpbkNvbnRhaW5lckRpdi5hcHBlbmRDaGlsZChsZWZ0TWVudU5hdik7XG4gICAgXG4gICAgY29uc3QgYnVyZ2VyRmx5T3V0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgYnV0dG9uYCk7XG4gICAgYnVyZ2VyRmx5T3V0QnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJidXJnZXJGbHlPdXRCdXR0b25cIik7XG4gICAgbGVmdE1lbnVOYXYuYXBwZW5kQ2hpbGQoYnVyZ2VyRmx5T3V0QnV0dG9uKTtcblxuICAgIGNvbnN0IGJ1cmdlckZseU91dEltZ0VsZSA9IG5ldyBJbWFnZSgpO1xuICAgIGJ1cmdlckZseU91dEltZ0VsZS5jbGFzc0xpc3QuYWRkKFwiYnVyZ2VyRmx5T3V0XCIpO1xuICAgIGJ1cmdlckZseU91dEltZ0VsZS5hbHQgPSBcIlNob3cgTWVudVwiO1xuICAgIGJ1cmdlckZseU91dEltZ0VsZS5zcmMgPSBNZW51SW1nO1xuICAgIGJ1cmdlckZseU91dEJ1dHRvbi5hcHBlbmRDaGlsZChidXJnZXJGbHlPdXRJbWdFbGUpO1xuICAgIGJ1cmdlckZseU91dEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKGBjbGlja2AsIChlKSA9PiB7XG4gICAgICAgIHRvZ2dsZUxlZnRNZW51U2hvdyhgZmx5T3V0YCk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBsZWZ0TWVudVByb2plY3RJdGVtTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJuYXZcIik7XG4gICAgbGVmdE1lbnVQcm9qZWN0SXRlbUxpc3QuY2xhc3NMaXN0LmFkZChcImxlZnRNZW51UHJvamVjdEl0ZW1MaXN0XCIpO1xuICAgIGxlZnRNZW51TmF2LmFwcGVuZENoaWxkKGxlZnRNZW51UHJvamVjdEl0ZW1MaXN0KTtcbiAgIFxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJtYWluUGFnZUxpc3RDb250YWluZXJcIik7XG4gICAgbWFpbkNvbnRhaW5lckRpdi5hcHBlbmRDaGlsZChtYWluUGFnZUxpc3RDb250YWluZXIpO1xuXG4gICAgY29uc3QgbWFpblBhZ2VMaXN0Q29udGVudE5hdkJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJuYXZcIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5hdkJhci5jbGFzc0xpc3QuYWRkKFwibWFpblBhZ2VMaXN0Q29udGVudE5hdkJhclwiKTtcbiAgICBtYWluUGFnZUxpc3RDb250YWluZXIuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudE5hdkJhcik7XG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlY3Rpb25cIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudC5jbGFzc0xpc3QuYWRkKFwibWFpblBhZ2VMaXN0Q29udGVudFwiKTtcbiAgICBtYWluUGFnZUxpc3RDb250YWluZXIuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudCk7XG4gICAgXG4gICAgYWRkVGltZUJhc2VkQnJlYWtQb2ludHMoKTtcblxuXG4gICAgY29uc3QgbmF2QWRkTmV3SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgbmF2QWRkTmV3SXRlbS50ZXh0Q29udGVudCA9IFwiTmV3IExpc3QgKytcIjtcbiAgICBuYXZBZGROZXdJdGVtLmNsYXNzTGlzdC5hZGQoXCJuYXZBZGROZXdJdGVtXCIpO1xuICAgIGxlZnRNZW51UHJvamVjdEl0ZW1MaXN0Lmluc2VydEJlZm9yZShuYXZBZGROZXdJdGVtLCBsZWZ0TWVudVByb2plY3RJdGVtTGlzdC5maXJzdENoaWxkKTtcbiAgICBcbiAgICBpZiAobG9jYWxTdG9yYWdlLmxlbmd0aCA9PSAwICkge1xuICAgICAgICBhZGREZWZhdWx0VG9Eb0xpc3QoKTtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgTGVmdE1lbnVMaXN0SXRlbXMgPSBkYXRhRXZlbnRzT2JqLmdldExpc3RJdGVtRGV0YWlscyhcImlzUGFyZW50XCIsIG51bGwpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgTGVmdE1lbnVMaXN0SXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgdGhpc0l0ZW0gPSBkYXRhRXZlbnRzT2JqLmNyZWF0ZUxpc3RPYmplY3RGcm9tU3RvcmFnZShMZWZ0TWVudUxpc3RJdGVtc1tpXSk7XG4gICAgICAgIGNvbnN0IGxlZnRNZW51UHJvamVjdEl0ZW0gPSBhZGRMaXN0SXRlbVRvTWVudSh0aGlzSXRlbSwgdHJ1ZSk7XG4gICAgICAgIHNob3dMZWZ0TWVudVNlbGVjdGVkKGxlZnRNZW51UHJvamVjdEl0ZW0sIHRoaXNJdGVtLCB0cnVlKTtcbiAgICAgICAgaWYgKHRoaXNJdGVtLnNlbGVjdGVkID09IHRydWUpIHtcbiAgICAgICAgICAgIHRoaXNJdGVtLmRpc3BsYXlDaGlsZExpc3QoKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgdGFza0Zvcm1Nb2RhbE9iamVjdC5jcmVhdGVGb3JtKCk7XG4gICAgbGlzdEZvcm1Nb2RhbE9iamVjdC5jcmVhdGVGb3JtKCk7XG5cbn1cblxuZnVuY3Rpb24gYWRkRGVmYXVsdFRvRG9MaXN0KCkge1xuICAgIGNvbnN0IG5ld0xpc3RJdGVtID0gbGlzdEl0ZW1PYmplY3QubmV3TGlzdEl0ZW0oXG4gICAgICAgIE5hTiwgXG4gICAgICAgIFwiVG8gRG8gTGlzdFwiLCBcbiAgICAgICAgXCJcIiwgXG4gICAgICAgIDEsIFxuICAgICAgICBmYWxzZSwgXG4gICAgICAgICdwYXJlbnQnLCBcbiAgICAgICAgdHJ1ZSwgXG4gICAgICAgIHRydWUsXG4gICAgICAgIGZhbHNlKTtcblxuICAgIG5ld0xpc3RJdGVtLmFkZEl0ZW10b0RCKCk7XG59XG5cbmNvbnN0IHJlcG9zaXRpb25OZXdMaXN0QnV0dG9uID0gKGUpID0+IHtcbiAgICBjb25zdCBuZXdMaXN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLm5hdkFkZE5ld0l0ZW1gKTsgXG4gICAgY29uc3QgbGVmdE1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAubGVmdE1lbnVQcm9qZWN0SXRlbUxpc3RgKTtcbiAgICBsZWZ0TWVudS5pbnNlcnRCZWZvcmUobmV3TGlzdEJ1dHRvbiwgbGVmdE1lbnUuZmlyc3RDaGlsZCk7XG59XG5cbmNvbnN0IGFkZFRpbWVCYXNlZEJyZWFrUG9pbnRzID0gKCkgPT4ge1xuXG4gICAgY29uc3QgbWFpblBhZ2VMaXN0Q29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5tYWluUGFnZUxpc3RDb250ZW50YCk7XG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50TmV3SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5ld0l0ZW0uY2xhc3NMaXN0LmFkZChcImNvbnRlbnRCcmVha1BvaW50XCIpO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXdJdGVtLmNsYXNzTGlzdC5hZGQoXCJtYWluUGFnZUxpc3RDb250ZW50TmV3SXRlbVwiKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50LmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdENvbnRlbnROZXdJdGVtKTtcblxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnROZXdJdGVtSGVhZGluZ0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYGRpdmApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXdJdGVtSGVhZGluZ0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGBicmVha1BvaW50SGVhZGluZ2ApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXdJdGVtLmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdENvbnRlbnROZXdJdGVtSGVhZGluZ0NvbnRhaW5lcik7XG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50TmV3SXRlbUltZyA9IG5ldyBJbWFnZSgpO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXdJdGVtSW1nLmNsYXNzTGlzdC5hZGQoYGNvbnRlbnRCcmVha1BvaW50SW1nYCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5ld0l0ZW1JbWcuYWx0ID0gXCJOZXdcIjtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50TmV3SXRlbUltZy5zcmMgPSBOZXdMYW1iSW1nO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXdJdGVtSGVhZGluZ0NvbnRhaW5lci5hcHBlbmRDaGlsZChtYWluUGFnZUxpc3RDb250ZW50TmV3SXRlbUltZyk7XG4gICAgXG4gICAgY29uc3QgbWFpblBhZ2VMaXN0Q29udGVudE5ld0l0ZW1IZWFkaW5nVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYGgyYCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5ld0l0ZW1IZWFkaW5nVGV4dC50ZXh0Q29udGVudCA9IFwiTmV3XCI7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5ld0l0ZW1IZWFkaW5nVGV4dC5jbGFzc0xpc3QuYWRkKGBicmVha1BvaW50SGVhZGluZ1RleHRgKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50TmV3SXRlbUhlYWRpbmdDb250YWluZXIuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudE5ld0l0ZW1IZWFkaW5nVGV4dCk7XG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50T3ZlcmR1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWUuY2xhc3NMaXN0LmFkZChcImNvbnRlbnRCcmVha1BvaW50XCIpO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlLmNsYXNzTGlzdC5hZGQoXCJtYWluUGFnZUxpc3RDb250ZW50T3ZlcmR1ZVwiKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50LmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlKTtcblxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlSXRlbUhlYWRpbmdDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGBkaXZgKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50T3ZlcmR1ZUl0ZW1IZWFkaW5nQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoYGJyZWFrUG9pbnRIZWFkaW5nYCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWUuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWVJdGVtSGVhZGluZ0NvbnRhaW5lcik7XG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50T3ZlcmR1ZUltZyA9IG5ldyBJbWFnZSgpO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlSW1nLmNsYXNzTGlzdC5hZGQoYGNvbnRlbnRCcmVha1BvaW50SW1nYCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWVJbWcuYWx0ID0gXCJPdmVyZHVlXCI7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWVJbWcuc3JjID0gRmFjZVN3ZWF0SW1nO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlSXRlbUhlYWRpbmdDb250YWluZXIuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWVJbWcpO1xuICBcbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50T3ZlcmR1ZUhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGBoMmApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlSGVhZGluZy50ZXh0Q29udGVudCA9IFwiT3ZlcmR1ZVwiO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlSGVhZGluZy5jbGFzc0xpc3QuYWRkKGBicmVha1BvaW50SGVhZGluZ2ApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlSXRlbUhlYWRpbmdDb250YWluZXIuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWVIZWFkaW5nKTtcblxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnROZXh0V2VlayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5leHRXZWVrLmNsYXNzTGlzdC5hZGQoXCJjb250ZW50QnJlYWtQb2ludFwiKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50TmV4dFdlZWsuY2xhc3NMaXN0LmFkZChcIm1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vla1wiKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50LmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vlayk7XG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50TmV4dFdlZWtIZWFkaW5nQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgZGl2YCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5leHRXZWVrSGVhZGluZ0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGBicmVha1BvaW50SGVhZGluZ2ApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vlay5hcHBlbmRDaGlsZChtYWluUGFnZUxpc3RDb250ZW50TmV4dFdlZWtIZWFkaW5nQ29udGFpbmVyKTtcblxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vla0ltZyA9IG5ldyBJbWFnZSgpO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vla0ltZy5jbGFzc0xpc3QuYWRkKGBjb250ZW50QnJlYWtQb2ludEltZ2ApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vla0ltZy5hbHQgPSBcIkR1ZSB0aGlzIHdlZWtcIjtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50TmV4dFdlZWtJbWcuc3JjID0gQVdlZWtBd2F5SW1nO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vla0hlYWRpbmdDb250YWluZXIuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudE5leHRXZWVrSW1nKTtcblxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vla0hlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGBoMmApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vla0hlYWRpbmcudGV4dENvbnRlbnQgPSBcIkluIHRoZSBuZXh0IHdlZWtcIjtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50TmV4dFdlZWtIZWFkaW5nLmNsYXNzTGlzdC5hZGQoYGJyZWFrUG9pbnRIZWFkaW5nYCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5leHRXZWVrSGVhZGluZ0NvbnRhaW5lci5hcHBlbmRDaGlsZChtYWluUGFnZUxpc3RDb250ZW50TmV4dFdlZWtIZWFkaW5nKTtcblxuICAgIFxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnRBZnRlck5leHRXZWVrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50QWZ0ZXJOZXh0V2Vlay5jbGFzc0xpc3QuYWRkKFwiY29udGVudEJyZWFrUG9pbnRcIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWsuY2xhc3NMaXN0LmFkZChcIm1haW5QYWdlTGlzdENvbnRlbnRBZnRlck5leHRXZWVrXCIpO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnQuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWspO1xuXG4gICAgY29uc3QgbWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWtIZWFkaW5nQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgZGl2YCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWtIZWFkaW5nQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoYGJyZWFrUG9pbnRIZWFkaW5nYCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWsuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWtIZWFkaW5nQ29udGFpbmVyKTtcblxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnRBZnRlck5leHRXZWVrSW1nID0gbmV3IEltYWdlKCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWtJbWcuY2xhc3NMaXN0LmFkZChgY29udGVudEJyZWFrUG9pbnRJbWdgKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50QWZ0ZXJOZXh0V2Vla0ltZy5hbHQgPSBcIkR1ZSBvdmVyIGEgd2VlayBhd2F5XCI7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWtJbWcuc3JjID0gT3ZlckFXZWVrQXdheUltZztcbiAgICBtYWluUGFnZUxpc3RDb250ZW50QWZ0ZXJOZXh0V2Vla0hlYWRpbmdDb250YWluZXIuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWtJbWcpO1xuXG4gICAgY29uc3QgbWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWtIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgaDJgKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50QWZ0ZXJOZXh0V2Vla0hlYWRpbmcudGV4dENvbnRlbnQgPSBcIk1vcmUgdGhhbiBhIHdlZWsgYXdheVwiO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRBZnRlck5leHRXZWVrSGVhZGluZy5jbGFzc0xpc3QuYWRkKGBicmVha1BvaW50SGVhZGluZ2ApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRBZnRlck5leHRXZWVrSGVhZGluZ0NvbnRhaW5lci5hcHBlbmRDaGlsZChtYWluUGFnZUxpc3RDb250ZW50QWZ0ZXJOZXh0V2Vla0hlYWRpbmcpO1xuXG4gICAgY29uc3QgbWFpblBhZ2VMaXN0Q29udGVudE5vRGF0ZVNldCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5vRGF0ZVNldC5jbGFzc0xpc3QuYWRkKFwiY29udGVudEJyZWFrUG9pbnRcIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudE5vRGF0ZVNldC5jbGFzc0xpc3QuYWRkKFwibWFpblBhZ2VMaXN0Q29udGVudE5vRGF0ZVNldFwiKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50LmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdENvbnRlbnROb0RhdGVTZXQpO1xuXG4gICAgY29uc3QgbWFpblBhZ2VMaXN0Q29udGVudE5vRGF0ZVNldEhlYWRpbmdDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGBkaXZgKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Tm9EYXRlU2V0SGVhZGluZ0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGBicmVha1BvaW50SGVhZGluZ2ApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROb0RhdGVTZXQuYXBwZW5kQ2hpbGQobWFpblBhZ2VMaXN0Q29udGVudE5vRGF0ZVNldEhlYWRpbmdDb250YWluZXIpO1xuXG4gICAgY29uc3QgbWFpblBhZ2VMaXN0Q29udGVudE5vRGF0ZVNldEltZyA9IG5ldyBJbWFnZSgpO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROb0RhdGVTZXRJbWcuY2xhc3NMaXN0LmFkZChgY29udGVudEJyZWFrUG9pbnRJbWdgKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Tm9EYXRlU2V0SW1nLmFsdCA9IFwiRHVlIG92ZXIgYSB3ZWVrIGF3YXlcIjtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Tm9EYXRlU2V0SW1nLnNyYyA9IE5vRHVlRGF0ZUltZztcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Tm9EYXRlU2V0SGVhZGluZ0NvbnRhaW5lci5hcHBlbmRDaGlsZChtYWluUGFnZUxpc3RDb250ZW50Tm9EYXRlU2V0SW1nKTtcblxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnROb0RhdGVTZXRIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgaDJgKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Tm9EYXRlU2V0SGVhZGluZy50ZXh0Q29udGVudCA9IFwiTm8gZHVlIGRhdGVcIjtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Tm9EYXRlU2V0SGVhZGluZy5jbGFzc0xpc3QuYWRkKGBicmVha1BvaW50SGVhZGluZ2ApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROb0RhdGVTZXRIZWFkaW5nQ29udGFpbmVyLmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdENvbnRlbnROb0RhdGVTZXRIZWFkaW5nKTtcblxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudENvbXBsZXRlLmNsYXNzTGlzdC5hZGQoXCJjb250ZW50QnJlYWtQb2ludFwiKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Q29tcGxldGUuY2xhc3NMaXN0LmFkZChcIm1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZVwiKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50LmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZSk7XG5cblxuXG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50Q29tcGxldGVIZWFkaW5nQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgZGl2YCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudENvbXBsZXRlSGVhZGluZ0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGBicmVha1BvaW50SGVhZGluZ2ApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZS5hcHBlbmRDaGlsZChtYWluUGFnZUxpc3RDb250ZW50Q29tcGxldGVIZWFkaW5nQ29udGFpbmVyKTtcblxuICAgIGNvbnN0IG1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZUltZyA9IG5ldyBJbWFnZSgpO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZUltZy5jbGFzc0xpc3QuYWRkKGBjb250ZW50QnJlYWtQb2ludEltZ2ApO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZUltZy5hbHQgPSBcIkR1ZSBvdmVyIGEgd2VlayBhd2F5XCI7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudENvbXBsZXRlSW1nLnNyYyA9IENvbXBsZXRlZEltZztcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Q29tcGxldGVIZWFkaW5nQ29udGFpbmVyLmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZUltZyk7XG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50Q29tcGxldGVIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChgaDJgKTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Q29tcGxldGVIZWFkaW5nLnRleHRDb250ZW50ID0gXCJDb21wbGV0ZWRcIjtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50Q29tcGxldGVIZWFkaW5nLmNsYXNzTGlzdC5hZGQoYGJyZWFrUG9pbnRIZWFkaW5nYCk7XG4gICAgbWFpblBhZ2VMaXN0Q29udGVudENvbXBsZXRlSGVhZGluZ0NvbnRhaW5lci5hcHBlbmRDaGlsZChtYWluUGFnZUxpc3RDb250ZW50Q29tcGxldGVIZWFkaW5nKTtcbn1cblxuY29uc3QgZGlzcGxheUxpc3RJdGVtQ2hpbGRyZW4gPSAobGlzdEl0ZW0pID0+IHtcbiAgICBjb25zdCBsaXN0TWVudUNoaWxkcmVuID0gZGF0YUV2ZW50c09iai5nZXRMaXN0SXRlbURldGFpbHMoXCJnZXRMaXN0SXRlbUNoaWxkcmVuXCIsIGxpc3RJdGVtLklEKTtcbiAgICBjb25zdCBtYWluUGFnZUxpc3RDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluUGFnZUxpc3RDb250ZW50XCIpO1xuICAgIC8vIHJlbW92ZSB0aGUgY3VycmVudCBjb250ZW50IGJlZm9yZSBwb3B1bGF0aW5nXG4gICAgd2hpbGUgKG1haW5QYWdlTGlzdENvbnRlbnQuZmlyc3RDaGlsZCkge1xuICAgICAgICBtYWluUGFnZUxpc3RDb250ZW50LnJlbW92ZUNoaWxkKG1haW5QYWdlTGlzdENvbnRlbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIFxuICAgIGFkZFRpbWVCYXNlZEJyZWFrUG9pbnRzKCk7XG5cbiAgICBjb25zdCBwcmV2aW91c0hlYWRpbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxpc3RUaXRsZVwiKTtcbiAgICBpZiAoIHByZXZpb3VzSGVhZGluZyAhPSBudWxsICkge1xuICAgICAgICBwcmV2aW91c0hlYWRpbmcucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgY29uc3QgbWFpblBhZ2VMaXN0Q29udGVudE5hdkJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWFpblBhZ2VMaXN0Q29udGVudE5hdkJhclwiKTtcbiAgICBjb25zdCBwYXJlbnRUaXRsZSA9IGxpc3RJdGVtLnRpdGxlO1xuICAgIGNvbnN0IHBhZ2VUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcbiAgICBwYWdlVGl0bGUuY2xhc3NMaXN0LmFkZChcImxpc3RUaXRsZVwiKTtcbiAgICBwYWdlVGl0bGUudGV4dENvbnRlbnQgPSBwYXJlbnRUaXRsZTtcbiAgICBtYWluUGFnZUxpc3RDb250ZW50TmF2QmFyLmFwcGVuZENoaWxkKHBhZ2VUaXRsZSk7XG4gICAgXG5cbiAgICAvLyBpZiB0aGlzIGlzIHRoZSBzZWxlY3RlZCBtZW51LCBzaG93IHRoZSBjaGlsZHJlblxuICAgIGlmIChsaXN0SXRlbS5zZWxlY3RlZCA9PSB0cnVlICkge1xuICAgICAgICBpZiAobGlzdE1lbnVDaGlsZHJlbi5sZW5ndGggPiAwICkge1xuICAgICAgICAgICAgZm9yIChsZXQgaXRlbSBpbiBsaXN0TWVudUNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGRMaXN0SXRlbU9iamVjdCA9IGRhdGFFdmVudHNPYmouY3JlYXRlTGlzdE9iamVjdEZyb21TdG9yYWdlKGxpc3RNZW51Q2hpbGRyZW5baXRlbV0pO1xuICAgICAgICAgICAgICAgIGNyZWF0ZU1haW5QYWdlTGlzdGluZ0Zvcm0oY2hpbGRMaXN0SXRlbU9iamVjdCk7XG4gICAgICAgICAgICB9ICAgXG4gICAgICAgIC8vIGlmIHRoZXJlIGFyZSBubyBjaGlsZHJlbiB0byBkaXNwbGF5LCBjcmVhdGUgYSBuZXcgb25lIHJlYWR5IGZvciBlZGl0aW5nOlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNyZWF0ZUVtcHR5TGlzdEl0ZW0obGlzdEl0ZW0uSUQpO1xuICAgICAgICB9XG4gICAgY29uc3QgcHJldmlvdXNCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvbkFkZEFub3RoZXJNYWluUGFnZUxpc3RJdGVtXCIpO1xuICAgIGlmICggcHJldmlvdXNCdXR0b24gIT0gbnVsbCApIHtcbiAgICAgICAgcHJldmlvdXNCdXR0b24ucmVtb3ZlKCk7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGJ1dHRvbkFkZEFub3RoZXJMaXN0SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgYnV0dG9uQWRkQW5vdGhlckxpc3RJdGVtLmNsYXNzTGlzdC5hZGQoXCJidXR0b25BZGRBbm90aGVyTWFpblBhZ2VMaXN0SXRlbVwiKTtcbiAgICBidXR0b25BZGRBbm90aGVyTGlzdEl0ZW0udGV4dENvbnRlbnQgPSBcIisgQWRkIFRhc2tcIjtcbiAgICBidXR0b25BZGRBbm90aGVyTGlzdEl0ZW0uYWx0ID0gXCJBZGQgYSB0YXNrIHRvIHRoaXMgbGlzdFwiO1xuICAgIG1haW5QYWdlTGlzdENvbnRlbnROYXZCYXIuYXBwZW5kQ2hpbGQoYnV0dG9uQWRkQW5vdGhlckxpc3RJdGVtKTtcbiAgICBidXR0b25BZGRBbm90aGVyTGlzdEl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgY3JlYXRlRW1wdHlMaXN0SXRlbShsaXN0SXRlbS5JRCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmNvbnN0IGNyZWF0ZUVtcHR5TGlzdEl0ZW0gPSAocGFyZW50SUQpID0+IHtcbiAgICBjb25zdCBhZGRpdGlvbmFsTGlzdEl0ZW0gPSBsaXN0SXRlbU9iamVjdC5uZXdMaXN0SXRlbShcbiAgICBOYU4sIFxuICAgIFwiXCIsIFxuICAgIFwiXCIsIFxuICAgIDEsIFxuICAgIGZhbHNlLCBcbiAgICBwYXJlbnRJRCwgXG4gICAgZmFsc2UsXG4gICAgZmFsc2UsXG4gICAgZmFsc2UpO1xuXG4gICAgYWRkaXRpb25hbExpc3RJdGVtLmFkZEl0ZW10b0RCKCk7XG5cbiAgICBjb25zdCBuZXdFbXB0eUl0ZW1Gb3JtID0gY3JlYXRlTWFpblBhZ2VMaXN0aW5nRm9ybShhZGRpdGlvbmFsTGlzdEl0ZW0pO1xuICAgIG5ld0VtcHR5SXRlbUZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXQnKS5mb2N1cygpO1xuXG4gICAgfVxuXG5jb25zdCBzaG93QnJlYWtQb2ludENsYXNzID0gKGUpID0+IHtcbiAgICBpZiAoIWUuY2xhc3NMaXN0LmNvbnRhaW5zKGBjb250ZW50QnJlYWtQb2ludFNob3dgKSkge1xuICAgICAgICBlLmNsYXNzTGlzdC5hZGQoYGNvbnRlbnRCcmVha1BvaW50U2hvd2ApO1xuICAgIH1cbn1cblxuY29uc3QgcmVmcmVzaEJyZWFrUG9pbnRIZWFkaW5nID0gKGUpID0+IHtcbiAgICAvLyBBZnRlciBhIGNhcmQgaXMgY3JlYXRlZCwgaXQgaXMgYXBwZW5kZWQgdG8gdGhlIGJyZWFrcG9pbnQgc2VjdGlvbiBhcyB0aGUgZmlyc3QgY2hpbGQuICBcbiAgICAvLyBUaGVyZWZvcmUsICBhZnRlciBjcmVhdGlvbiwgd2UgbmVlZCB0byBtb3ZlIHRoZSBoZWFkZXIgYmFjayB0byB0aGUgdG9wIG9mIHRoZSBzZWN0aW9uLlxuICAgICAgY29uc3QgbW92ZVRoaXNIZWFkZXIgPSBlLnF1ZXJ5U2VsZWN0b3IoYC5icmVha1BvaW50SGVhZGluZ2ApO1xuICAgICAgZS5pbnNlcnRCZWZvcmUobW92ZVRoaXNIZWFkZXIsIGUuZmlyc3RDaGlsZCk7XG59XG5cbmNvbnN0IGNyZWF0ZU1haW5QYWdlTGlzdGluZ0Zvcm0gPSAobGlzdEl0ZW0pID0+IHtcblxuICAgIGNvbnN0IGR1ZURhdGUgPSBsaXN0SXRlbS5kYXlzTGVmdFRvRHVlKCk7XG4gICAgbGV0IGFwcGVuZFRvVGhpcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWFpblBhZ2VMaXN0Q29udGVudFwiKTtcbiAgICBcbiAgICBpZiAoIGxpc3RJdGVtLmNvbXBsZXRlZCA9PSB0cnVlICkge1xuICAgICAgICBhcHBlbmRUb1RoaXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAubWFpblBhZ2VMaXN0Q29udGVudENvbXBsZXRlYCk7XG4gICAgICAgIHNob3dCcmVha1BvaW50Q2xhc3MoYXBwZW5kVG9UaGlzKTtcbiAgICB9IGVsc2UgaWYgKCBsaXN0SXRlbS5jb21taXR0ZWQgPT0gZmFsc2UgKSB7XG4gICAgICAgIGFwcGVuZFRvVGhpcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5tYWluUGFnZUxpc3RDb250ZW50TmV3SXRlbWApO1xuICAgICAgICBzaG93QnJlYWtQb2ludENsYXNzKGFwcGVuZFRvVGhpcyk7XG4gICAgfSBlbHNlIGlmICggZHVlRGF0ZS5kYXlzVW50aWxEdWUgPCAwICkge1xuICAgICAgICBhcHBlbmRUb1RoaXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAubWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWVgKTtcbiAgICAgICAgc2hvd0JyZWFrUG9pbnRDbGFzcyhhcHBlbmRUb1RoaXMpO1xuICAgIH0gZWxzZSBpZiAoIGR1ZURhdGUuZGF5c1VudGlsRHVlID4gMCAmJiBkdWVEYXRlLmRheXNVbnRpbER1ZSA8PSA3ICkge1xuICAgICAgICBhcHBlbmRUb1RoaXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAubWFpblBhZ2VMaXN0Q29udGVudE5leHRXZWVrYCk7XG4gICAgICAgIHNob3dCcmVha1BvaW50Q2xhc3MoYXBwZW5kVG9UaGlzKTtcbiAgICB9IGVsc2UgaWYgKCBkdWVEYXRlLmRheXNVbnRpbER1ZSA+IDcpIHtcbiAgICAgICAgYXBwZW5kVG9UaGlzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLm1haW5QYWdlTGlzdENvbnRlbnRBZnRlck5leHRXZWVrYCk7XG4gICAgICAgIHNob3dCcmVha1BvaW50Q2xhc3MoYXBwZW5kVG9UaGlzKTtcbiAgICB9IGVsc2UgaWYgKCBkdWVEYXRlLmRheXNVbnRpbER1ZSA9PSAwKSB7XG4gICAgICAgIGFwcGVuZFRvVGhpcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5tYWluUGFnZUxpc3RDb250ZW50Tm9EYXRlU2V0YCk7XG4gICAgICAgIHNob3dCcmVha1BvaW50Q2xhc3MoYXBwZW5kVG9UaGlzKTtcbiAgICB9XG4gICBcbiAgICBjb25zdCBtYWluUGFnZUxpc3RJdGVtQ2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbWFpblBhZ2VMaXN0SXRlbUNhcmQuY2xhc3NMaXN0LmFkZChcIm1haW5QYWdlTGlzdEl0ZW1DYXJkXCIpO1xuICAgIGFwcGVuZFRvVGhpcy5pbnNlcnRCZWZvcmUobWFpblBhZ2VMaXN0SXRlbUNhcmQsIGFwcGVuZFRvVGhpcy5maXJzdENoaWxkKVxuXG4gICAgcmVmcmVzaEJyZWFrUG9pbnRIZWFkaW5nKGFwcGVuZFRvVGhpcyk7XG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RJdGVtQ29udGVudExlZnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG1haW5QYWdlTGlzdEl0ZW1Db250ZW50TGVmdC5jbGFzc0xpc3QuYWRkKFwibWFpblBhZ2VMaXN0SXRlbUNvbnRlbnRMZWZ0XCIpO1xuICAgIG1haW5QYWdlTGlzdEl0ZW1DYXJkLmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdEl0ZW1Db250ZW50TGVmdCk7XG5cbiAgICBsZXQgbGlzdEl0ZW1Gb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XG4gICAgbGlzdEl0ZW1Gb3JtLmNsYXNzTGlzdC5hZGQoXCJtYWluUGFnZUxpc3RJdGVtRm9ybVwiKTtcbiAgICBsaXN0SXRlbUZvcm0uc2V0QXR0cmlidXRlKFwiZGF0YS1wYXJlbnRMaXN0XCIsIGxpc3RJdGVtLnBhcmVudExpc3QpO1xuICAgIGxpc3RJdGVtRm9ybS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWl0ZW1pZFwiLCBsaXN0SXRlbS5JRCk7XG4gICAgbGlzdEl0ZW1Gb3JtLnNldEF0dHJpYnV0ZShcIm1ldGhvZFwiLCBcInBvc3RcIik7XG4gICAgbGlzdEl0ZW1Gb3JtLnNldEF0dHJpYnV0ZShcImFjdGlvblwiLCBcIiNcIik7XG4gICAgXG4gICAgbWFpblBhZ2VMaXN0SXRlbUNvbnRlbnRMZWZ0LmFwcGVuZENoaWxkKGxpc3RJdGVtRm9ybSk7XG4gICAgXG4gICAgXG4gICAgbGlzdEl0ZW1Gb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfSk7XG5cbiBcbiAgICBsZXQgaW5wdXRUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBpbnB1dFRpdGxlLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0XCIpO1xuICAgIGlucHV0VGl0bGUuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcIkxpc3QgSXRlbSBUaXRsZVwiKTtcbiAgICBpbnB1dFRpdGxlLmNsYXNzTGlzdC5hZGQoXCJsaXN0Rm9ybVRpdGxlVGV4dFwiKTtcbiAgICBpbnB1dFRpdGxlLmNsYXNzTGlzdC5hZGQoYGlucHV0Qm94TWluMTZgKTtcblxuICAgICBpZiAoIGxpc3RJdGVtLnRpdGxlID09IFwiXCIgKSB7XG4gICAgICAgIC8vIGlucHV0VGl0bGUucGxhY2Vob2xkZXIgPSBgJHtsaXN0SXRlbS5JRH0gLSBUYXNrIFRpdGxlIGA7XG4gICAgICAgIGlucHV0VGl0bGUucGxhY2Vob2xkZXIgPSBgVGFzayBUaXRsZSBgO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGlucHV0VGl0bGUudmFsdWUgPSAgYCR7bGlzdEl0ZW0uSUR9IC0gYCArIGxpc3RJdGVtLnRpdGxlO1xuICAgICAgICBpbnB1dFRpdGxlLnZhbHVlID0gIGxpc3RJdGVtLnRpdGxlO1xuICAgIH1cbiAgICBcbiAgICBsaXN0SXRlbUZvcm0uYXBwZW5kQ2hpbGQoaW5wdXRUaXRsZSk7XG4gICAgIFxuICAgIGxldCBmb3JtRGlzcGxheUR1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGZvcm1EaXNwbGF5RHVlRGF0ZS50ZXh0Q29udGVudCA9IGAke2R1ZURhdGUuZGF5c1VudGlsRHVlV29yZHN9YDtcbiAgICBmb3JtRGlzcGxheUR1ZURhdGUuY2xhc3NMaXN0LmFkZChcImZvcm1EaXNwbGF5RHVlRGF0ZVwiKTtcbiAgICBtYWluUGFnZUxpc3RJdGVtQ29udGVudExlZnQuYXBwZW5kQ2hpbGQoZm9ybURpc3BsYXlEdWVEYXRlKTtcbiAgICBpZiAoIGxpc3RJdGVtLnRpdGxlLmxlbmd0aCA+IDAgKSB7XG4gICAgICAgIGZvcm1EaXNwbGF5RHVlRGF0ZS5jbGFzc0xpc3QuYWRkKFwiZm9ybURpc3BsYXlEdWVEYXRlU2hvd1wiKTtcbiAgICAgICAgaWYgKCBsaXN0SXRlbS5jb21wbGV0ZWQgPT0gdHJ1ZSApIHtcbiAgICAgICAgICAgIGZvcm1EaXNwbGF5RHVlRGF0ZS5jbGFzc0xpc3QuYWRkKFwiZm9ybURpc3BsYXlEdWVEYXRlQ29tcGxldGVkXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuXG5cbiAgICBjb25zdCBtYWluUGFnZUxpc3RJdGVtQ29udGVudFJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBtYWluUGFnZUxpc3RJdGVtQ29udGVudFJpZ2h0LmNsYXNzTGlzdC5hZGQoXCJtYWluUGFnZUxpc3RJdGVtQ29udGVudFJpZ2h0XCIpO1xuICAgIG1haW5QYWdlTGlzdEl0ZW1DYXJkLmFwcGVuZENoaWxkKG1haW5QYWdlTGlzdEl0ZW1Db250ZW50UmlnaHQpO1xuXG4gICAgY29uc3QgY2hlY2tCb3hJbWdCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGBidXR0b25gKTtcbiAgICBjaGVja0JveEltZ0J1dHRvbi5jbGFzc0xpc3QuYWRkKGBjaGVja0JveEltZ0J1dHRvbmApO1xuICAgIGNoZWNrQm94SW1nQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJsaXN0Rm9ybUFjdGlvbkJ1dHRvblwiKTtcbiAgICBtYWluUGFnZUxpc3RJdGVtQ29udGVudFJpZ2h0LmFwcGVuZENoaWxkKGNoZWNrQm94SW1nQnV0dG9uKTtcblxuICAgIFxuICAgIGNvbnN0IGNoZWNrQm94SW1nRWxlID0gbmV3IEltYWdlKCk7XG4gICAgaWYgKCBsaXN0SXRlbS5jb21wbGV0ZWQgPT0gdHJ1ZSApIHtcbiAgICAgICAgY2hlY2tCb3hJbWdFbGUuc3JjID0gQ2hlY2tCb3hJbWc7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY2hlY2tCb3hJbWdFbGUuc3JjID0gQ2hlY2tCb3hVbmNoZWNrZWRJbWc7XG4gICAgfVxuICAgIGNoZWNrQm94SW1nRWxlLmNsYXNzTGlzdC5hZGQoYGNoZWNrQm94SW1nRWxlYCk7XG4gICAgY2hlY2tCb3hJbWdFbGUuYWx0ID0gXCJDaGVja2JveDogTWFyayB0aGlzIGVudHJ5IGFzIGNvbXBsZXRlXCI7XG4gICAgY2hlY2tCb3hJbWdCdXR0b24uYXBwZW5kQ2hpbGQoY2hlY2tCb3hJbWdFbGUpO1xuICAgIGNoZWNrQm94SW1nQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBjb25zdCBjb21wbGV0ZWRsaXN0SXRlbUNhcmQgPSBlLnRhcmdldC5jbG9zZXN0KGAubWFpblBhZ2VMaXN0SXRlbUNhcmRgKTtcbiAgICAgICAgY29uc3QgY29tcGxldGVkQnJlYWtQb2ludCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5tYWluUGFnZUxpc3RDb250ZW50Q29tcGxldGVgKTtcbiAgICAgICAgbGlzdEl0ZW0uY29tcGxldGVkID0gIWxpc3RJdGVtLmNvbXBsZXRlZDtcbiAgICAgICAgbGlzdEl0ZW0uYWRkSXRlbXRvREIoKTtcbiAgICAgICAgY29uc3QgcGFyZW50U3RvcmVkSXRlbSA9IGRhdGFFdmVudHNPYmouZ2V0TGlzdEl0ZW1EZXRhaWxzKFwiZ2V0MUl0ZW1cIiwgbGlzdEl0ZW0ucGFyZW50TGlzdCk7XG4gICAgICAgIGNvbnN0IHBhcmVudE9iamVjdCA9IGRhdGFFdmVudHNPYmouY3JlYXRlTGlzdE9iamVjdEZyb21TdG9yYWdlKHBhcmVudFN0b3JlZEl0ZW0pO1xuICAgICAgICBwYXJlbnRPYmplY3QuZGlzcGxheUNoaWxkTGlzdCgpO1xuICAgICAgICBcbiAgICB9KTtcblxuICAgIGNvbnN0IHBlbmNpbEltZ0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYGJ1dHRvbmApO1xuICAgIHBlbmNpbEltZ0J1dHRvbi5jbGFzc0xpc3QuYWRkKGBwZW5jaWxJbWdCdXR0b25gKTtcbiAgICBwZW5jaWxJbWdCdXR0b24uY2xhc3NMaXN0LmFkZChcImxpc3RGb3JtQWN0aW9uQnV0dG9uXCIpO1xuICAgIG1haW5QYWdlTGlzdEl0ZW1Db250ZW50UmlnaHQuYXBwZW5kQ2hpbGQocGVuY2lsSW1nQnV0dG9uKTtcblxuICAgIGNvbnN0IHBlbmNpbEltZ0VsZSA9IG5ldyBJbWFnZSgpO1xuICAgIHBlbmNpbEltZ0VsZS5zcmMgPSBQZW5jaWxJbWc7XG4gICAgcGVuY2lsSW1nRWxlLmNsYXNzTGlzdC5hZGQoYHBlbmNpbEltZ0VsZWApO1xuICAgIHBlbmNpbEltZ0VsZS5hbHQgPSBcIlBlbmNpbDogRWRpdCB0aGlzIGVudHJ5XCI7XG4gICAgcGVuY2lsSW1nQnV0dG9uLmFwcGVuZENoaWxkKHBlbmNpbEltZ0VsZSk7XG5cbiAgICBjb25zdCB0cmFzaEltZ0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYGJ1dHRvbmApO1xuICAgIHRyYXNoSW1nQnV0dG9uLmNsYXNzTGlzdC5hZGQoYHRyYXNoSW1nQnV0dG9uYCk7XG4gICAgdHJhc2hJbWdCdXR0b24uY2xhc3NMaXN0LmFkZChcImxpc3RGb3JtQWN0aW9uQnV0dG9uXCIpO1xuICAgIG1haW5QYWdlTGlzdEl0ZW1Db250ZW50UmlnaHQuYXBwZW5kQ2hpbGQodHJhc2hJbWdCdXR0b24pO1xuXG4gICAgY29uc3QgdHJhc2hJbWdFbGUgPSBuZXcgSW1hZ2UoKTtcbiAgICB0cmFzaEltZ0VsZS5zcmMgPSBUcmFzaEltZztcbiAgICB0cmFzaEltZ0VsZS5hbHQgPSBcIkJpbjogRGVsZXRlIHRoaXMgZW50cnlcIjtcbiAgICB0cmFzaEltZ0VsZS5jbGFzc0xpc3QuYWRkKGB0cmFzaEltZ0VsZWApO1xuICAgIHRyYXNoSW1nQnV0dG9uLmFwcGVuZENoaWxkKHRyYXNoSW1nRWxlKTtcblxuICAgIGNvbnN0IHVwZGF0ZUhhc1NhdmVkTWVzc2FnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgIHVwZGF0ZUhhc1NhdmVkTWVzc2FnZS5jbGFzc0xpc3QuYWRkKFwidXBkYXRlSGFzU2F2ZWRNZXNzYWdlXCIpO1xuICAgIHVwZGF0ZUhhc1NhdmVkTWVzc2FnZS50ZXh0Q29udGVudCA9IFwiU2F2ZWRcIjtcbiAgICB1cGRhdGVIYXNTYXZlZE1lc3NhZ2Uuc2V0QXR0cmlidXRlKFwiZGF0YS1zYXZlZHRhZ1wiLCBsaXN0SXRlbS5JRCk7XG4gICAgbWFpblBhZ2VMaXN0SXRlbUNvbnRlbnRSaWdodC5hcHBlbmRDaGlsZCh1cGRhdGVIYXNTYXZlZE1lc3NhZ2UpO1xuXG4gICAgaW5wdXRUaXRsZS5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgXG4gICAgICAgIC8vIHdyaXRlIGFueSBjaGFuZ2VzIG1hZGUgZGlyZWN0bHkgdG8gc3RvcmFnZVxuICAgICAgICBpZiAoIGUudGFyZ2V0LnZhbHVlLmxlbmd0aCA+IDAgKSB7XG4gICAgICAgIGxpc3RJdGVtLnRpdGxlID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgIGxpc3RJdGVtLmNvbW1pdHRlZCA9IHRydWU7XG4gICAgICAgIGxpc3RJdGVtLmFkZEl0ZW10b0RCKGxpc3RJdGVtKTtcbiAgICAgICAgLy8gbm90IHZhbGlkYXRlZCBhcyBjb21wbGV0ZSBidXQgbm8gdHdvLXdheSBjb21tcyBoZXJlLiAgSXQgc2hvdWxkIHJlYWxseSBoYXZlIGEgdGVzdCB0byBjb25maXJtIHRoaXMgaGFzIGJlZW4gZG9uZSBjb3JyZWN0bHk6XG4gICAgICAgIGNvbnN0IGl0ZW1TYXZlZE1lc3NhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBwW2RhdGEtc2F2ZWR0YWc9XCIke2xpc3RJdGVtLklEfVwiXWApO1xuICAgICAgICBpdGVtU2F2ZWRNZXNzYWdlLmNsYXNzTGlzdC5hZGQoXCJ1cGRhdGVIYXNTYXZlZE1lc3NhZ2VTaG93XCIpO1xuICAgICAgICBpdGVtU2F2ZWRNZXNzYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgaXRlbVNhdmVkTWVzc2FnZS5jbGFzc0xpc3QucmVtb3ZlKFwidXBkYXRlSGFzU2F2ZWRNZXNzYWdlU2hvd1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlbGF0ZWREdWVEYXRlVGV4dCA9IGUudGFyZ2V0LmNsb3Nlc3QoYC5tYWluUGFnZUxpc3RJdGVtQ29udGVudExlZnRgKS5xdWVyeVNlbGVjdG9yKGAuZm9ybURpc3BsYXlEdWVEYXRlYCk7XG4gICAgICAgIHJlbGF0ZWREdWVEYXRlVGV4dC5jbGFzc0xpc3QuYWRkKGBmb3JtRGlzcGxheUR1ZURhdGVTaG93YCk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIG1haW5QYWdlTGlzdEl0ZW1DYXJkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkgeyBcbiAgICAgICAgLy8gaWYgdGhlIGl0ZW0gdGhhdCB3YXMgY2xpY2tlZCBpcyBiZWluZyBkZWxldGVkLCBkb24ndCBhdHRlbXB0IHRvIG1hcmsgaXQgYXMgc2VsZWN0ZWRcbiAgICAgICAgaWYgKCBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJ0cmFzaEltZ0J1dHRvblwiKSB8fCBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJ0cmFzaEltZ0VsZVwiKSkgeyBcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBtYXJrTWFpblBhZ2VMaXN0aW5nQ2FyZEFzU2VsZWN0ZWQoZS50YXJnZXQuY2xvc2VzdCgnLm1haW5QYWdlTGlzdEl0ZW1DYXJkJykpO1xuICAgIH0pO1xuXG4gICAgdHJhc2hJbWdCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7ICAgIFxuICAgICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGUudGFyZ2V0LmNsb3Nlc3QoYC5tYWluUGFnZUxpc3RJdGVtQ2FyZGApO1xuICAgICAgICBpZiAoY29uZmlybShgRGVsZXRlOiBcXG5cXG5UaXRsZTogJHtsaXN0SXRlbS50aXRsZX1gKSA9PSB0cnVlICkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNhcmRFbGVtZW50LnJlbW92ZSgpO1xuICAgICAgICAgICAgbGlzdEl0ZW0uZGVsZXRlRnJvbURCKCk7XG4gICAgICAgIH0gICAgXG4gICAgfSk7XG5cbiAgICBtYWluUGFnZUxpc3RJdGVtQ2FyZC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLCAoZSkgPT4ge1xuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKFwibWFpblBhZ2VMaXN0SXRlbUNhcmRNb3VzZUluc2lkZVwiKTtcbiAgICB9KTtcblxuICAgIG1haW5QYWdlTGlzdEl0ZW1DYXJkLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsIChlKSA9PiB7XG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoXCJtYWluUGFnZUxpc3RJdGVtQ2FyZE1vdXNlSW5zaWRlXCIpO1xuICAgIH0pO1xuXG4gICAgZm9ybURpc3BsYXlEdWVEYXRlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAvLyBjbG9zZSB0aGUgb3RoZXIgZm9ybSBtb2RhbCBpZiBpdCBpcyBvcGVuIC0+IGlkZWFsbHksIHRoaXMgd291bGQgYmUgcmVkZXYnZCB0byB1c2UgYSBzaW5nbGUgc2hhcmVkIG1vZGFsIHRvIGF2b2lkIGhhdmluZyB0byBjbG9zZSBhbnkuICBPciBwZXJoYXBzIGEgc2hhcmVkIGNsYXNzIHRvIGNsb3NlIGFsbC5cbiAgICAgICAgbGlzdEZvcm1Nb2RhbE9iamVjdC5jbG9zZU1vZGFsRm9ybSgpO1xuICAgICAgICBcbiAgICAgICAgdGFza0Zvcm1Nb2RhbE9iamVjdC51cGRhdGVJbnB1dFZhbHVlcyhsaXN0SXRlbSk7XG4gICAgICAgIHRhc2tGb3JtTW9kYWxPYmplY3Quc2hvd0Zvcm0obGlzdEl0ZW0pO1xuICAgICAgfSk7XG4gICAgcGVuY2lsSW1nQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAvLyBjbG9zZSB0aGUgb3RoZXIgZm9ybSBtb2RhbCBpZiBpdCBpcyBvcGVuIC0+IGlkZWFsbHksIHRoaXMgd291bGQgYmUgcmVkZXYnZCB0byB1c2UgYSBzaW5nbGUgc2hhcmVkIG1vZGFsIHRvIGF2b2lkIGhhdmluZyB0byBjbG9zZSBhbnkuICBPciBwZXJoYXBzIGEgc2hhcmVkIGNsYXNzIHRvIGNsb3NlIGFsbC5cbiAgICAgICAgbGlzdEZvcm1Nb2RhbE9iamVjdC5jbG9zZU1vZGFsRm9ybSgpO1xuXG4gICAgdGFza0Zvcm1Nb2RhbE9iamVjdC51cGRhdGVJbnB1dFZhbHVlcyhsaXN0SXRlbSk7XG4gICAgdGFza0Zvcm1Nb2RhbE9iamVjdC5zaG93Rm9ybSgpO1xuICAgIH0pO1xuIFxuXG4gICAgICBpZiAoIGxpc3RJdGVtLnNlbGVjdGVkID09IHRydWUgKSB7XG4gICAgICAgIG1hcmtNYWluUGFnZUxpc3RpbmdDYXJkQXNTZWxlY3RlZChtYWluUGFnZUxpc3RJdGVtQ2FyZCk7XG4gICAgICAgIH1cbnJldHVybiBsaXN0SXRlbUZvcm07XG4gIFxufVxuXG5jb25zdCBtYXJrTWFpblBhZ2VMaXN0aW5nQ2FyZEFzU2VsZWN0ZWQgPSAobWFpblBhZ2VMaXN0SXRlbUNhcmQpID0+IHtcbi8vIHJlbW92ZSBwcmV2aW91cyBzZWxlY3Rpb25zXG4gICAgY29uc3QgYWN0aXZlQ2xhc3Nlc1RvUmVtb3ZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tYWluUGFnZUxpc3RJdGVtQ2FyZEFjdGl2ZVwiKTtcbiAgICBhY3RpdmVDbGFzc2VzVG9SZW1vdmUuZm9yRWFjaChlID0+IHtcbiAgICAgICAgLy8gcmVtb3ZlIHRoZSBET00gY2xhc3NcbiAgICAgICAgZS5jbGFzc0xpc3QucmVtb3ZlKFwibWFpblBhZ2VMaXN0SXRlbUNhcmRBY3RpdmVcIilcbiAgICAgICAgLy8gZmluZCB0aGUgc3RvcmFnZSBJRCBhbmQgcmVtb3ZlIHRoZSBTZWxlY3RlZCBzdGF0ZVxuICAgICAgICBjb25zdCBkYXRhSXRlbUlEID0gZS5xdWVyeVNlbGVjdG9yKFwiLm1haW5QYWdlTGlzdEl0ZW1Gb3JtXCIpLmRhdGFzZXQuaXRlbWlkO1xuICAgICAgICAgY29uc3Qgc3RvcmFnZUl0ZW0gPSBkYXRhRXZlbnRzT2JqLmdldExpc3RJdGVtRGV0YWlscyhcImdldDFJdGVtXCIsIGRhdGFJdGVtSUQpO1xuICAgICAgICAgY29uc3QgdGhpc0l0ZW0gPSBkYXRhRXZlbnRzT2JqLmNyZWF0ZUxpc3RPYmplY3RGcm9tU3RvcmFnZShzdG9yYWdlSXRlbSk7XG4gICAgICAgICB0aGlzSXRlbS5zZWxlY3RlZCA9IGZhbHNlO1xuICAgICAgICAgdGhpc0l0ZW0uYWRkSXRlbXRvREIoKTtcbiAgICB9KTtcbiAgLy8gc2V0IHRoZSByb3cgdG8gYWN0aXZlIHN0YXRlIHNvIGl0J3MgY2xlYXIgd2hpY2ggaXMgYmVpbmcgZWRpdGVkXG4gICAgICAgIGNvbnN0IGRhdGFJdGVtSUQgPSBtYWluUGFnZUxpc3RJdGVtQ2FyZC5xdWVyeVNlbGVjdG9yKFwiLm1haW5QYWdlTGlzdEl0ZW1Gb3JtXCIpLmRhdGFzZXQuaXRlbWlkO1xuICAgICAgICBjb25zdCBzdG9yYWdlSXRlbSA9IGRhdGFFdmVudHNPYmouZ2V0TGlzdEl0ZW1EZXRhaWxzKFwiZ2V0MUl0ZW1cIiwgZGF0YUl0ZW1JRCk7XG4gICAgICAgIGNvbnN0IHRoaXNJdGVtID0gZGF0YUV2ZW50c09iai5jcmVhdGVMaXN0T2JqZWN0RnJvbVN0b3JhZ2Uoc3RvcmFnZUl0ZW0pO1xuICAgICAgICB0aGlzSXRlbS5zZWxlY3RlZCA9IHRydWU7XG4gICAgICAgIHRoaXNJdGVtLmFkZEl0ZW10b0RCKCk7XG4gICAgICBtYWluUGFnZUxpc3RJdGVtQ2FyZC5jbGFzc0xpc3QuYWRkKFwibWFpblBhZ2VMaXN0SXRlbUNhcmRBY3RpdmVcIik7XG59XG5cbmNvbnN0IGFkZExpc3RJdGVtVG9NZW51ID0gKHRoaXNJdGVtKSA9PiB7XG4gICAgY29uc3QgbGVmdE1lbnVQcm9qZWN0SXRlbUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxlZnRNZW51UHJvamVjdEl0ZW1MaXN0XCIpO1xuICAgIFxuICAgIGNvbnN0IGxlZnRNZW51UHJvamVjdEl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBsZWZ0TWVudVByb2plY3RJdGVtLmNsYXNzTGlzdC5hZGQoXCJsZWZ0TWVudVByb2plY3RJdGVtXCIpO1xuICAgIGxlZnRNZW51UHJvamVjdEl0ZW0uc2V0QXR0cmlidXRlKCdkYXRhLWxpc3RpdGVtaWQnLCB0aGlzSXRlbS5JRCk7XG4gICAgXG4gICAgbGVmdE1lbnVQcm9qZWN0SXRlbUxpc3QuaW5zZXJ0QmVmb3JlKGxlZnRNZW51UHJvamVjdEl0ZW0sIGxlZnRNZW51UHJvamVjdEl0ZW1MaXN0LmZpcnN0Q2hpbGQpO1xuXG4gICAgY29uc3QgTGlzdEltZ0VsZSA9IG5ldyBJbWFnZSgpO1xuICAgIExpc3RJbWdFbGUuY2xhc3NMaXN0LmFkZChcIkxpc3RJbWdFbGVcIik7XG4gICAgTGlzdEltZ0VsZS5hbHQgPSBcImxpc3QgaWNvblwiO1xuICAgIExpc3RJbWdFbGUuc3JjID0gTGlzdEltZztcbiAgICBMaXN0SW1nRWxlLnNldEF0dHJpYnV0ZSgnZGF0YS1saXN0aXRlbWlkJywgdGhpc0l0ZW0uSUQpO1xuICAgIGxlZnRNZW51UHJvamVjdEl0ZW0uYXBwZW5kQ2hpbGQoTGlzdEltZ0VsZSk7XG4gICAgXG4gICAgY29uc3QgbGVmdE1lbnVJdGVtVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICBsZWZ0TWVudUl0ZW1UaXRsZS5jbGFzc0xpc3QuYWRkKFwibGVmdE1lbnVQcm9qZWN0SXRlbVRleHRcIik7XG4gICAgbGVmdE1lbnVJdGVtVGl0bGUudGV4dENvbnRlbnQgPSB0aGlzSXRlbS50aXRsZTtcbiAgICBsZWZ0TWVudUl0ZW1UaXRsZS5zZXRBdHRyaWJ1dGUoJ2RhdGEtbGlzdGl0ZW1pZCcsIHRoaXNJdGVtLklEKTtcbiAgICBsZWZ0TWVudVByb2plY3RJdGVtLmFwcGVuZENoaWxkKGxlZnRNZW51SXRlbVRpdGxlKTtcblxuICAgIGxlZnRNZW51UHJvamVjdEl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGxpc3RGb3JtTW9kYWxPYmplY3QuY2xvc2VNb2RhbEZvcm0oKTtcbiAgICAgICAgdGFza0Zvcm1Nb2RhbE9iamVjdC5jbG9zZU1vZGFsRm9ybShgZXh0ZXJuYWxgKVxuICAgICAgICBkZWxldGVVbmNvbW1pdHRlZEVudHJpZXMoKTtcbiAgICAgICAgbGVmdE1lbnVFdmVudExpc3RlbmVycyhlLnRhcmdldCk7XG4gICAgfSk7XG4gICAgcmVwb3NpdGlvbk5ld0xpc3RCdXR0b24oKTtcbiAgICByZXR1cm4gbGVmdE1lbnVQcm9qZWN0SXRlbTtcblxufVxuXG5jb25zdCBzaG93TGVmdE1lbnVTZWxlY3RlZCA9IChsZWZ0TWVudVByb2plY3RJdGVtLCB0aGlzSXRlbSwgaW5pdGlhbExvYWQpID0+IHtcbiAgICBjb25zdCByZW1vdmVQcmV2aW91c1NlbGVjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5sZWZ0TWVudUl0ZW1TaG93QXNTZWxlY3RlZCcpO1xuICAgICAgICBcbiAgICAgICAgaWYgKCByZW1vdmVQcmV2aW91c1NlbGVjdGlvbiAhPSBudWxsICYmIGluaXRpYWxMb2FkID09IGZhbHNlKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlbW92ZVByZXZpb3VzU2VsZWN0aW9uLmxlbmd0aDsgaSsrICkge1xuICAgICAgICAgICAgY29uc3Qgc3RvcmFnZUl0ZW0gPSBkYXRhRXZlbnRzT2JqLmdldExpc3RJdGVtRGV0YWlscyhcImdldDFJdGVtXCIsIHJlbW92ZVByZXZpb3VzU2VsZWN0aW9uW2ldLmRhdGFzZXQubGlzdGl0ZW1pZCk7XG4gICAgICAgICAgICBjb25zdCByZW1vdmVTZWxlY3RlZEZyb21UaGlzID0gZGF0YUV2ZW50c09iai5jcmVhdGVMaXN0T2JqZWN0RnJvbVN0b3JhZ2Uoc3RvcmFnZUl0ZW0pO1xuICAgICAgICAgICAgcmVtb3ZlU2VsZWN0ZWRGcm9tVGhpcy5zZWxlY3RlZFN0YXRlUmVtb3ZlKCk7XG4gICAgICAgICAgICByZW1vdmVQcmV2aW91c1NlbGVjdGlvbltpXS5jbGFzc0xpc3QucmVtb3ZlKFwibGVmdE1lbnVJdGVtU2hvd0FzU2VsZWN0ZWRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBjb25zdCBwYXJlbnRCdXR0b24gPSBsZWZ0TWVudVByb2plY3RJdGVtLmNsb3Nlc3QoJ2J1dHRvbicpO1xuICAgIGlmICggdGhpc0l0ZW0uc2VsZWN0ZWQgPT0gdHJ1ZSApIHtcbiAgICAgICAgcGFyZW50QnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJsZWZ0TWVudUl0ZW1TaG93QXNTZWxlY3RlZFwiKTtcbiAgICB9XG4gICAgXG59XG5cbmNvbnN0IGxlZnRNZW51RXZlbnRMaXN0ZW5lcnMgPSAoY2xpY2tlZEVsZW1lbnQpID0+IHtcbiAgICBcbiAgICBjb25zdCBzdG9yYWdlSXRlbSA9IGRhdGFFdmVudHNPYmouZ2V0TGlzdEl0ZW1EZXRhaWxzKFwiZ2V0MUl0ZW1cIiwgY2xpY2tlZEVsZW1lbnQuZGF0YXNldC5saXN0aXRlbWlkKTtcblxuICAgIGNvbnN0IHRoaXNJdGVtID0gZGF0YUV2ZW50c09iai5jcmVhdGVMaXN0T2JqZWN0RnJvbVN0b3JhZ2Uoc3RvcmFnZUl0ZW0pO1xuICAgICAgICBpZiAodGhpc0l0ZW0uc2VsZWN0ZWQgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpc0l0ZW0uc2VsZWN0ZWRTdGF0ZUFkZCgpO1xuICAgICAgICAgICAgc2hvd0xlZnRNZW51U2VsZWN0ZWQoY2xpY2tlZEVsZW1lbnQsIHRoaXNJdGVtLCBmYWxzZSk7XG4gICAgICAgICAgICB0aGlzSXRlbS5kaXNwbGF5Q2hpbGRMaXN0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdG9nZ2xlTGVmdE1lbnVTaG93KCk7XG5cbn1cblxuY29uc3QgZGVsZXRlVW5jb21taXR0ZWRFbnRyaWVzID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkZWxldGVVbmNvbW1pdHRlZEVudHJpZXMgPSBkYXRhRXZlbnRzT2JqLmdldExpc3RJdGVtRGV0YWlscyhcInVuY29tbWl0dGVkXCIpO1xuICAgIFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGVsZXRlVW5jb21taXR0ZWRFbnRyaWVzLmxlbmd0aDsgaSsrICkge1xuICAgICAgICBjb25zdCBVbmNvbW1pdHRlZEVudHJ5ID0gZGF0YUV2ZW50c09iai5jcmVhdGVMaXN0T2JqZWN0RnJvbVN0b3JhZ2UoZGVsZXRlVW5jb21taXR0ZWRFbnRyaWVzW2ldKTtcbiAgICAgICAgVW5jb21taXR0ZWRFbnRyeS5kZWxldGVGcm9tREIoKTtcbiAgICB9XG59XG5cbmNvbnN0IHRvZ2dsZUxlZnRNZW51U2hvdyA9IChhY3Rpb24pID0+IHtcbiAgICBjb25zdCBidXJnZXJGbHlPdXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuYnVyZ2VyRmx5T3V0QnV0dG9uYCk7XG4gICAgY29uc3QgbmF2QWRkTmV3SXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5uYXZBZGROZXdJdGVtYCk7XG4gICAgY29uc3QgbGVmdE1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxlZnRNZW51XCIpO1xuICAgIGNvbnN0IGxlZnRNZW51UHJvamVjdEl0ZW1MaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmxlZnRNZW51UHJvamVjdEl0ZW1MaXN0YCk7XG4gICAgaWYgKGFjdGlvbiA9PSBgZmx5T3V0YCkge1xuICAgICAgICBidXJnZXJGbHlPdXRCdXR0b24uY2xhc3NMaXN0LmFkZChgYnVyZ2VyRmx5T3V0QnV0dG9uSGlkZWApO1xuICAgICAgICBuYXZBZGROZXdJdGVtLmNsYXNzTGlzdC5hZGQoYG5hdkFkZE5ld0l0ZW1MZWZ0TWVudU91dGApO1xuICAgICAgICBsZWZ0TWVudS5jbGFzc0xpc3QuYWRkKFwibGVmdE1lbnVGbHlPdXRcIik7XG4gICAgICAgIGxlZnRNZW51UHJvamVjdEl0ZW1MaXN0LmNsYXNzTGlzdC5hZGQoYGxlZnRNZW51UHJvamVjdEl0ZW1MaXN0U2hvd2ApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1cmdlckZseU91dEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKGBidXJnZXJGbHlPdXRCdXR0b25IaWRlYCk7XG4gICAgICAgIG5hdkFkZE5ld0l0ZW0uY2xhc3NMaXN0LnJlbW92ZShgbmF2QWRkTmV3SXRlbUxlZnRNZW51T3V0YCk7XG4gICAgICAgIGxlZnRNZW51LmNsYXNzTGlzdC5yZW1vdmUoXCJsZWZ0TWVudUZseU91dFwiKTtcbiAgICAgICAgbGVmdE1lbnVQcm9qZWN0SXRlbUxpc3QuY2xhc3NMaXN0LnJlbW92ZShgbGVmdE1lbnVQcm9qZWN0SXRlbUxpc3RTaG93YCk7XG4gICAgfVxuICAgIFxuICAgIFxuICAgXG4gICAgXG59XG5cbmNvbnN0IGluaXRpYWxFdmVudExpc3RlbmVycyA9ICgpID0+IHtcblxuICAgIGNvbnN0IGxlZnRNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sZWZ0TWVudVwiKTtcbiAgICBsZWZ0TWVudS5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLCAoZSkgPT4geyBcbiAgICAgICAgdG9nZ2xlTGVmdE1lbnVTaG93KGBmbHlPdXRgKTtcbiAgICB9KTsgXG4gICAgbGVmdE1lbnUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIiwgKGUpID0+IHsgXG4gICAgICAgIHRvZ2dsZUxlZnRNZW51U2hvdyhgZmx5SW5gKTtcbiAgICB9KTsgXG4gICAgLy8gbGVmdCBtZW51IGNsaWNrIGFjdGlvbnNcbiAgICBjb25zdCBhbGxMZWZ0TWVudUl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmxlZnRNZW51UHJvamVjdEl0ZW0nKTtcbiAgICBhbGxMZWZ0TWVudUl0ZW1zLmZvckVhY2goZSA9PiBlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgIFxuICAgICAgICBcbiAgICAgICAgbGVmdE1lbnVFdmVudExpc3RlbmVycyhlLnRhcmdldCk7XG4gIFxuICAgICAgfSkpO1xuXG4gICAgLy8gbmV3IGxpc3QgYnV0dG9uIGFjdGlvbnNcbiAgICBjb25zdCBuYXZBZGROZXdJdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZBZGROZXdJdGVtXCIpO1xuICAgIG5hdkFkZE5ld0l0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgLy8gcmVtb3ZlIGFsbCBlbXB0eSBEQiBlbnRyaWVzIHNvIHRoZSBuZXh0IGF2YWlsYWJsZUlEIGlzIGNvcnJlY3RcbiAgICAgICAgXG4gICAgICAgIGRlbGV0ZVVuY29tbWl0dGVkRW50cmllcygpO1xuICAgICAgICAvLyBjbG9zZSBvdGhlciBmb3JtIG1vZGFsLiAgU2hvdWxkIHJlZGV2IG1vZGFscyB0byBhdm9pZCBoYXZpbmcgdG8gZG8gdGhpcy5cbiAgICAgICAgdGFza0Zvcm1Nb2RhbE9iamVjdC5jbG9zZU1vZGFsRm9ybShgZXh0ZXJuYWxgKTtcbiAgICAgXG4gICAgICAgIGNvbnN0IG5ld0xpc3RJdGVtID0gbGlzdEl0ZW1PYmplY3QubmV3TGlzdEl0ZW0oXG4gICAgICAgICAgICBOYU4sIFxuICAgICAgICAgICAgXCJcIiwgXG4gICAgICAgICAgICBcIlwiLCBcbiAgICAgICAgICAgIDEsIFxuICAgICAgICAgICAgZmFsc2UsIFxuICAgICAgICAgICAgJ3BhcmVudCcsIFxuICAgICAgICAgICAgdHJ1ZSwgXG4gICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgIGZhbHNlKTtcblxuICAgICAgICBuZXdMaXN0SXRlbS5hZGRJdGVtdG9EQigpO1xuICAgICAgICBsaXN0Rm9ybU1vZGFsT2JqZWN0LnVwZGF0ZUlucHV0VmFsdWVzKG5ld0xpc3RJdGVtKTtcbiAgICAgICAgdG9nZ2xlTGVmdE1lbnVTaG93KCk7XG4gICAgICAgIGxpc3RGb3JtTW9kYWxPYmplY3Quc2hvd0Zvcm0obmV3TGlzdEl0ZW0pO1xuICAgIFxuICAgIH0pO1xufVxuXG5cbiAgICByZXR1cm4geyBpbml0aWFsU2V0VXAsIGluaXRpYWxFdmVudExpc3RlbmVycywgYWRkTGlzdEl0ZW1Ub01lbnUsIGRpc3BsYXlMaXN0SXRlbUNoaWxkcmVuLCBzaG93TGVmdE1lbnVTZWxlY3RlZCwgZGVsZXRlVW5jb21taXR0ZWRFbnRyaWVzfTtcbn1cbiIsImltcG9ydCBkYXRhRXZlbnRzIGZyb20gXCIuL2RhdGFFdmVudHMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdGFza2Zvcm1Nb2RhbCgpIHtcbiAgIFxuICAgIGNvbnN0IGRhdGFFdmVudHNPYmogPSBkYXRhRXZlbnRzKCk7XG5cbiAgICBjb25zdCBjcmVhdGVGb3JtID0gKCkgPT4geyAgICBcbiAgICAgIFxuXG4gICAgICAgIC8vIGNsZWFyIG91dCBhbnkgcHJldmlvdXMgbW9kYWxzIHRoYXQgaGF2ZSBiZWVuIGNyZWF0ZWRcbiAgICAgICAgY29uc3QgbW9kYWxzVG9EZWxldGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsRm9ybUNvbnRhaW5lclwiKTtcbiAgICAgICAgbW9kYWxzVG9EZWxldGUuZm9yRWFjaChlID0+IGUucmVtb3ZlKCkpO1xuICAgICAgXG4gICAgICAgIC8vY3JlYXRlIHRoZSBtb2RhbCBmb3JtXG4gICAgICAgIGNvbnN0IG1haW5Db250YWluZXJEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1haW5Db250YWluZXJEaXZcIik7XG5cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGZvcm1Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBmb3JtQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJtb2RhbEZvcm1Db250YWluZXJcIik7XG4gICAgICAgIFxuICAgICAgICBtYWluQ29udGFpbmVyRGl2LmFwcGVuZENoaWxkKGZvcm1Db250YWluZXIpO1xuXG4gICAgICAgIGNvbnN0IGZvcm1Nb2RhbEZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcbiAgICAgICAgZm9ybU1vZGFsRm9ybS5jbGFzc0xpc3QuYWRkKFwiZm9ybU1vZGFsTGlzdEl0ZW1FZGl0XCIpO1xuICAgICAgICBmb3JtTW9kYWxGb3JtLnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJtb2RhbEZvcm1cIik7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uc2V0QXR0cmlidXRlKFwiZGF0YS1wYXJlbnRMaXN0XCIsIE5hTik7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uc2V0QXR0cmlidXRlKFwiZGF0YS1pdGVtSURcIiwgTmFOKTtcbiAgICAgICAgZm9ybU1vZGFsRm9ybS5zZXRBdHRyaWJ1dGUoXCJtZXRob2RcIiwgXCJwb3N0XCIpO1xuICAgICAgICBmb3JtTW9kYWxGb3JtLnNldEF0dHJpYnV0ZShcImFjdGlvblwiLCBcIiNcIik7XG4gICAgICAgIGZvcm1Db250YWluZXIuYXBwZW5kQ2hpbGQoZm9ybU1vZGFsRm9ybSk7XG5cbiAgICAgICAgY29uc3QgaW5wdXRUaXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgICAgICBpbnB1dFRpdGxlTGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwidGl0bGVcIik7XG4gICAgICAgIGlucHV0VGl0bGVMYWJlbC5jbGFzc0xpc3QuYWRkKGBmb3JtTW9kYWxMYWJlbGApO1xuICAgICAgICBpbnB1dFRpdGxlTGFiZWwudGV4dENvbnRlbnQgPSBgTm90ZSAocmVxdWlyZWQpYDtcbiAgICAgICAgZm9ybU1vZGFsRm9ybS5hcHBlbmRDaGlsZChpbnB1dFRpdGxlTGFiZWwpO1xuXG4gICAgICAgIGNvbnN0IGlucHV0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgIGlucHV0VGl0bGUuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInRleHRcIik7XG4gICAgICAgIGlucHV0VGl0bGUucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICBpbnB1dFRpdGxlLmNsYXNzTGlzdC5hZGQoXCJ0YXNrRm9ybVRpdGxlXCIpO1xuICAgICAgICBpbnB1dFRpdGxlLmNsYXNzTGlzdC5hZGQoXCJmb3JtTW9kYWxJbnB1dFwiKTtcbiAgICAgICAgaW5wdXRUaXRsZS5jbGFzc0xpc3QuYWRkKGBpbnB1dEJveE1pbjE2YCk7XG4gICAgICAgIGlucHV0VGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJ0YXNrRm9ybVRpdGxlXCIpO1xuICAgICAgICBpbnB1dFRpdGxlLnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJ0aXRsZVwiKTtcbiAgICAgICAgaW5wdXRUaXRsZS52YWx1ZSA9IFwibi9hXCI7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uYXBwZW5kQ2hpbGQoaW5wdXRUaXRsZSk7XG4gICAgICBcbiAgICAgICAgY29uc3QgaW5wdXREdWVEYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgICAgIGlucHV0RHVlRGF0ZUxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcImR1ZURhdGVcIik7XG4gICAgICAgIGlucHV0RHVlRGF0ZUxhYmVsLmNsYXNzTGlzdC5hZGQoYGZvcm1Nb2RhbExhYmVsYCk7XG4gICAgICAgIGlucHV0RHVlRGF0ZUxhYmVsLnRleHRDb250ZW50ID0gXCJEdWUgRGF0ZSAob3B0aW9uYWwpXCI7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uYXBwZW5kQ2hpbGQoaW5wdXREdWVEYXRlTGFiZWwpO1xuICAgICAgIFxuXG4gICAgICAgIGxldCBpbnB1dER1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgIGlucHV0RHVlRGF0ZS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiZGF0ZVwiKTsgICAgICAgIFxuICAgICAgICBpbnB1dER1ZURhdGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJsaXN0Rm9ybUR1ZURhdGVcIik7XG4gICAgICAgIGlucHV0RHVlRGF0ZS5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiZHVlRGF0ZVwiKTtcbiAgICAgICAgaW5wdXREdWVEYXRlLmNsYXNzTGlzdC5hZGQoXCJsaXN0Rm9ybUR1ZURhdGVcIik7XG4gICAgICAgIGlucHV0RHVlRGF0ZS5jbGFzc0xpc3QuYWRkKFwiZm9ybU1vZGFsSW5wdXRcIik7XG4gICAgICAgIGlucHV0RHVlRGF0ZS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIlwiKTtcbiAgICAgICAgZm9ybU1vZGFsRm9ybS5hcHBlbmRDaGlsZChpbnB1dER1ZURhdGUpO1xuXG4gICAgICAgIGNvbnN0IGZvcm1Nb2RhbERvbmVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICBmb3JtTW9kYWxEb25lQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJmb3JtTW9kYWxEb25lQnV0dG9uXCIpO1xuICAgICAgICBmb3JtTW9kYWxEb25lQnV0dG9uLnRleHRDb250ZW50ID0gXCJEb25lXCI7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uYXBwZW5kQ2hpbGQoZm9ybU1vZGFsRG9uZUJ1dHRvbik7XG5cbiAgICAgICAgY29uc3QgdXBkYXRlSGFzU2F2ZWRNZXNzYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgdXBkYXRlSGFzU2F2ZWRNZXNzYWdlLmNsYXNzTGlzdC5hZGQoXCJ1cGRhdGVIYXNTYXZlZE1lc3NhZ2VGb3JtTW9kYWxcIik7XG4gICAgICAgIHVwZGF0ZUhhc1NhdmVkTWVzc2FnZS50ZXh0Q29udGVudCA9IFwiU2F2ZWRcIjtcbiAgICAgICAgZm9ybU1vZGFsRm9ybS5hcHBlbmRDaGlsZCh1cGRhdGVIYXNTYXZlZE1lc3NhZ2UpO1xuXG4gICBcblxuICAgICAgICBmb3JtTW9kYWxGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIGNvbnN0IGxpc3RJdGVtSUQgPSBlLnRhcmdldC5jbG9zZXN0KGBmb3JtYCkuZGF0YXNldC5pdGVtaWQ7XG4gICAgICAgICAgY29uc3Qgc3RvcmFnZUl0ZW0gPSBkYXRhRXZlbnRzT2JqLmdldExpc3RJdGVtRGV0YWlscyhcImdldDFJdGVtXCIsIGxpc3RJdGVtSUQpO1xuICAgICAgICAgIGNvbnN0IGxpc3RJdGVtID0gZGF0YUV2ZW50c09iai5jcmVhdGVMaXN0T2JqZWN0RnJvbVN0b3JhZ2Uoc3RvcmFnZUl0ZW0pO1xuXG4gICAgICAgICAgbGlzdEl0ZW0udGl0bGUgPSBpbnB1dFRpdGxlLnZhbHVlO1xuICAgICAgICAgIGxpc3RJdGVtLmR1ZURhdGUgPSBpbnB1dER1ZURhdGUudmFsdWU7XG4gICAgICAgICAgbGlzdEl0ZW0uY29tbWl0dGVkID0gdHJ1ZTtcbiAgICAgICAgICBsaXN0SXRlbS5hZGRJdGVtdG9EQihsaXN0SXRlbSk7XG4gICAgICAgICAgLy8gbm90IHZhbGlkYXRlZCBhcyBjb21wbGV0ZSBidXQgbm8gdHdvLXdheSBjb21tcyBoZXJlOlxuICAgICAgICAgIHVwZGF0ZUhhc1NhdmVkTWVzc2FnZS5jbGFzc0xpc3QuYWRkKFwidXBkYXRlSGFzU2F2ZWRNZXNzYWdlRm9ybU1vZGFsU2hvd1wiKTtcbiAgICAgICAgICBmb3JtTW9kYWxGb3JtLmNsYXNzTGlzdC5hZGQoXCJmb3JtTW9kYWxMaXN0SXRlbUVkaXRTYXZlZFwiKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdXBkYXRlSGFzU2F2ZWRNZXNzYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBmb3JtTW9kYWxTYXZlZFJlbW92ZSk7XG4gICAgICAgICAgZnVuY3Rpb24gZm9ybU1vZGFsU2F2ZWRSZW1vdmUgKGUpIHtcbiAgICAgICAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZShcInVwZGF0ZUhhc1NhdmVkTWVzc2FnZUZvcm1Nb2RhbFNob3dcIik7XG4gICAgICAgICAgICAgIGZvcm1Nb2RhbEZvcm0uY2xhc3NMaXN0LnJlbW92ZShcImZvcm1Nb2RhbExpc3RJdGVtRWRpdFNhdmVkXCIpO1xuICAgICAgICAgICAgICAvLyB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGZvcm1Nb2RhbFNhdmVkUmVtb3ZlKVxuICAgICAgICB9XG4gICAgICAgXG5cbiAgICAgICAgZm9ybUNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4geyBcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7IFxuICAgICAgICAgIH0pO1xuXG5cbiAgICAgICAgZm9ybUNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICAgICAgICBjb25zdCBjbGlja091dHNpZGVNb2RhbCA9ICFlLnRhcmdldC5jbG9zZXN0KCcuZm9ybU1vZGFsTGlzdEl0ZW1FZGl0Jyk7XG4gICAgICAgICAgaWYgKCBjbGlja091dHNpZGVNb2RhbCA9PSB0cnVlICkge1xuICAgICAgICAgICAgY2xvc2VNb2RhbEZvcm0oKVxuICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZvcm1Nb2RhbEVzY2FwZSk7XG4gICAgICAgIGZ1bmN0aW9uIGZvcm1Nb2RhbEVzY2FwZShlKSB7XG4gICAgICAgICAgaWYgKCBlLmtleSA9PSBcIkVzY2FwZVwiICkge1xuICAgICAgICAgICAgY2xvc2VNb2RhbEZvcm0oKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3JtTW9kYWxEb25lQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgICAgICAgY2xvc2VNb2RhbEZvcm0oKVxuICAgICAgICB9KTtcblxuICAgIH1cblxuXG4gICAgY29uc3QgY2xvc2VNb2RhbEZvcm0gPSAoc291cmNlKSA9PiB7XG4gICAgICAvLyB1cGRhdGUgdGhlIG1haW4gcGFnZSBsaXN0aW5nIHZpZXcgdG8gcmVmbGVjdCBhbnkgY2hhbmdlcyB1cG9uIGNsb3N1cmVcbiAgICAgIGNvbnN0IGZvcm1Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAubW9kYWxGb3JtQ29udGFpbmVyYCk7XG4gICAgICBcbiAgICAgIGlmICggc291cmNlICE9IGBleHRlcm5hbGAgKSB7XG4gICAgICAgIHVwZGF0ZVBhZ2VVcG9uQ2xvc3VyZSgpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBmb3JtQ29udGFpbmVyLmNsYXNzTGlzdC5yZW1vdmUoXCJmb3JtQ29udGFpbmVyVmlzaWJsZVwiKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVQYWdlVXBvbkNsb3N1cmUgPSAoKSA9PiB7XG4gICAgICBjb25zdCBsaXN0SXRlbUlEID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmZvcm1Nb2RhbExpc3RJdGVtRWRpdGApLmRhdGFzZXQuaXRlbWlkO1xuICAgICAgY29uc3Qgc3RvcmVkTGlzdEl0ZW0gPSBkYXRhRXZlbnRzT2JqLmdldExpc3RJdGVtRGV0YWlscyhcImdldDFJdGVtXCIsIGxpc3RJdGVtSUQpO1xuICAgICAgY29uc3QgbGlzdEl0ZW0gPSBkYXRhRXZlbnRzT2JqLmNyZWF0ZUxpc3RPYmplY3RGcm9tU3RvcmFnZShzdG9yZWRMaXN0SXRlbSk7XG4gICAgICBjb25zdCBsaXN0SXRlbVBhcmVudE9iamVjdCA9IGRhdGFFdmVudHNPYmouZ2V0TGlzdEl0ZW1EZXRhaWxzKFwiZ2V0MUl0ZW1cIiwgbGlzdEl0ZW0ucGFyZW50TGlzdCk7XG4gICAgICBjb25zdCBwYXJlbnRPYmplY3QgPSBkYXRhRXZlbnRzT2JqLmNyZWF0ZUxpc3RPYmplY3RGcm9tU3RvcmFnZShsaXN0SXRlbVBhcmVudE9iamVjdCk7XG4gICAgICBwYXJlbnRPYmplY3QuZGlzcGxheUNoaWxkTGlzdCgpO1xuICAgIH1cblxuICAgIGNvbnN0IHVwZGF0ZUlucHV0VmFsdWVzID0gKGxpc3RJdGVtKSA9PiB7XG4gICAgICBjb25zdCBmb3JtTW9kYWxGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtTW9kYWxMaXN0SXRlbUVkaXRcIik7XG4gICAgICBjb25zdCBpbnB1dFRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YXNrRm9ybVRpdGxlXCIpO1xuICAgICAgY29uc3QgaW5wdXREdWVEYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsaXN0Rm9ybUR1ZURhdGVcIik7XG4gICAgICBpbnB1dFRpdGxlLnZhbHVlID0gbGlzdEl0ZW0udGl0bGU7XG4gICAgICBpbnB1dER1ZURhdGUudmFsdWUgPSBsaXN0SXRlbS5kdWVEYXRlO1xuICAgICAgZm9ybU1vZGFsRm9ybS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBhcmVudExpc3RcIiwgbGlzdEl0ZW0ucGFyZW50TGlzdCk7XG4gICAgICBmb3JtTW9kYWxGb3JtLnNldEF0dHJpYnV0ZShcImRhdGEtaXRlbUlEXCIsIGxpc3RJdGVtLklEKTtcbiAgICAgIFxuICAgIH1cblxuICAgIGNvbnN0IHNob3dGb3JtID0gKCkgPT4ge1xuICAgICAgY29uc3QgaW5wdXRUaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFza0Zvcm1UaXRsZVwiKTtcbiAgICAgIGlucHV0VGl0bGUuZm9jdXMoKTtcbiAgICAgIGNvbnN0IGZvcm1Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAubW9kYWxGb3JtQ29udGFpbmVyYCk7IFxuICAgICAgZm9ybUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiZm9ybUNvbnRhaW5lclZpc2libGVcIik7XG4gICAgXG4gICAgfVxuICAgIFxuXG4gICAgcmV0dXJuIHsgY3JlYXRlRm9ybSwgdXBkYXRlSW5wdXRWYWx1ZXMsIHNob3dGb3JtLCBjbG9zZU1vZGFsRm9ybSB9XG59ICAiLCJpbXBvcnQgZGF0YUV2ZW50cyBmcm9tIFwiLi9kYXRhRXZlbnRzLmpzXCI7XG5pbXBvcnQgRE9NZXZlbnRzIGZyb20gXCIuL0RPTWV2ZW50cy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsaXN0Zm9ybU1vZGFsKCkge1xuICAgXG4gIGNvbnN0IGRhdGFFdmVudHNPYmogPSBkYXRhRXZlbnRzKCk7XG5cblxuICAgIGNvbnN0IGNyZWF0ZUZvcm0gPSAoKSA9PiB7ICAgIFxuICAgICAgXG5cbiAgICAgICAgLy8gY2xlYXIgb3V0IGFueSBwcmV2aW91cyBtb2RhbHMgdGhhdCBoYXZlIGJlZW4gY3JlYXRlZFxuICAgICAgICBjb25zdCBtb2RhbHNUb0RlbGV0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubGlzdE1vZGFsRm9ybUNvbnRhaW5lclwiKTtcbiAgICAgICAgbW9kYWxzVG9EZWxldGUuZm9yRWFjaChlID0+IGUucmVtb3ZlKCkpO1xuICAgICAgXG4gICAgICAgIC8vY3JlYXRlIHRoZSBtb2RhbCBmb3JtXG4gICAgICAgIGNvbnN0IG1haW5Db250YWluZXJEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1haW5Db250YWluZXJEaXZcIik7XG5cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGZvcm1Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBmb3JtQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJsaXN0TW9kYWxGb3JtQ29udGFpbmVyXCIpO1xuICAgICAgICBcbiAgICAgICAgbWFpbkNvbnRhaW5lckRpdi5hcHBlbmRDaGlsZChmb3JtQ29udGFpbmVyKTtcblxuICAgICAgICBjb25zdCBmb3JtTW9kYWxGb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uY2xhc3NMaXN0LmFkZChcImxpc3RGb3JtTW9kYWxMaXN0SXRlbUVkaXRcIik7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcIm1vZGFsRm9ybVwiKTtcbiAgICAgICAgZm9ybU1vZGFsRm9ybS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBhcmVudExpc3RcIiwgTmFOKTtcbiAgICAgICAgZm9ybU1vZGFsRm9ybS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWl0ZW1JRFwiLCBOYU4pO1xuICAgICAgICBmb3JtTW9kYWxGb3JtLnNldEF0dHJpYnV0ZShcIm1ldGhvZFwiLCBcInBvc3RcIik7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uc2V0QXR0cmlidXRlKFwiYWN0aW9uXCIsIFwiI1wiKTtcbiAgICAgICAgZm9ybUNvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtTW9kYWxGb3JtKTtcblxuICAgICAgICBjb25zdCBpbnB1dFRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgICAgIGlucHV0VGl0bGVMYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJ0aXRsZVwiKTtcbiAgICAgICAgaW5wdXRUaXRsZUxhYmVsLmNsYXNzTGlzdC5hZGQoYGxpc3RGb3JtTW9kYWxMYWJlbGApO1xuICAgICAgICBpbnB1dFRpdGxlTGFiZWwudGV4dENvbnRlbnQgPSBgTGlzdCBUaXRsZWA7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uYXBwZW5kQ2hpbGQoaW5wdXRUaXRsZUxhYmVsKTtcblxuICAgICAgICBjb25zdCBpbnB1dFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgICAgICBpbnB1dFRpdGxlLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0XCIpO1xuICAgICAgICBpbnB1dFRpdGxlLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgaW5wdXRUaXRsZS5jbGFzc0xpc3QuYWRkKFwibGlzdEZvcm1UaXRsZVwiKTtcbiAgICAgICAgaW5wdXRUaXRsZS5wbGFjZWhvbGRlciA9IFwiTGlzdCBUaXRsZVwiO1xuICAgICAgICBpbnB1dFRpdGxlLmNsYXNzTGlzdC5hZGQoXCJsaXN0Rm9ybU1vZGFsSW5wdXRcIik7XG4gICAgICAgIGlucHV0VGl0bGUuY2xhc3NMaXN0LmFkZChgaW5wdXRCb3hNaW4xNmApO1xuICAgICAgICBpbnB1dFRpdGxlLnNldEF0dHJpYnV0ZShcImlkXCIsIFwibGlzdEZvcm1UaXRsZVwiKTtcbiAgICAgICAgaW5wdXRUaXRsZS5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwidGl0bGVcIik7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uYXBwZW5kQ2hpbGQoaW5wdXRUaXRsZSk7XG5cbiAgICAgICAgY29uc3QgZm9ybU1vZGFsRG9uZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGZvcm1Nb2RhbERvbmVCdXR0b24uY2xhc3NMaXN0LmFkZChcImxpc3RGb3JtTW9kYWxEb25lQnV0dG9uXCIpO1xuICAgICAgICBmb3JtTW9kYWxEb25lQnV0dG9uLnRleHRDb250ZW50ID0gXCJEb25lXCI7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uYXBwZW5kQ2hpbGQoZm9ybU1vZGFsRG9uZUJ1dHRvbik7XG5cbiAgICAgICAgY29uc3QgdXBkYXRlSGFzU2F2ZWRNZXNzYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgdXBkYXRlSGFzU2F2ZWRNZXNzYWdlLmNsYXNzTGlzdC5hZGQoXCJsaXN0VXBkYXRlSGFzU2F2ZWRNZXNzYWdlRm9ybU1vZGFsXCIpO1xuICAgICAgICB1cGRhdGVIYXNTYXZlZE1lc3NhZ2UudGV4dENvbnRlbnQgPSBcIlNhdmVkXCI7XG4gICAgICAgIGZvcm1Nb2RhbEZvcm0uYXBwZW5kQ2hpbGQodXBkYXRlSGFzU2F2ZWRNZXNzYWdlKTtcblxuICAgICAgICBpbnB1dFRpdGxlLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIGlmIChlLnRhcmdldC52YWx1ZS5sZW5ndGggPiAwICkge1xuICAgICAgICAgICAgY29uc3QgbGlzdEl0ZW1JRCA9IGUudGFyZ2V0LmNsb3Nlc3QoYGZvcm1gKS5kYXRhc2V0Lml0ZW1pZDtcbiAgICAgICAgICAgIGNvbnN0IHN0b3JhZ2VJdGVtID0gZGF0YUV2ZW50c09iai5nZXRMaXN0SXRlbURldGFpbHMoXCJnZXQxSXRlbVwiLCBsaXN0SXRlbUlEKTtcbiAgICAgICAgICAgIGNvbnN0IGxpc3RJdGVtID0gZGF0YUV2ZW50c09iai5jcmVhdGVMaXN0T2JqZWN0RnJvbVN0b3JhZ2Uoc3RvcmFnZUl0ZW0pO1xuXG4gICAgICAgICAgICBsaXN0SXRlbS50aXRsZSA9IGlucHV0VGl0bGUudmFsdWU7XG4gICAgICAgICAgICBsaXN0SXRlbS5jb21taXR0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgLy8gbm90IHZhbGlkYXRlZCBhcyBjb21wbGV0ZSBidXQgbm8gdHdvLXdheSBjb21tcyBoZXJlXG4gICAgICAgICAgICBsaXN0SXRlbS5hZGRJdGVtdG9EQihsaXN0SXRlbSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHVwZGF0ZUhhc1NhdmVkTWVzc2FnZS5jbGFzc0xpc3QuYWRkKFwibGlzdFVwZGF0ZUhhc1NhdmVkTWVzc2FnZUZvcm1Nb2RhbFNob3dcIik7XG4gICAgICAgICAgICBmb3JtTW9kYWxGb3JtLmNsYXNzTGlzdC5hZGQoXCJsaXN0Rm9ybU1vZGFsTGlzdEl0ZW1FZGl0U2F2ZWRcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB1cGRhdGVIYXNTYXZlZE1lc3NhZ2UuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGZvcm1Nb2RhbFNhdmVkUmVtb3ZlKTtcbiAgICAgICAgICBmdW5jdGlvbiBmb3JtTW9kYWxTYXZlZFJlbW92ZSAoZSkge1xuICAgICAgICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKFwibGlzdFVwZGF0ZUhhc1NhdmVkTWVzc2FnZUZvcm1Nb2RhbFNob3dcIik7XG4gICAgICAgICAgICAgIGZvcm1Nb2RhbEZvcm0uY2xhc3NMaXN0LnJlbW92ZShcImxpc3RGb3JtTW9kYWxMaXN0SXRlbUVkaXRTYXZlZFwiKTtcbiAgICAgICAgfVxuICAgICAgIFxuXG4gICAgICAgIGZvcm1Db250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGUpID0+IHsgXG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOyBcbiAgICAgICAgICB9KTtcblxuXG4gICAgICAgIGZvcm1Db250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICAgICAgY29uc3QgY2xpY2tPdXRzaWRlTW9kYWwgPSAhZS50YXJnZXQuY2xvc2VzdCgnLmxpc3RGb3JtTW9kYWxMaXN0SXRlbUVkaXQnKTtcbiAgICAgICAgICBpZiAoIGNsaWNrT3V0c2lkZU1vZGFsID09IHRydWUgKSB7XG4gICAgICAgICAgICBjbG9zZU1vZGFsRm9ybSgpXG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZm9ybU1vZGFsRXNjYXBlKTtcbiAgICAgICAgZnVuY3Rpb24gZm9ybU1vZGFsRXNjYXBlKGUpIHtcbiAgICAgICAgICBpZiAoIGUua2V5ID09IFwiRXNjYXBlXCIgKSB7XG4gICAgICAgICAgICBjbG9zZU1vZGFsRm9ybSgpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcm1Nb2RhbERvbmVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICAgICAgICBjbG9zZU1vZGFsRm9ybSgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBjbG9zZU1vZGFsRm9ybSA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgRE9NRXZlbnRzT2JqID0gRE9NZXZlbnRzKCk7XG4gICAgICAgIGNvbnN0IGZvcm1Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAubGlzdE1vZGFsRm9ybUNvbnRhaW5lcmApO1xuICAgICAgICBjb25zb2xlLmxvZyhmb3JtQ29udGFpbmVyLmNsYXNzTGlzdCk7XG4gICAgICAgIGlmICggZm9ybUNvbnRhaW5lci5jbGFzc0xpc3QuY29udGFpbnMoYGxpc3RGb3JtQ29udGFpbmVyVmlzaWJsZWApICkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGZvcm1Db250YWluZXIuY2xhc3NMaXN0KTtcbiAgICAgICAgICAgICAgICAvLyB1cGRhdGUgdGhlIG1haW4gcGFnZSBsaXN0aW5nIHZpZXcgdG8gcmVmbGVjdCBhbnkgY2hhbmdlcyB1cG9uIGNsb3N1cmVcbiAgICAgICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5saXN0Rm9ybU1vZGFsTGlzdEl0ZW1FZGl0YClcbiAgICAgICAgY29uc3QgbGlzdEl0ZW1JRCA9IGZvcm0uZGF0YXNldC5pdGVtaWQ7XG4gICAgICAgIGNvbnNvbGUubG9nKGxpc3RJdGVtSUQpO1xuICAgICAgICBjb25zdCBzdG9yZWRMaXN0SXRlbSA9IGRhdGFFdmVudHNPYmouZ2V0TGlzdEl0ZW1EZXRhaWxzKFwiZ2V0MUl0ZW1cIiwgbGlzdEl0ZW1JRCk7XG4gICAgICAgIGNvbnN0IGxpc3RJdGVtID0gZGF0YUV2ZW50c09iai5jcmVhdGVMaXN0T2JqZWN0RnJvbVN0b3JhZ2Uoc3RvcmVkTGlzdEl0ZW0pO1xuXG4gICAgICAgICAgaWYgKGxpc3RJdGVtLmNvbW1pdHRlZCA9PSB0cnVlICkgeyAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgbGVmdE1lbnVQcm9qZWN0SXRlbSA9IERPTUV2ZW50c09iai5hZGRMaXN0SXRlbVRvTWVudShsaXN0SXRlbSk7XG4gICAgICAgICAgICBET01FdmVudHNPYmouc2hvd0xlZnRNZW51U2VsZWN0ZWQobGVmdE1lbnVQcm9qZWN0SXRlbSwgbGlzdEl0ZW0sIGZhbHNlKTtcbiAgICAgICAgICAgIGxpc3RJdGVtLmRpc3BsYXlDaGlsZExpc3QoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZm9ybUNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKFwibGlzdEZvcm1Db250YWluZXJWaXNpYmxlXCIpO1xuICAgICAgfVxuXG4gICAgfVxuICAgIFxuICAgXG5cblxuICAgIGNvbnN0IHVwZGF0ZUlucHV0VmFsdWVzID0gKGxpc3RJdGVtKSA9PiB7XG4gICAgICBjb25zdCBmb3JtTW9kYWxGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5saXN0Rm9ybU1vZGFsTGlzdEl0ZW1FZGl0XCIpO1xuICAgICAgY29uc3QgaW5wdXRUaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGlzdEZvcm1UaXRsZVwiKTtcbiAgICAgIGlucHV0VGl0bGUudmFsdWUgPSBcIlwiO1xuICAgICAgZm9ybU1vZGFsRm9ybS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBhcmVudExpc3RcIiwgbGlzdEl0ZW0ucGFyZW50TGlzdCk7XG4gICAgICBmb3JtTW9kYWxGb3JtLnNldEF0dHJpYnV0ZShcImRhdGEtaXRlbUlEXCIsIGxpc3RJdGVtLklEKTtcbiAgICB9XG5cbiAgICBjb25zdCBzaG93Rm9ybSA9ICgpID0+IHtcbiAgICAgIGNvbnN0IGlucHV0VGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpc3RGb3JtVGl0bGVcIik7XG4gICAgICBpbnB1dFRpdGxlLmZvY3VzKCk7XG4gICAgICBjb25zdCBmb3JtQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmxpc3RNb2RhbEZvcm1Db250YWluZXJgKTtcbiAgICAgIGZvcm1Db250YWluZXIuY2xhc3NMaXN0LmFkZChcImxpc3RGb3JtQ29udGFpbmVyVmlzaWJsZVwiKTtcbiAgICB9XG4gICAgXG5cbiAgICByZXR1cm4geyBjcmVhdGVGb3JtLCB1cGRhdGVJbnB1dFZhbHVlcywgc2hvd0Zvcm0sIGNsb3NlTW9kYWxGb3JtIH1cbn0gICIsIlxuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgJy4vdGFza0Zvcm1Nb2RhbFN0eWxlLmNzcyc7XG5pbXBvcnQgJy4vbGlzdEZvcm1Nb2RhbFN0eWxlLmNzcyc7XG5cblxuaW1wb3J0IERvbUV2ZW50cyBmcm9tICcuL0RPTWV2ZW50cy5qcyc7XG5cbmNvbnN0IERvbUV2ZW50c0Z1bmN0aW9ucyA9IERvbUV2ZW50cygpO1xuRG9tRXZlbnRzRnVuY3Rpb25zLmluaXRpYWxTZXRVcCgpO1xuRG9tRXZlbnRzRnVuY3Rpb25zLmluaXRpYWxFdmVudExpc3RlbmVycygpO1xuXG5cblxuXG5cblxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJlcGxhY2UiLCJwIiwiZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyIsImRhdGUiLCJ1dGNEYXRlIiwiRGF0ZSIsIlVUQyIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZ2V0SG91cnMiLCJnZXRNaW51dGVzIiwiZ2V0U2Vjb25kcyIsImdldE1pbGxpc2Vjb25kcyIsInNldFVUQ0Z1bGxZZWFyIiwiZ2V0VGltZSIsInJlcXVpcmVkQXJncyIsInJlcXVpcmVkIiwiYXJncyIsIlR5cGVFcnJvciIsInRvRGF0ZSIsImFyZ3VtZW50IiwiYXJndW1lbnRzIiwiYXJnU3RyIiwiY29uc29sZSIsIndhcm4iLCJzdGFjayIsIk5hTiIsInN0YXJ0T2ZEYXkiLCJkaXJ0eURhdGUiLCJzZXRIb3VycyIsIk1JTExJU0VDT05EU19JTl9EQVkiLCJkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMiLCJkaXJ0eURhdGVMZWZ0IiwiZGlydHlEYXRlUmlnaHQiLCJzdGFydE9mRGF5TGVmdCIsInN0YXJ0T2ZEYXlSaWdodCIsInRpbWVzdGFtcExlZnQiLCJ0aW1lc3RhbXBSaWdodCIsIk1hdGgiLCJyb3VuZCIsInBvdyIsIm1pbGxpc2Vjb25kc0luSG91ciIsInRvSW50ZWdlciIsImRpcnR5TnVtYmVyIiwibnVtYmVyIiwiTnVtYmVyIiwiaXNOYU4iLCJjZWlsIiwiZmxvb3IiLCJwYXJzZUlTTyIsImRpcnR5T3B0aW9ucyIsImFkZGl0aW9uYWxEaWdpdHMiLCJSYW5nZUVycm9yIiwiZGF0ZVN0cmluZ3MiLCJzcGxpdERhdGVTdHJpbmciLCJwYXJzZVllYXJSZXN1bHQiLCJwYXJzZVllYXIiLCJwYXJzZURhdGUiLCJyZXN0RGF0ZVN0cmluZyIsInllYXIiLCJvZmZzZXQiLCJ0aW1lc3RhbXAiLCJ0aW1lIiwicGFyc2VUaW1lIiwidGltZXpvbmUiLCJzZXRGdWxsWWVhciIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENEYXRlIiwiZ2V0VVRDSG91cnMiLCJnZXRVVENNaW51dGVzIiwiZ2V0VVRDU2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsInBhcnNlVGltZXpvbmUiLCJwYXR0ZXJucyIsImRhdGVUaW1lRGVsaW1pdGVyIiwidGltZVpvbmVEZWxpbWl0ZXIiLCJkYXRlUmVnZXgiLCJ0aW1lUmVnZXgiLCJ0aW1lem9uZVJlZ2V4IiwiZGF0ZVN0cmluZyIsInRpbWVTdHJpbmciLCJhcnJheSIsInNwbGl0IiwidGVzdCIsInN1YnN0ciIsInRva2VuIiwiZXhlYyIsInJlZ2V4IiwiUmVnRXhwIiwiY2FwdHVyZXMiLCJtYXRjaCIsInBhcnNlSW50IiwiY2VudHVyeSIsInNsaWNlIiwiaXNXZWVrRGF0ZSIsImRheU9mWWVhciIsInBhcnNlRGF0ZVVuaXQiLCJtb250aCIsImRheSIsIndlZWsiLCJkYXlPZldlZWsiLCJfeWVhciIsInZhbGlkYXRlV2Vla0RhdGUiLCJpc29XZWVrWWVhciIsImRpZmYiLCJnZXRVVENEYXkiLCJzZXRVVENEYXRlIiwiZGF5T2ZJU09XZWVrWWVhciIsImRheXNJbk1vbnRocyIsImlzTGVhcFllYXJJbmRleCIsInZhbGlkYXRlRGF0ZSIsInZhbGlkYXRlRGF5T2ZZZWFyRGF0ZSIsIm1heCIsInZhbHVlIiwiaG91cnMiLCJwYXJzZVRpbWVVbml0IiwibWludXRlcyIsInNlY29uZHMiLCJ2YWxpZGF0ZVRpbWUiLCJwYXJzZUZsb2F0IiwidGltZXpvbmVTdHJpbmciLCJzaWduIiwiX2hvdXJzIiwidmFsaWRhdGVUaW1lem9uZSIsImNvbXBhcmVBc2MiLCJkYXRlTGVmdCIsImRhdGVSaWdodCIsImRpZmZlcmVuY2VJbkNhbGVuZGFyTW9udGhzIiwieWVhckRpZmYiLCJtb250aERpZmYiLCJlbmRPZkRheSIsImVuZE9mTW9udGgiLCJpc0xhc3REYXlPZk1vbnRoIiwiZGlmZmVyZW5jZUluTW9udGhzIiwiZGlmZmVyZW5jZSIsImFicyIsInNldERhdGUiLCJzZXRNb250aCIsImlzTGFzdE1vbnRoTm90RnVsbCIsImRpZmZlcmVuY2VJbk1pbGxpc2Vjb25kcyIsInJvdW5kaW5nTWFwIiwidHJ1bmMiLCJnZXRSb3VuZGluZ01ldGhvZCIsIm1ldGhvZCIsImRpZmZlcmVuY2VJblNlY29uZHMiLCJyb3VuZGluZ01ldGhvZCIsImZvcm1hdERpc3RhbmNlTG9jYWxlIiwibGVzc1RoYW5YU2Vjb25kcyIsIm9uZSIsIm90aGVyIiwieFNlY29uZHMiLCJoYWxmQU1pbnV0ZSIsImxlc3NUaGFuWE1pbnV0ZXMiLCJ4TWludXRlcyIsImFib3V0WEhvdXJzIiwieEhvdXJzIiwieERheXMiLCJhYm91dFhXZWVrcyIsInhXZWVrcyIsImFib3V0WE1vbnRocyIsInhNb250aHMiLCJhYm91dFhZZWFycyIsInhZZWFycyIsIm92ZXJYWWVhcnMiLCJhbG1vc3RYWWVhcnMiLCJidWlsZEZvcm1hdExvbmdGbiIsIndpZHRoIiwiU3RyaW5nIiwiZGVmYXVsdFdpZHRoIiwiZm9ybWF0IiwiZm9ybWF0cyIsImZ1bGwiLCJsb25nIiwibWVkaXVtIiwic2hvcnQiLCJkYXRlVGltZSIsImZvcm1hdFJlbGF0aXZlTG9jYWxlIiwibGFzdFdlZWsiLCJ5ZXN0ZXJkYXkiLCJ0b2RheSIsInRvbW9ycm93IiwibmV4dFdlZWsiLCJidWlsZExvY2FsaXplRm4iLCJkaXJ0eUluZGV4IiwidmFsdWVzQXJyYXkiLCJjb250ZXh0IiwiZm9ybWF0dGluZ1ZhbHVlcyIsImRlZmF1bHRGb3JtYXR0aW5nV2lkdGgiLCJfZGVmYXVsdFdpZHRoIiwiX3dpZHRoIiwidmFsdWVzIiwiYXJndW1lbnRDYWxsYmFjayIsIm9yZGluYWxOdW1iZXIiLCJfb3B0aW9ucyIsInJlbTEwMCIsImVyYSIsIm5hcnJvdyIsImFiYnJldmlhdGVkIiwid2lkZSIsInF1YXJ0ZXIiLCJkYXlQZXJpb2QiLCJhbSIsInBtIiwibWlkbmlnaHQiLCJub29uIiwibW9ybmluZyIsImFmdGVybm9vbiIsImV2ZW5pbmciLCJuaWdodCIsImJ1aWxkTWF0Y2hGbiIsInN0cmluZyIsIm1hdGNoUGF0dGVybiIsIm1hdGNoUGF0dGVybnMiLCJkZWZhdWx0TWF0Y2hXaWR0aCIsIm1hdGNoUmVzdWx0IiwibWF0Y2hlZFN0cmluZyIsInBhcnNlUGF0dGVybnMiLCJkZWZhdWx0UGFyc2VXaWR0aCIsIkFycmF5IiwiaXNBcnJheSIsImZpbmRJbmRleCIsInBhdHRlcm4iLCJmaW5kS2V5IiwidmFsdWVDYWxsYmFjayIsInJlc3QiLCJvYmplY3QiLCJwcmVkaWNhdGUiLCJwYXJzZVBhdHRlcm4iLCJwYXJzZVJlc3VsdCIsImFueSIsImNvZGUiLCJmb3JtYXREaXN0YW5jZSIsInRva2VuVmFsdWUiLCJhZGRTdWZmaXgiLCJjb21wYXJpc29uIiwiZm9ybWF0TG9uZyIsImZvcm1hdFJlbGF0aXZlIiwiX2RhdGUiLCJfYmFzZURhdGUiLCJsb2NhbGl6ZSIsIndlZWtTdGFydHNPbiIsImZpcnN0V2Vla0NvbnRhaW5zRGF0ZSIsImNsb25lT2JqZWN0IiwiZGlydHlPYmplY3QiLCJwcm9wZXJ0eSIsIk1JTlVURVNfSU5fREFZIiwiTUlOVVRFU19JTl9NT05USCIsImRpcnR5QmFzZURhdGUiLCJsb2NhbGUiLCJsb2NhbGl6ZU9wdGlvbnMiLCJCb29sZWFuIiwibW9udGhzIiwib2Zmc2V0SW5TZWNvbmRzIiwiaW5jbHVkZVNlY29uZHMiLCJkYXlzIiwibmVhcmVzdE1vbnRoIiwibW9udGhzU2luY2VTdGFydE9mWWVhciIsInllYXJzIiwiZm9ybWF0RGlzdGFuY2VUb05vdyIsIm5vdyIsImRhdGFFdmVudHMiLCJsaXN0SXRlbU9iamVjdCIsIkxpc3RJdGVtT2JqIiwiYWRkTGlzdEl0ZW1Ub0RCIiwibGlzdEl0ZW0iLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiSUQiLCJmaW5kTmV4dExpc3RJRCIsImlkQXJyYXkiLCJrZXlzIiwibmV4dElEIiwicmVkdWNlIiwiYiIsImdldExpc3RJdGVtRGV0YWlscyIsInJlcXVlc3RUeXBlIiwiaXRlbUlEIiwic3RvcmFnZUl0ZW1zQXJyYXkiLCJzdG9yYWdlS2V5cyIsIml0ZW1Ub0FkZCIsInBhcnNlIiwiZ2V0SXRlbSIsImZpbHRlciIsInBhcmVudExpc3QiLCJjb21taXR0ZWQiLCJmaW5kIiwiY2hpbGRMaXN0Iiwic29ydCIsInNvcnRWYWx1ZSIsImRheXNBIiwiZHVlRGF0ZSIsImRheXNCIiwiY3JlYXRlTGlzdE9iamVjdEZyb21TdG9yYWdlIiwic3RvcmVkSXRlbSIsIm5ld0xpc3RJdGVtIiwidGl0bGUiLCJpbXBvcnRhbmNlIiwicGlubmVkIiwic2VsZWN0ZWQiLCJjb21wbGV0ZWQiLCJhZGRTdGF0ZVNlbGVjdGVkIiwicmVtb3ZlU3RhdGVTZWxlY3RlZCIsImRheXNVbnRpbER1ZSIsImRheXNVbnRpbER1ZVdvcmRzIiwiZGVsZXRlVGhpc09iamVjdEZyb21EQiIsInJlbW92ZUl0ZW0iLCJsaXN0SXRlbUlEIiwibGlzdEl0ZW1UaXRsZSIsImRhdGFFdmVudHNPYmoiLCJET01FdmVudHNPYmoiLCJEb21FdmVudHMiLCJhZGRJdGVtdG9EQiIsInNlbGVjdGVkU3RhdGVBZGQiLCJzZWxlY3RlZFN0YXRlUmVtb3ZlIiwiZGlzcGxheUNoaWxkTGlzdCIsImRpc3BsYXlMaXN0SXRlbUNoaWxkcmVuIiwiZGF5c0xlZnRUb0R1ZSIsImRlbGV0ZUZyb21EQiIsInRhc2tGb3JtTW9kYWxPYmplY3QiLCJjbG9zZU1vZGFsRm9ybSIsImZvcm1Db250YWluZXIiLCJ1cGRhdGVQYWdlVXBvbkNsb3N1cmUiLCJjbGFzc0xpc3QiLCJkYXRhc2V0IiwiaXRlbWlkIiwic3RvcmVkTGlzdEl0ZW0iLCJsaXN0SXRlbVBhcmVudE9iamVjdCIsImNyZWF0ZUZvcm0iLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsIm1haW5Db250YWluZXJEaXYiLCJhZGQiLCJmb3JtTW9kYWxGb3JtIiwiaW5wdXRUaXRsZUxhYmVsIiwidGV4dENvbnRlbnQiLCJpbnB1dFRpdGxlIiwiaW5wdXREdWVEYXRlTGFiZWwiLCJpbnB1dER1ZURhdGUiLCJmb3JtTW9kYWxEb25lQnV0dG9uIiwidXBkYXRlSGFzU2F2ZWRNZXNzYWdlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsb3Nlc3QiLCJzdG9yYWdlSXRlbSIsInByZXZlbnREZWZhdWx0IiwidXBkYXRlSW5wdXRWYWx1ZXMiLCJnZXRFbGVtZW50QnlJZCIsInNob3dGb3JtIiwiZm9jdXMiLCJsaXN0Rm9ybU1vZGFsT2JqZWN0IiwibG9nIiwiY29udGFpbnMiLCJsZWZ0TWVudVByb2plY3RJdGVtIiwiYWRkTGlzdEl0ZW1Ub01lbnUiLCJzaG93TGVmdE1lbnVTZWxlY3RlZCIsInBsYWNlaG9sZGVyIiwiYWRkVGltZUJhc2VkQnJlYWtQb2ludHMiLCJtYWluUGFnZUxpc3RDb250ZW50IiwibWFpblBhZ2VMaXN0Q29udGVudE5ld0l0ZW0iLCJtYWluUGFnZUxpc3RDb250ZW50TmV3SXRlbUhlYWRpbmdDb250YWluZXIiLCJtYWluUGFnZUxpc3RDb250ZW50TmV3SXRlbUltZyIsIkltYWdlIiwiYWx0IiwibWFpblBhZ2VMaXN0Q29udGVudE5ld0l0ZW1IZWFkaW5nVGV4dCIsIm1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlIiwibWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWVJdGVtSGVhZGluZ0NvbnRhaW5lciIsIm1haW5QYWdlTGlzdENvbnRlbnRPdmVyZHVlSW1nIiwibWFpblBhZ2VMaXN0Q29udGVudE92ZXJkdWVIZWFkaW5nIiwibWFpblBhZ2VMaXN0Q29udGVudE5leHRXZWVrIiwibWFpblBhZ2VMaXN0Q29udGVudE5leHRXZWVrSGVhZGluZ0NvbnRhaW5lciIsIm1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vla0ltZyIsIm1haW5QYWdlTGlzdENvbnRlbnROZXh0V2Vla0hlYWRpbmciLCJtYWluUGFnZUxpc3RDb250ZW50QWZ0ZXJOZXh0V2VlayIsIm1haW5QYWdlTGlzdENvbnRlbnRBZnRlck5leHRXZWVrSGVhZGluZ0NvbnRhaW5lciIsIm1haW5QYWdlTGlzdENvbnRlbnRBZnRlck5leHRXZWVrSW1nIiwibWFpblBhZ2VMaXN0Q29udGVudEFmdGVyTmV4dFdlZWtIZWFkaW5nIiwibWFpblBhZ2VMaXN0Q29udGVudE5vRGF0ZVNldCIsIm1haW5QYWdlTGlzdENvbnRlbnROb0RhdGVTZXRIZWFkaW5nQ29udGFpbmVyIiwibWFpblBhZ2VMaXN0Q29udGVudE5vRGF0ZVNldEltZyIsIm1haW5QYWdlTGlzdENvbnRlbnROb0RhdGVTZXRIZWFkaW5nIiwibWFpblBhZ2VMaXN0Q29udGVudENvbXBsZXRlIiwibWFpblBhZ2VMaXN0Q29udGVudENvbXBsZXRlSGVhZGluZ0NvbnRhaW5lciIsIm1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZUltZyIsIm1haW5QYWdlTGlzdENvbnRlbnRDb21wbGV0ZUhlYWRpbmciLCJjcmVhdGVFbXB0eUxpc3RJdGVtIiwicGFyZW50SUQiLCJhZGRpdGlvbmFsTGlzdEl0ZW0iLCJjcmVhdGVNYWluUGFnZUxpc3RpbmdGb3JtIiwic2hvd0JyZWFrUG9pbnRDbGFzcyIsImFwcGVuZFRvVGhpcyIsIm1haW5QYWdlTGlzdEl0ZW1DYXJkIiwiaW5zZXJ0QmVmb3JlIiwibW92ZVRoaXNIZWFkZXIiLCJyZWZyZXNoQnJlYWtQb2ludEhlYWRpbmciLCJtYWluUGFnZUxpc3RJdGVtQ29udGVudExlZnQiLCJsaXN0SXRlbUZvcm0iLCJmb3JtRGlzcGxheUR1ZURhdGUiLCJtYWluUGFnZUxpc3RJdGVtQ29udGVudFJpZ2h0IiwiY2hlY2tCb3hJbWdCdXR0b24iLCJjaGVja0JveEltZ0VsZSIsInBhcmVudFN0b3JlZEl0ZW0iLCJwZW5jaWxJbWdCdXR0b24iLCJwZW5jaWxJbWdFbGUiLCJ0cmFzaEltZ0J1dHRvbiIsInRyYXNoSW1nRWxlIiwiaXRlbVNhdmVkTWVzc2FnZSIsIm1hcmtNYWluUGFnZUxpc3RpbmdDYXJkQXNTZWxlY3RlZCIsImNhcmRFbGVtZW50IiwiY29uZmlybSIsImRhdGFJdGVtSUQiLCJ0aGlzSXRlbSIsImxlZnRNZW51UHJvamVjdEl0ZW1MaXN0IiwiTGlzdEltZ0VsZSIsImxlZnRNZW51SXRlbVRpdGxlIiwiZGVsZXRlVW5jb21taXR0ZWRFbnRyaWVzIiwibGVmdE1lbnVFdmVudExpc3RlbmVycyIsIm5ld0xpc3RCdXR0b24iLCJsZWZ0TWVudSIsInJlcG9zaXRpb25OZXdMaXN0QnV0dG9uIiwiaW5pdGlhbExvYWQiLCJyZW1vdmVQcmV2aW91c1NlbGVjdGlvbiIsImxpc3RpdGVtaWQiLCJwYXJlbnRCdXR0b24iLCJjbGlja2VkRWxlbWVudCIsInRvZ2dsZUxlZnRNZW51U2hvdyIsImFjdGlvbiIsImJ1cmdlckZseU91dEJ1dHRvbiIsIm5hdkFkZE5ld0l0ZW0iLCJpbml0aWFsU2V0VXAiLCJjb250ZW50RGl2IiwibGVmdE1lbnVOYXYiLCJidXJnZXJGbHlPdXRJbWdFbGUiLCJtYWluUGFnZUxpc3RDb250YWluZXIiLCJtYWluUGFnZUxpc3RDb250ZW50TmF2QmFyIiwiTGVmdE1lbnVMaXN0SXRlbXMiLCJpbml0aWFsRXZlbnRMaXN0ZW5lcnMiLCJsaXN0TWVudUNoaWxkcmVuIiwicHJldmlvdXNIZWFkaW5nIiwicGFyZW50VGl0bGUiLCJwYWdlVGl0bGUiLCJjaGlsZExpc3RJdGVtT2JqZWN0IiwicHJldmlvdXNCdXR0b24iLCJidXR0b25BZGRBbm90aGVyTGlzdEl0ZW0iLCJEb21FdmVudHNGdW5jdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9